{"parents": [], "prev": {"link": "../packages/", "title": "Packages"}, "next": {"link": "using/", "title": "Using Plugins"}, "title": "Plugins", "meta": {}, "body": "<section id=\"plugins\">\n<span id=\"id1\"></span><h1>Plugins<a class=\"headerlink\" href=\"#plugins\" title=\"Permalink to this heading\">#</a></h1>\n<p><a class=\"reference external\" href=\"https://www.steamship.com/plugins\">Steamship Plugins</a> perform specific tasks related to AI.</p>\n<ul class=\"simple\">\n<li><p>How to <a class=\"reference internal\" href=\"using/#using-plugins\"><span class=\"std std-ref\">use plugins</span></a></p></li>\n<li><p>How to <a class=\"reference internal\" href=\"developing/#developingpluginssec\"><span class=\"std std-ref\">develop plugins</span></a></p></li>\n</ul>\n<p>Steamship supports the following types of plugins:</p>\n<section id=\"file-importers\">\n<h2>File Importers<a class=\"headerlink\" href=\"#file-importers\" title=\"Permalink to this heading\">#</a></h2>\n<p>Importers pull raw data from common external sources into a <a class=\"reference internal\" href=\"../data/files/#files\"><span class=\"std std-ref\">File</span></a>.</p>\n<p><em>Examples</em>: A YouTube video importer imports video content given a URL, A Notion importer imports a document from a Notion space.</p>\n<ul class=\"simple\">\n<li><p><a class=\"reference internal\" href=\"using/importers/#file-importers\"><span class=\"std std-ref\">Using File Importers</span></a></p></li>\n<li><p><a class=\"reference internal\" href=\"developing/importers/#developingfileimporters\"><span class=\"std std-ref\">Developing File Importers</span></a></p></li>\n</ul>\n</section>\n<section id=\"blockifiers\">\n<h2>Blockifiers<a class=\"headerlink\" href=\"#blockifiers\" title=\"Permalink to this heading\">#</a></h2>\n<p>Blockifiers extract text and other content from raw data in a <a class=\"reference internal\" href=\"../data/files/#files\"><span class=\"std std-ref\">File</span></a> to <a class=\"reference internal\" href=\"../data/blocks/#blocks\"><span class=\"std std-ref\">Blocks</span></a>.</p>\n<p><em>Examples</em>: Whisper speech to text turns an audio file into a text transcript, a PDF extractor could pull the text chunks and images from a PDF document.</p>\n<ul class=\"simple\">\n<li><p><a class=\"reference internal\" href=\"using/blockifiers/#blockifiers\"><span class=\"std std-ref\">Using Importers</span></a></p></li>\n<li><p><a class=\"reference internal\" href=\"developing/blockifiers/#developingblockifierssec\"><span class=\"std std-ref\">Developing Importers</span></a></p></li>\n</ul>\n</section>\n<section id=\"taggers\">\n<h2>Taggers<a class=\"headerlink\" href=\"#taggers\" title=\"Permalink to this heading\">#</a></h2>\n<p>Taggers create <a class=\"reference internal\" href=\"../data/tags/#tags\"><span class=\"std std-ref\">Tags</span></a> (annotations) on <a class=\"reference internal\" href=\"../data/files/#files\"><span class=\"std std-ref\">Files</span></a> and <a class=\"reference internal\" href=\"../data/blocks/#blocks\"><span class=\"std std-ref\">Blocks</span></a>.</p>\n<p><em>Examples</em>: A text classifier would attach a classification <code class=\"docutils literal notranslate\"><span class=\"pre\">Tag</span></code> to a <code class=\"docutils literal notranslate\"><span class=\"pre\">Block</span></code>, an image object recognizer would add <code class=\"docutils literal notranslate\"><span class=\"pre\">Tags</span></code> to a <code class=\"docutils literal notranslate\"><span class=\"pre\">Block</span></code> that identified known objects.</p>\n<ul class=\"simple\">\n<li><p><a class=\"reference internal\" href=\"using/taggers/#taggers\"><span class=\"std std-ref\">Using Taggers</span></a></p></li>\n<li><p><a class=\"reference internal\" href=\"developing/taggers/#developingtaggers\"><span class=\"std std-ref\">Developing Taggers</span></a></p></li>\n</ul>\n</section>\n<section id=\"generators\">\n<h2>Generators<a class=\"headerlink\" href=\"#generators\" title=\"Permalink to this heading\">#</a></h2>\n<p>Generators create new content from existing content.</p>\n<p><em>Examples</em>: GPT4 creates more text based on the existing text in a conversation, DALL-E creates an image based on a description.</p>\n<ul class=\"simple\">\n<li><p><a class=\"reference internal\" href=\"using/generators/#generators\"><span class=\"std std-ref\">Using Generators</span></a></p></li>\n<li><p><a class=\"reference internal\" href=\"developing/generators/#developinggenerators\"><span class=\"std std-ref\">Developing Taggers</span></a></p></li>\n</ul>\n</section>\n<section id=\"embedders\">\n<h2>Embedders<a class=\"headerlink\" href=\"#embedders\" title=\"Permalink to this heading\">#</a></h2>\n<p>Embedders convert content into a vector representation. This is primarily used in combination with Steamship\u2019s built in :ref:&lt;Embedding Search Index&gt;.</p>\n<p><em>Examples</em>: Use OpenAI to embed sentences into vectors for search; embed images into vectors for search</p>\n<ul class=\"simple\">\n<li><p><a class=\"reference internal\" href=\"using/embedders/#embedders\"><span class=\"std std-ref\">Using Embedders</span></a></p></li>\n<li><p><a class=\"reference internal\" href=\"developing/embedders/#developingembedders\"><span class=\"std std-ref\">Developing Embedders</span></a></p></li>\n</ul>\n<div class=\"toctree-wrapper compound\">\n</div>\n</section>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.17.1: http://docutils.sourceforge.net/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["plugins/using/index", "Using Plugins", "N", "next"], ["packages/index", "Packages", "P", "previous"]], "sourcename": "plugins/index.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Plugins</a><ul>\n<li><a class=\"reference internal\" href=\"#file-importers\">File Importers</a></li>\n<li><a class=\"reference internal\" href=\"#blockifiers\">Blockifiers</a></li>\n<li><a class=\"reference internal\" href=\"#taggers\">Taggers</a></li>\n<li><a class=\"reference internal\" href=\"#generators\">Generators</a></li>\n<li><a class=\"reference internal\" href=\"#embedders\">Embedders</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "plugins/index", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "furo_version": "2023.03.27", "furo_navigation_tree": "", "furo_hide_toc": false, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#272822", "foreground": "#f8f8f2"}}}