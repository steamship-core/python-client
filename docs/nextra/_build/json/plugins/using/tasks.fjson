{"parents": [{"link": "../../", "title": "Plugins"}, {"link": "../", "title": "Using Plugins"}], "prev": {"link": "../embedders/", "title": "Embedders"}, "next": {"link": "../../developing/", "title": "Developing Plugins"}, "title": "Tasks", "meta": null, "body": "<section id=\"tasks\">\n<span id=\"id1\"></span><h1>Tasks<a class=\"headerlink\" href=\"#tasks\" title=\"Permalink to this heading\">#</a></h1>\n<p>Most <a class=\"reference internal\" href=\"../../#plugins\"><span class=\"std std-ref\">Plugin</span></a> operations return a <code class=\"docutils literal notranslate\"><span class=\"pre\">Task</span></code>.  This allows you to conveniently handle the long,\nasynchronous aspect of many plugin invocations.</p>\n<section id=\"waiting-on-tasks\">\n<h2>Waiting on Tasks<a class=\"headerlink\" href=\"#waiting-on-tasks\" title=\"Permalink to this heading\">#</a></h2>\n<p>If your code does not need to do any other work while the <code class=\"docutils literal notranslate\"><span class=\"pre\">Plugin</span></code> is running, you may <code class=\"docutils literal notranslate\"><span class=\"pre\">wait()</span></code> on the <code class=\"docutils literal notranslate\"><span class=\"pre\">Task</span></code>:</p>\n<p>This will make your code poll the Steamship service until either the <code class=\"docutils literal notranslate\"><span class=\"pre\">Task</span></code> is complete, or the wait timeout is reached.</p>\n<div class=\"admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>Waiting on the task may time out before the <code class=\"docutils literal notranslate\"><span class=\"pre\">Task</span></code> is complete. Don\u2019t worry, the <code class=\"docutils literal notranslate\"><span class=\"pre\">Task</span></code> is still running on the server.\nYou can increase the time you wait by passing the <code class=\"docutils literal notranslate\"><span class=\"pre\">max_timeout_s</span></code> parameter.</p>\n</div>\n</section>\n<section id=\"returning-tasks-from-a-package\">\n<h2>Returning Tasks from a Package<a class=\"headerlink\" href=\"#returning-tasks-from-a-package\" title=\"Permalink to this heading\">#</a></h2>\n<p>One common pattern when your package does long asynchronous work is to return a <code class=\"docutils literal notranslate\"><span class=\"pre\">Task</span></code> id which can\nbe used later to check on the status of the <code class=\"docutils literal notranslate\"><span class=\"pre\">Task</span></code>. To check the status of a <code class=\"docutils literal notranslate\"><span class=\"pre\">Task</span></code> from its id:</p>\n<p>Once you have a task object again, you can <code class=\"docutils literal notranslate\"><span class=\"pre\">wait()</span></code> on it, or check its <code class=\"docutils literal notranslate\"><span class=\"pre\">state</span></code> variable.</p>\n</section>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.17.1: http://docutils.sourceforge.net/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["plugins/developing/index", "Developing Plugins", "N", "next"], ["plugins/using/embedders/index", "Embedders", "P", "previous"]], "sourcename": "plugins/using/tasks.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Tasks</a><ul>\n<li><a class=\"reference internal\" href=\"#waiting-on-tasks\">Waiting on Tasks</a></li>\n<li><a class=\"reference internal\" href=\"#returning-tasks-from-a-package\">Returning Tasks from a Package</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "plugins/using/tasks", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "furo_version": "2023.03.27", "furo_navigation_tree": "", "furo_hide_toc": false, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#272822", "foreground": "#f8f8f2"}}}