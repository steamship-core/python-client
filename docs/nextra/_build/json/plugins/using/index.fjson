{"parents": [{"link": "../", "title": "Plugins"}], "prev": {"link": "../", "title": "Plugins"}, "next": {"link": "importers/", "title": "File Importers"}, "title": "Using Plugins", "meta": null, "body": "<section id=\"using-plugins\">\n<span id=\"id1\"></span><h1>Using Plugins<a class=\"headerlink\" href=\"#using-plugins\" title=\"Permalink to this heading\">#</a></h1>\n<p><a class=\"reference external\" href=\"https://www.steamship.com/plugins\">Steamship Plugins</a> perform specific tasks related to AI.</p>\n<p>This page is about using existing plugins. If you want to develop a <code class=\"docutils literal notranslate\"><span class=\"pre\">Plugin</span></code>, see <a class=\"reference internal\" href=\"../developing/#developingpluginssec\"><span class=\"std std-ref\">Developing Plugins</span></a></p>\n<p>Steamship supports the following types of plugins:</p>\n<ul class=\"simple\">\n<li><p><a class=\"reference internal\" href=\"importers/#file-importers\"><span class=\"std std-ref\">File Importers</span></a> pull raw data from common external sources into <a class=\"reference internal\" href=\"../../data/files/#files\"><span class=\"std std-ref\">Files</span></a>.</p></li>\n<li><p><a class=\"reference internal\" href=\"blockifiers/#blockifiers\"><span class=\"std std-ref\">Blockifiers</span></a> extract text and other content from raw data from <a class=\"reference internal\" href=\"../../data/files/#files\"><span class=\"std std-ref\">Files</span></a> to <a class=\"reference internal\" href=\"../../data/blocks/#blocks\"><span class=\"std std-ref\">Blocks</span></a>.</p></li>\n<li><p><a class=\"reference internal\" href=\"taggers/#taggers\"><span class=\"std std-ref\">Taggers</span></a> create <a class=\"reference internal\" href=\"../../data/tags/#tags\"><span class=\"std std-ref\">Tags</span></a> (annotations) on <a class=\"reference internal\" href=\"../../data/files/#files\"><span class=\"std std-ref\">Files</span></a> and <a class=\"reference internal\" href=\"../../data/blocks/#blocks\"><span class=\"std std-ref\">Blocks</span></a>.</p></li>\n<li><p><a class=\"reference internal\" href=\"generators/#generators\"><span class=\"std std-ref\">Generators</span></a> create new <a class=\"reference internal\" href=\"../../data/blocks/#blocks\"><span class=\"std std-ref\">Blocks</span></a> (content) from existing <a class=\"reference internal\" href=\"../../data/blocks/#blocks\"><span class=\"std std-ref\">Blocks</span></a> (content).</p></li>\n<li><p><a class=\"reference internal\" href=\"embedders/#embedders\"><span class=\"std std-ref\">Embedders</span></a> convert content into a vector representation. This is primarily used in combination with Steamship\u2019s built in Embedding Search.</p></li>\n</ul>\n<section id=\"plugin-instances\">\n<span id=\"creating-plugin-instances\"></span><h2>Plugin Instances<a class=\"headerlink\" href=\"#plugin-instances\" title=\"Permalink to this heading\">#</a></h2>\n<p>To use a <code class=\"docutils literal notranslate\"><span class=\"pre\">Plugin</span></code>, create an instance of it. When building into a <a class=\"reference internal\" href=\"../../packages/#packages\"><span class=\"std std-ref\">Package</span></a>, We recommend doing this in the constructor, and saving the result as a member\nvariable.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">gpt4</span> <span class=\"o\">=</span> <span class=\"n\">steamship</span><span class=\"o\">.</span><span class=\"n\">use_plugin</span><span class=\"p\">(</span><span class=\"s2\">&quot;gpt-4&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p><code class=\"docutils literal notranslate\"><span class=\"pre\">gpt4</span></code> is now a <code class=\"docutils literal notranslate\"><span class=\"pre\">PluginInstance</span></code>. The instance contains the plugin\u2019s configuration and is locked to the current version of the <code class=\"docutils literal notranslate\"><span class=\"pre\">Plugin</span></code>.</p>\n<p>To use a specific version of the <code class=\"docutils literal notranslate\"><span class=\"pre\">Plugin</span></code>, pass the version handle:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">gpt4</span> <span class=\"o\">=</span> <span class=\"n\">steamship</span><span class=\"o\">.</span><span class=\"n\">use_plugin</span><span class=\"p\">(</span><span class=\"s2\">&quot;gpt-4&quot;</span><span class=\"p\">,</span> <span class=\"n\">version</span><span class=\"o\">=</span><span class=\"s2\">&quot;0.0.1-rc.4&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>To override default configuration parameters or provide required configuration values, pass a <code class=\"docutils literal notranslate\"><span class=\"pre\">dict</span></code> of values in the <code class=\"docutils literal notranslate\"><span class=\"pre\">config</span></code> parameter:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">gpt4</span> <span class=\"o\">=</span> <span class=\"n\">steamship</span><span class=\"o\">.</span><span class=\"n\">use_plugin</span><span class=\"p\">(</span><span class=\"s2\">&quot;gpt-4&quot;</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;max_tokens&quot;</span><span class=\"p\">:</span><span class=\"mi\">1024</span><span class=\"p\">})</span>\n</pre></div>\n</div>\n<p>To see available configuration parameters, check the documentation of the specific <code class=\"docutils literal notranslate\"><span class=\"pre\">Plugin</span></code>.</p>\n<p>To use a <code class=\"docutils literal notranslate\"><span class=\"pre\">PluginInstance</span></code>, call the type-specific methods on it:</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">result_task</span> <span class=\"o\">=</span> <span class=\"n\">gpt4</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s2\">&quot;What&#39;s up GPT?&quot;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Plugin invocations return asynchronous <a class=\"reference internal\" href=\"tasks/#tasks\"><span class=\"std std-ref\">Tasks</span></a> so that you can easily run many plugins and control when you need\nthe results.</p>\n<p>See the plugin individual plugin types for further info on how each can be called.</p>\n<section id=\"plugin-faq\">\n<h3>Plugin FAQ<a class=\"headerlink\" href=\"#plugin-faq\" title=\"Permalink to this heading\">#</a></h3>\n<ul class=\"simple\">\n<li><p><a class=\"reference internal\" href=\"#can-i-access-my-plugin-over-http\"><span class=\"std std-ref\">Can I access my plugin over HTTP?</span></a></p></li>\n</ul>\n<section id=\"can-i-access-my-plugin-over-http\">\n<span id=\"id2\"></span><h4>Can I access my plugin over HTTP?<a class=\"headerlink\" href=\"#can-i-access-my-plugin-over-http\" title=\"Permalink to this heading\">#</a></h4>\n<p>Yes. While the preferred access pattern for plugins is via our SDK, Steamship does expose an HTTP API endpoint for plugin instance invocation.</p>\n<p>The HTTP endpoint for plugin instance invocation is: <code class=\"docutils literal notranslate\"><span class=\"pre\">https://api.steamship.com/api/v1/plugin/instance/{plugin-method}</span></code>.</p>\n<p>Replace <code class=\"docutils literal notranslate\"><span class=\"pre\">{plugin-method}</span></code> with the name of the method you wish to invoke on your instance. For instance, for <a class=\"reference internal\" href=\"generators/#generators\"><span class=\"std std-ref\">Generators</span></a>, use <code class=\"docutils literal notranslate\"><span class=\"pre\">generate</span></code> and\nfor <a class=\"reference internal\" href=\"taggers/#taggers\"><span class=\"std std-ref\">Taggers</span></a>, use <code class=\"docutils literal notranslate\"><span class=\"pre\">tag</span></code>.</p>\n<p>Your HTTP call MUST use the following conventions:</p>\n<ul class=\"simple\">\n<li><p>Set the <code class=\"docutils literal notranslate\"><span class=\"pre\">Content-Type</span></code> header to <code class=\"docutils literal notranslate\"><span class=\"pre\">application/json</span></code></p></li>\n<li><p>Set the <code class=\"docutils literal notranslate\"><span class=\"pre\">Authorization</span></code> header to <code class=\"docutils literal notranslate\"><span class=\"pre\">Bearer</span> <span class=\"pre\">{api-key}</span></code>, replacing <code class=\"docutils literal notranslate\"><span class=\"pre\">{api-key}</span></code> with your API Key</p></li>\n<li><dl class=\"simple\">\n<dt>Set one of the following headers:</dt><dd><ul>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">X-Workspace-Id</span></code> (to the workspace UUID for your workspace)</p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">X-Workspace-Handle</span></code> (to the workspace handle for your workspace)</p></li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><p>Default to <code class=\"docutils literal notranslate\"><span class=\"pre\">HTTP</span> <span class=\"pre\">POST</span></code> if you\u2019re not sure which verb to use. The plugin documentation should specify.</p></li>\n<li><dl class=\"simple\">\n<dt>Add the arguments as a JSON-encoded POST Body</dt><dd><ul>\n<li><p>This MUST include a <code class=\"docutils literal notranslate\"><span class=\"pre\">pluginInstance</span></code> field set to the instance handle of your plugin.</p></li>\n</ul>\n</dd>\n</dl>\n</li>\n</ul>\n<p>For example, the HTTP equivalent of:</p>\n<blockquote>\n<div><div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">gpt4</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s1\">&#39;Name three kinds of dogs&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div></blockquote>\n<p>would be:</p>\n<blockquote>\n<div><div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">POST</span> <span class=\"o\">/</span><span class=\"n\">api</span><span class=\"o\">/</span><span class=\"n\">v1</span><span class=\"o\">/</span><span class=\"n\">plugin</span><span class=\"o\">/</span><span class=\"n\">instance</span><span class=\"o\">/</span><span class=\"n\">generate</span>\n<span class=\"n\">Content</span><span class=\"o\">-</span><span class=\"n\">Type</span><span class=\"p\">:</span> <span class=\"n\">application</span><span class=\"o\">/</span><span class=\"n\">json</span>\n<span class=\"n\">Authorization</span><span class=\"p\">:</span> <span class=\"n\">Bearer</span> <span class=\"p\">{</span><span class=\"n\">api</span><span class=\"o\">-</span><span class=\"n\">key</span><span class=\"p\">}</span>\n<span class=\"n\">X</span><span class=\"o\">-</span><span class=\"n\">Workspace</span><span class=\"o\">-</span><span class=\"n\">Id</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"n\">workspace</span><span class=\"o\">-</span><span class=\"nb\">id</span><span class=\"p\">}</span>\n\n<span class=\"p\">{</span><span class=\"s2\">&quot;appendOutputToFile&quot;</span><span class=\"p\">:</span> <span class=\"n\">false</span><span class=\"p\">,</span> <span class=\"s2\">&quot;text&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Name three kinds of dogs&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;pluginInstance&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;{plugin-instance-handle}&quot;</span><span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></blockquote>\n<p>The HTTP call to a plugin will return JSON that includes a <code class=\"docutils literal notranslate\"><span class=\"pre\">taskId</span></code>. For example:</p>\n<blockquote>\n<div><div class=\"highlight-json notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n<span class=\"w\">     </span><span class=\"nt\">&quot;status&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">         </span><span class=\"nt\">&quot;version&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;1&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">         </span><span class=\"nt\">&quot;userId&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;&lt;redacted&gt;&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">         </span><span class=\"nt\">&quot;input&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;{\\&quot;appendOutputToFile\\&quot;: false, \\&quot;text\\&quot;: \\&quot;Name three kinds of dogs\\&quot;, \\&quot;pluginInstance\\&quot;: \\&quot;&lt;redacted&gt;\\&quot;}&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">         </span><span class=\"nt\">&quot;taskType&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;internalApi&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">         </span><span class=\"nt\">&quot;taskId&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;48025A24...F1CF&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">         </span><span class=\"nt\">&quot;workspaceId&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;&lt;redacted&gt;&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">         </span><span class=\"nt\">&quot;taskCreatedOn&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;2023-06-28T03:57:41Z&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">         </span><span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;\\/api\\/v1\\/plugin\\/instance\\/generate&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">         </span><span class=\"nt\">&quot;state&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;waiting&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">         </span><span class=\"nt\">&quot;taskLastModifiedOn&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;2023-06-28T03:57:41Z&quot;</span>\n<span class=\"w\">     </span><span class=\"p\">}</span>\n<span class=\"w\"> </span><span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></blockquote>\n<p>To retrieve the output, you can poll the Task via HTTP, using the Task status endpoint (<code class=\"docutils literal notranslate\"><span class=\"pre\">https://api.steamship.com/api/v1/task/status</span></code>):</p>\n<blockquote>\n<div><div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">POST</span> <span class=\"o\">/</span><span class=\"n\">api</span><span class=\"o\">/</span><span class=\"n\">v1</span><span class=\"o\">/</span><span class=\"n\">task</span><span class=\"o\">/</span><span class=\"n\">status</span>\n<span class=\"n\">Content</span><span class=\"o\">-</span><span class=\"n\">Type</span><span class=\"p\">:</span> <span class=\"n\">application</span><span class=\"o\">/</span><span class=\"n\">json</span>\n<span class=\"n\">Authorization</span><span class=\"p\">:</span> <span class=\"n\">Bearer</span> <span class=\"p\">{</span><span class=\"n\">api</span><span class=\"o\">-</span><span class=\"n\">key</span><span class=\"p\">}</span>\n<span class=\"n\">X</span><span class=\"o\">-</span><span class=\"n\">Workspace</span><span class=\"o\">-</span><span class=\"n\">Id</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"n\">workspace</span><span class=\"o\">-</span><span class=\"nb\">id</span><span class=\"p\">}</span>\n\n<span class=\"p\">{</span><span class=\"s2\">&quot;taskId&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;{task-id}&quot;</span><span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></blockquote>\n<p>If the task has completed successfully, you will see something like:</p>\n<blockquote>\n<div><div class=\"highlight-json notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;data&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;blocks&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[{</span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;tags&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[{</span>\n<span class=\"w\">                </span><span class=\"nt\">&quot;kind&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;role&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">                </span><span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;assistant&quot;</span>\n<span class=\"w\">            </span><span class=\"p\">}],</span>\n<span class=\"w\">            </span><span class=\"nt\">&quot;text&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;1. Labrador Retriever\\n2. German Shepherd\\n3. Beagle&quot;</span>\n<span class=\"w\">        </span><span class=\"p\">}]</span>\n<span class=\"w\">    </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"nt\">&quot;status&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;input&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;{\\&quot;appendOutputToFile\\&quot;: false, \\&quot;text\\&quot;: \\&quot;Name three kinds of dogs\\&quot;, \\&quot;pluginInstance\\&quot;: \\&quot;&lt;redacted&gt;\\&quot;}&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;userId&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;&lt;redacted&gt;&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;taskLastModifiedOn&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;2023-06-28T03:57:42Z&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;taskType&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;internalApi&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;\\/api\\/v1\\/plugin\\/instance\\/generate&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;state&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;succeeded&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;version&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;1&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;taskId&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;48025A24...F1CF&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;output&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;{\\&quot;blocks\\&quot;:[{\\&quot;tags\\&quot;:[{\\&quot;name\\&quot;:\\&quot;assistant\\&quot;,\\&quot;kind\\&quot;:\\&quot;role\\&quot;}],\\&quot;text\\&quot;:\\&quot;1. Labrador Retriever\\\\n2. German Shepherd\\\\n3. Beagle\\&quot;}]}&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;assignedWorker&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;engine&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;workspaceId&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;&lt;redacted&gt;&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;startedAt&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;2023-06-28T03:57:41Z&quot;</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"nt\">&quot;taskCreatedOn&quot;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">&quot;2023-06-28T03:57:41Z&quot;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></blockquote>\n<div class=\"toctree-wrapper compound\">\n</div>\n</section>\n</section>\n</section>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.17.1: http://docutils.sourceforge.net/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["plugins/using/importers/index", "File Importers", "N", "next"], ["plugins/index", "Plugins", "P", "previous"]], "sourcename": "plugins/using/index.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Using Plugins</a><ul>\n<li><a class=\"reference internal\" href=\"#plugin-instances\">Plugin Instances</a><ul>\n<li><a class=\"reference internal\" href=\"#plugin-faq\">Plugin FAQ</a><ul>\n<li><a class=\"reference internal\" href=\"#can-i-access-my-plugin-over-http\">Can I access my plugin over HTTP?</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "plugins/using/index", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "furo_version": "2023.03.27", "furo_navigation_tree": "", "furo_hide_toc": false, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#272822", "foreground": "#f8f8f2"}}}