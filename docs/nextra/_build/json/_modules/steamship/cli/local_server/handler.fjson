{"parents": [{"link": "../../../../", "title": "Module code"}], "title": "steamship.cli.local_server.handler", "body": "<h1>Source code for steamship.cli.local_server.handler</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">json</span>\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">import</span> <span class=\"nn\">re</span>\n<span class=\"kn\">from</span> <span class=\"nn\">http</span> <span class=\"kn\">import</span> <span class=\"n\">server</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">,</span> <span class=\"n\">Type</span>\n<span class=\"kn\">from</span> <span class=\"nn\">urllib.parse</span> <span class=\"kn\">import</span> <span class=\"n\">parse_qs</span><span class=\"p\">,</span> <span class=\"n\">urlparse</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">steamship</span> <span class=\"kn\">import</span> <span class=\"n\">MimeTypes</span><span class=\"p\">,</span> <span class=\"n\">Steamship</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.data.user</span> <span class=\"kn\">import</span> <span class=\"n\">User</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.invocable</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">Invocable</span><span class=\"p\">,</span>\n    <span class=\"n\">InvocableRequest</span><span class=\"p\">,</span>\n    <span class=\"n\">Invocation</span><span class=\"p\">,</span>\n    <span class=\"n\">InvocationContext</span><span class=\"p\">,</span>\n    <span class=\"n\">LoggingConfig</span><span class=\"p\">,</span>\n    <span class=\"n\">PackageService</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.invocable.lambda_handler</span> <span class=\"kn\">import</span> <span class=\"n\">handler</span><span class=\"p\">,</span> <span class=\"n\">internal_handler</span>\n\n\n<div class=\"viewcode-block\" id=\"create_safe_handler\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.cli.local_server/#steamship.cli.local_server.handler.create_safe_handler\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">create_safe_handler</span><span class=\"p\">(</span><span class=\"n\">invocable</span><span class=\"p\">:</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">Invocable</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Mimics the create_safe_handler function in lambda_handler for parallelism.&quot;&quot;&quot;</span>\n    <span class=\"n\">invocable_getter</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span><span class=\"p\">:</span> <span class=\"n\">invocable</span>  <span class=\"c1\"># noqa: E731</span>\n    <span class=\"n\">bound_internal_handler</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"n\">event</span><span class=\"p\">,</span> <span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"n\">internal_handler</span><span class=\"p\">(</span>  <span class=\"c1\"># noqa: E731</span>\n        <span class=\"n\">invocable_getter</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"p\">,</span> <span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">call_instance_init</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n    <span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"k\">lambda</span> <span class=\"n\">event</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">:</span> <span class=\"n\">handler</span><span class=\"p\">(</span>\n        <span class=\"n\">bound_internal_handler</span><span class=\"p\">,</span> <span class=\"n\">event</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">running_locally</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n    <span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"make_handler\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.cli.local_server/#steamship.cli.local_server.handler.make_handler\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">make_handler</span><span class=\"p\">(</span>  <span class=\"c1\"># noqa: C901</span>\n    <span class=\"n\">invocable_class</span><span class=\"p\">:</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">Invocable</span><span class=\"p\">],</span>  <span class=\"c1\"># The invocable (package or plugin) that this handler hosts.</span>\n    <span class=\"n\">base_url</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;http://localhost&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">default_api_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">invocable_handle</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">invocable_version_handle</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">invocable_instance_handle</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"n\">workspace</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n<span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Creates and returns a SimpleHTTPRequestHandler class for an Invocable (package or plugin).</span>\n\n<span class=\"sd\">    For use with steamship.cli.http.server.Server.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"c1\"># A cache of API Key to User objects, to avoid doing a lookup each request</span>\n    <span class=\"n\">user_for_key</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">User</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n    <span class=\"c1\"># The type of invocable this handler hosts</span>\n    <span class=\"n\">invocable_type</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>\n\n    <span class=\"k\">if</span> <span class=\"nb\">issubclass</span><span class=\"p\">(</span><span class=\"n\">invocable_class</span><span class=\"p\">,</span> <span class=\"n\">PackageService</span><span class=\"p\">):</span>\n        <span class=\"n\">invocable_type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;package&quot;</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">invocable_type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;plugin&quot;</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">InvocableHTTPHandler</span><span class=\"p\">(</span><span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">SimpleHTTPRequestHandler</span><span class=\"p\">):</span>\n        <span class=\"k\">def</span> <span class=\"nf\">_send_response</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">_bytes</span><span class=\"p\">:</span> <span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"n\">mime_type</span><span class=\"p\">:</span> <span class=\"n\">MimeTypes</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">send_response</span><span class=\"p\">(</span><span class=\"mi\">200</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">send_header</span><span class=\"p\">(</span><span class=\"s2\">&quot;Content-type&quot;</span><span class=\"p\">,</span> <span class=\"n\">mime_type</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_send_cors_headers</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">end_headers</span><span class=\"p\">()</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">wfile</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">_bytes</span><span class=\"p\">)</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">_get_client</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Steamship</span><span class=\"p\">:</span>\n<span class=\"w\">            </span><span class=\"sd\">&quot;&quot;&quot;Returns a Steamship client.</span>\n\n<span class=\"sd\">            The API Key used in the client will be chosen in this order:</span>\n<span class=\"sd\">            - From the bearer token, if provided,</span>\n<span class=\"sd\">            - From self.default_api_key, if provided</span>\n<span class=\"sd\">            - From ~/.steamship.json, if present</span>\n\n<span class=\"sd\">            Note that this means the broader system on which this server is running is capable of seeding this server</span>\n<span class=\"sd\">            with a default API Key. If you do not want this behavior, do not keep a .steamship.json file in your home</span>\n<span class=\"sd\">            directory.</span>\n<span class=\"sd\">            &quot;&quot;&quot;</span>\n            <span class=\"n\">api_key</span> <span class=\"o\">=</span> <span class=\"n\">default_api_key</span>\n            <span class=\"k\">for</span> <span class=\"n\">h</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">h</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;authorization&quot;</span><span class=\"p\">:</span>\n                    <span class=\"n\">api_key</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">sub</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s2\">&quot;^[Bb]earer\\s+&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"p\">[</span><span class=\"n\">h</span><span class=\"p\">])</span>\n            <span class=\"k\">return</span> <span class=\"n\">Steamship</span><span class=\"p\">(</span><span class=\"n\">api_key</span><span class=\"o\">=</span><span class=\"n\">api_key</span><span class=\"p\">,</span> <span class=\"n\">workspace</span><span class=\"o\">=</span><span class=\"n\">workspace</span><span class=\"p\">)</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">_get_invocation_context</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">client</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">InvocationContext</span><span class=\"p\">:</span>\n            <span class=\"k\">nonlocal</span> <span class=\"n\">user_for_key</span>\n\n            <span class=\"c1\"># Get the cached user or fetch a new one</span>\n            <span class=\"k\">if</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">api_key</span> <span class=\"ow\">in</span> <span class=\"n\">user_for_key</span><span class=\"p\">:</span>\n                <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">user_for_key</span><span class=\"p\">[</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">api_key</span><span class=\"p\">]</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">current</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">)</span>\n                <span class=\"n\">user_for_key</span><span class=\"p\">[</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">api_key</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">user</span>\n\n            <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">base_url</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n            <span class=\"c1\"># Append a trailing slash if not already there.</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">url</span><span class=\"o\">.</span><span class=\"n\">endswith</span><span class=\"p\">(</span><span class=\"s2\">&quot;/&quot;</span><span class=\"p\">):</span>\n                <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">url</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;/&quot;</span>\n\n            <span class=\"k\">return</span> <span class=\"n\">InvocationContext</span><span class=\"p\">(</span>\n                <span class=\"n\">user_id</span><span class=\"o\">=</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span>\n                <span class=\"n\">workspace_id</span><span class=\"o\">=</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">workspace_id</span><span class=\"p\">,</span>\n                <span class=\"n\">workspace_handle</span><span class=\"o\">=</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">workspace_handle</span><span class=\"p\">,</span>\n                <span class=\"n\">invocable_owner_id</span><span class=\"o\">=</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span>\n                <span class=\"n\">invocable_owner_handle</span><span class=\"o\">=</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">handle</span><span class=\"p\">,</span>\n                <span class=\"n\">invocable_handle</span><span class=\"o\">=</span><span class=\"n\">invocable_handle</span><span class=\"p\">,</span>\n                <span class=\"n\">invocable_version_handle</span><span class=\"o\">=</span><span class=\"n\">invocable_version_handle</span><span class=\"p\">,</span>\n                <span class=\"n\">invocable_instance_handle</span><span class=\"o\">=</span><span class=\"n\">invocable_instance_handle</span><span class=\"p\">,</span>\n                <span class=\"n\">invocable_type</span><span class=\"o\">=</span><span class=\"n\">invocable_type</span><span class=\"p\">,</span>\n                <span class=\"n\">invocable_url</span><span class=\"o\">=</span><span class=\"n\">url</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">_send_cors_headers</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">send_header</span><span class=\"p\">(</span><span class=\"s2\">&quot;Access-Control-Allow-Origin&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;*&quot;</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">send_header</span><span class=\"p\">(</span><span class=\"s2\">&quot;Access-Control-Allow-Methods&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;OPTIONS, HEAD, GET, POST&quot;</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">send_header</span><span class=\"p\">(</span><span class=\"s2\">&quot;Access-Control-Allow-Headers&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;X-Requested-With&quot;</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">send_header</span><span class=\"p\">(</span><span class=\"s2\">&quot;Access-Control-Allow-Headers&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;X-Package-Id&quot;</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">send_header</span><span class=\"p\">(</span><span class=\"s2\">&quot;Access-Control-Allow-Headers&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;X-Package-Owner-Handle&quot;</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">send_header</span><span class=\"p\">(</span><span class=\"s2\">&quot;Access-Control-Allow-Headers&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;X-Package-Instance-Id&quot;</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">send_header</span><span class=\"p\">(</span><span class=\"s2\">&quot;Access-Control-Allow-Headers&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;X-Task-Background&quot;</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">send_header</span><span class=\"p\">(</span><span class=\"s2\">&quot;Access-Control-Allow-Headers&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;X-Task-Delay-Ms&quot;</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">send_header</span><span class=\"p\">(</span><span class=\"s2\">&quot;Access-Control-Allow-Headers&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;X-Task-Dependency&quot;</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">send_header</span><span class=\"p\">(</span><span class=\"s2\">&quot;Access-Control-Allow-Headers&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;X-Workspace-Id&quot;</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">send_header</span><span class=\"p\">(</span><span class=\"s2\">&quot;Access-Control-Allow-Headers&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;X-Workspace-Handle&quot;</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">send_header</span><span class=\"p\">(</span><span class=\"s2\">&quot;Access-Control-Allow-Headers&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Content-Type&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">_do_request</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">payload</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">http_verb</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_client</span><span class=\"p\">()</span>\n                <span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_invocation_context</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">)</span>\n\n                <span class=\"n\">invocation</span> <span class=\"o\">=</span> <span class=\"n\">Invocation</span><span class=\"p\">(</span>\n                    <span class=\"n\">http_verb</span><span class=\"o\">=</span><span class=\"n\">http_verb</span><span class=\"p\">,</span> <span class=\"n\">invocation_path</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">arguments</span><span class=\"o\">=</span><span class=\"n\">payload</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">config</span>\n                <span class=\"p\">)</span>\n                <span class=\"n\">event</span> <span class=\"o\">=</span> <span class=\"n\">InvocableRequest</span><span class=\"p\">(</span>\n                    <span class=\"n\">client_config</span><span class=\"o\">=</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">,</span>\n                    <span class=\"n\">invocation</span><span class=\"o\">=</span><span class=\"n\">invocation</span><span class=\"p\">,</span>\n                    <span class=\"n\">logging_config</span><span class=\"o\">=</span><span class=\"n\">LoggingConfig</span><span class=\"p\">(</span><span class=\"n\">logging_host</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">logging_port</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">),</span>\n                    <span class=\"n\">invocation_context</span><span class=\"o\">=</span><span class=\"n\">context</span><span class=\"p\">,</span>\n                <span class=\"p\">)</span>\n\n                <span class=\"n\">handler</span> <span class=\"o\">=</span> <span class=\"n\">create_safe_handler</span><span class=\"p\">(</span><span class=\"n\">invocable_class</span><span class=\"p\">)</span>\n                <span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"n\">handler</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">dict</span><span class=\"p\">(</span><span class=\"n\">by_alias</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">),</span> <span class=\"n\">context</span><span class=\"p\">)</span>\n                <span class=\"n\">res_str</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">resp</span><span class=\"p\">)</span>\n                <span class=\"n\">res_bytes</span> <span class=\"o\">=</span> <span class=\"nb\">bytes</span><span class=\"p\">(</span><span class=\"n\">res_str</span><span class=\"p\">,</span> <span class=\"s2\">&quot;utf-8&quot;</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_send_response</span><span class=\"p\">(</span><span class=\"n\">res_bytes</span><span class=\"p\">,</span> <span class=\"n\">MimeTypes</span><span class=\"o\">.</span><span class=\"n\">JSON</span><span class=\"p\">)</span>\n            <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_send_response</span><span class=\"p\">(</span><span class=\"nb\">bytes</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">e</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;utf-8&quot;</span><span class=\"p\">),</span> <span class=\"n\">MimeTypes</span><span class=\"o\">.</span><span class=\"n\">TXT</span><span class=\"p\">)</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">do_GET</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>  <span class=\"c1\"># noqa: N802</span>\n            <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;GET request,</span><span class=\"se\">\\n</span><span class=\"s2\">Path: </span><span class=\"si\">%s</span><span class=\"se\">\\n</span><span class=\"s2\">Headers:</span><span class=\"se\">\\n</span><span class=\"si\">%s</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">),</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"n\">payload</span> <span class=\"o\">=</span> <span class=\"n\">parse_qs</span><span class=\"p\">(</span><span class=\"n\">urlparse</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">)</span>\n                <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_do_request</span><span class=\"p\">(</span><span class=\"n\">payload</span><span class=\"p\">,</span> <span class=\"s2\">&quot;GET&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_send_response</span><span class=\"p\">(</span><span class=\"nb\">bytes</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">e</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;utf-8&quot;</span><span class=\"p\">),</span> <span class=\"n\">MimeTypes</span><span class=\"o\">.</span><span class=\"n\">TXT</span><span class=\"p\">)</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">do_OPTIONS</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>  <span class=\"c1\"># noqa: N802</span>\n            <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;OPTIONS request,</span><span class=\"se\">\\n</span><span class=\"s2\">Path: </span><span class=\"si\">%s</span><span class=\"se\">\\n</span><span class=\"s2\">Headers:</span><span class=\"se\">\\n</span><span class=\"si\">%s</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">),</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">send_response</span><span class=\"p\">(</span><span class=\"mi\">200</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_send_cors_headers</span><span class=\"p\">()</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">end_headers</span><span class=\"p\">()</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_send_response</span><span class=\"p\">(</span><span class=\"nb\">bytes</span><span class=\"p\">(</span><span class=\"s2\">&quot;OK&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;utf-8&quot;</span><span class=\"p\">),</span> <span class=\"n\">MimeTypes</span><span class=\"o\">.</span><span class=\"n\">TXT</span><span class=\"p\">)</span>\n            <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n                <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Exception handling options&quot;</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">)</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_send_response</span><span class=\"p\">(</span><span class=\"nb\">bytes</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">e</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;utf-8&quot;</span><span class=\"p\">),</span> <span class=\"n\">MimeTypes</span><span class=\"o\">.</span><span class=\"n\">TXT</span><span class=\"p\">)</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">do_POST</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>  <span class=\"c1\"># noqa: N802</span>\n            <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;POST request,</span><span class=\"se\">\\n</span><span class=\"s2\">Path: </span><span class=\"si\">%s</span><span class=\"se\">\\n</span><span class=\"s2\">Headers:</span><span class=\"se\">\\n</span><span class=\"si\">%s</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"p\">),</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">content_length</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"p\">[</span><span class=\"s2\">&quot;Content-Length&quot;</span><span class=\"p\">])</span>  <span class=\"c1\"># &lt;--- Gets the size of data</span>\n            <span class=\"n\">post_data</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rfile</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">content_length</span><span class=\"p\">)</span>  <span class=\"c1\"># &lt;--- Gets the data itself</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"n\">data_str</span> <span class=\"o\">=</span> <span class=\"n\">post_data</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s2\">&quot;utf8&quot;</span><span class=\"p\">)</span>\n                <span class=\"n\">payload</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">data_str</span><span class=\"p\">)</span>\n                <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_do_request</span><span class=\"p\">(</span><span class=\"n\">payload</span><span class=\"p\">,</span> <span class=\"s2\">&quot;POST&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_send_response</span><span class=\"p\">(</span><span class=\"nb\">bytes</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">e</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;utf-8&quot;</span><span class=\"p\">),</span> <span class=\"n\">MimeTypes</span><span class=\"o\">.</span><span class=\"n\">TXT</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">InvocableHTTPHandler</span></div>\n</pre></div>", "current_page_name": "_modules/steamship/cli/local_server/handler", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "furo_version": "2023.03.27", "furo_navigation_tree": "", "furo_hide_toc": true, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#272822", "foreground": "#f8f8f2"}}}