{"parents": [{"link": "../../../../", "title": "Module code"}], "title": "steamship.cli.local_server.server", "body": "<h1>Source code for steamship.cli.local_server.server</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">import</span> <span class=\"nn\">socketserver</span>\n<span class=\"kn\">import</span> <span class=\"nn\">threading</span>\n<span class=\"kn\">from</span> <span class=\"nn\">socketserver</span> <span class=\"kn\">import</span> <span class=\"n\">TCPServer</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Optional</span><span class=\"p\">,</span> <span class=\"n\">Type</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">steamship</span> <span class=\"kn\">import</span> <span class=\"n\">Steamship</span><span class=\"p\">,</span> <span class=\"n\">SteamshipError</span><span class=\"p\">,</span> <span class=\"n\">TaskState</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.cli.local_server.handler</span> <span class=\"kn\">import</span> <span class=\"n\">create_safe_handler</span><span class=\"p\">,</span> <span class=\"n\">make_handler</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.invocable</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">Invocable</span><span class=\"p\">,</span>\n    <span class=\"n\">InvocableRequest</span><span class=\"p\">,</span>\n    <span class=\"n\">Invocation</span><span class=\"p\">,</span>\n    <span class=\"n\">InvocationContext</span><span class=\"p\">,</span>\n    <span class=\"n\">LoggingConfig</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"ThreadedTCPServer\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.cli.local_server/#steamship.cli.local_server.server.ThreadedTCPServer\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">ThreadedTCPServer</span><span class=\"p\">(</span><span class=\"n\">socketserver</span><span class=\"o\">.</span><span class=\"n\">ThreadingMixIn</span><span class=\"p\">,</span> <span class=\"n\">socketserver</span><span class=\"o\">.</span><span class=\"n\">TCPServer</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span></div>\n\n\n<div class=\"viewcode-block\" id=\"SteamshipHTTPServer\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.cli.local_server/#steamship.cli.local_server.server.SteamshipHTTPServer\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">SteamshipHTTPServer</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;A simple HTTP Server that wraps an invocable (package or plugin).</span>\n\n<span class=\"sd\">    To use, call:</span>\n\n<span class=\"sd\">       server = SteamshipHTTPServer(invocable)</span>\n<span class=\"sd\">       server.start()</span>\n\n<span class=\"sd\">    To shut down, call:</span>\n\n<span class=\"sd\">       server.stop()</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"n\">invocable</span><span class=\"p\">:</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">Invocable</span><span class=\"p\">]</span>\n    <span class=\"n\">base_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n    <span class=\"n\">port</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n    <span class=\"n\">server</span><span class=\"p\">:</span> <span class=\"n\">TCPServer</span>\n    <span class=\"n\">default_api_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,)</span>\n    <span class=\"n\">invocable_handle</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,)</span>\n    <span class=\"n\">invocable_version_handle</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,)</span>\n    <span class=\"n\">invocable_instance_handle</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">invocable</span><span class=\"p\">:</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">Invocable</span><span class=\"p\">],</span>\n        <span class=\"n\">base_url</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">port</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">8080</span><span class=\"p\">,</span>\n        <span class=\"n\">invocable_handle</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">invocable_version_handle</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">invocable_instance_handle</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">workspace</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">invocable</span> <span class=\"o\">=</span> <span class=\"n\">invocable</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">port</span> <span class=\"o\">=</span> <span class=\"n\">port</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">base_url</span> <span class=\"o\">=</span> <span class=\"n\">base_url</span> <span class=\"ow\">or</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;http://localhost:</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">port</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">invocable_handle</span> <span class=\"o\">=</span> <span class=\"n\">invocable_handle</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">invocable_version_handle</span> <span class=\"o\">=</span> <span class=\"n\">invocable_version_handle</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">invocable_instance_handle</span> <span class=\"o\">=</span> <span class=\"n\">invocable_instance_handle</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">config</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">workspace</span> <span class=\"o\">=</span> <span class=\"n\">workspace</span>\n\n<div class=\"viewcode-block\" id=\"SteamshipHTTPServer.start\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.cli.local_server/#steamship.cli.local_server.server.SteamshipHTTPServer.start\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">start</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Start the server.&quot;&quot;&quot;</span>\n\n        <span class=\"n\">handler</span> <span class=\"o\">=</span> <span class=\"n\">make_handler</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">invocable</span><span class=\"p\">,</span>\n            <span class=\"n\">base_url</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">base_url</span><span class=\"p\">,</span>\n            <span class=\"n\">invocable_handle</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">invocable_handle</span><span class=\"p\">,</span>\n            <span class=\"n\">invocable_version_handle</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">invocable_version_handle</span><span class=\"p\">,</span>\n            <span class=\"n\">invocable_instance_handle</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">invocable_instance_handle</span><span class=\"p\">,</span>\n            <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">,</span>\n            <span class=\"n\">workspace</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">workspace</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">server</span> <span class=\"o\">=</span> <span class=\"n\">ThreadedTCPServer</span><span class=\"p\">((</span><span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">port</span><span class=\"p\">),</span> <span class=\"n\">handler</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">allow_reuse_address</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n        <span class=\"c1\"># Start a thread with the server -- that thread will then start one</span>\n        <span class=\"c1\"># more thread for each request</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">server_thread</span> <span class=\"o\">=</span> <span class=\"n\">threading</span><span class=\"o\">.</span><span class=\"n\">Thread</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">serve_forever</span><span class=\"p\">)</span>\n        <span class=\"c1\"># Exit the server thread when the main thread terminates</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">server_thread</span><span class=\"o\">.</span><span class=\"n\">daemon</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">server_thread</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Started local server thread on port </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">port</span><span class=\"si\">}</span><span class=\"s2\">.&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Call the __dir__ method</span>\n        <span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"n\">InvocationContext</span><span class=\"p\">(</span><span class=\"n\">invocable_url</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">base_url</span><span class=\"si\">}</span><span class=\"s2\">/&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"n\">invocation</span> <span class=\"o\">=</span> <span class=\"n\">Invocation</span><span class=\"p\">(</span>\n            <span class=\"n\">http_verb</span><span class=\"o\">=</span><span class=\"s2\">&quot;POST&quot;</span><span class=\"p\">,</span> <span class=\"n\">invocation_path</span><span class=\"o\">=</span><span class=\"s2\">&quot;__dir__&quot;</span><span class=\"p\">,</span> <span class=\"n\">arguments</span><span class=\"o\">=</span><span class=\"p\">{},</span> <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">event</span> <span class=\"o\">=</span> <span class=\"n\">InvocableRequest</span><span class=\"p\">(</span>\n            <span class=\"n\">client_config</span><span class=\"o\">=</span><span class=\"n\">Steamship</span><span class=\"p\">(</span><span class=\"n\">workspace</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">workspace</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">,</span>\n            <span class=\"n\">invocation</span><span class=\"o\">=</span><span class=\"n\">invocation</span><span class=\"p\">,</span>\n            <span class=\"n\">logging_config</span><span class=\"o\">=</span><span class=\"n\">LoggingConfig</span><span class=\"p\">(</span><span class=\"n\">logging_host</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">logging_port</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">),</span>\n            <span class=\"n\">invocation_context</span><span class=\"o\">=</span><span class=\"n\">context</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">handler</span> <span class=\"o\">=</span> <span class=\"n\">create_safe_handler</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">invocable</span><span class=\"p\">)</span>\n        <span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"n\">handler</span><span class=\"p\">(</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">dict</span><span class=\"p\">(</span><span class=\"n\">by_alias</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">),</span> <span class=\"n\">context</span><span class=\"p\">)</span>\n        <span class=\"n\">state</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">state</span> <span class=\"o\">=</span> <span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;status&quot;</span><span class=\"p\">,</span> <span class=\"p\">{})</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;state&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"ne\">BaseException</span><span class=\"p\">:</span>\n            <span class=\"n\">state</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;succeeded&quot;</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">state</span> <span class=\"o\">==</span> <span class=\"n\">TaskState</span><span class=\"o\">.</span><span class=\"n\">failed</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">SteamshipError</span><span class=\"p\">(</span>\n                <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;status&quot;</span><span class=\"p\">,</span> <span class=\"p\">{})</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;statusMessage&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Unable to start project&quot;</span><span class=\"p\">)</span>\n            <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"SteamshipHTTPServer.stop\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.cli.local_server/#steamship.cli.local_server.server.SteamshipHTTPServer.stop\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">stop</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Stop the server.</span>\n\n<span class=\"sd\">        Note: This has to be called from a different thread or else it will deadlock.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">_server</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">server</span>\n        <span class=\"n\">_server</span><span class=\"o\">.</span><span class=\"n\">shutdown</span><span class=\"p\">()</span></div></div>\n</pre></div>", "current_page_name": "_modules/steamship/cli/local_server/server", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "furo_version": "2023.03.27", "furo_navigation_tree": "", "furo_hide_toc": true, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#272822", "foreground": "#f8f8f2"}}}