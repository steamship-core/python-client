{"parents": [{"link": "../../../", "title": "Module code"}], "title": "steamship.invocable.config", "body": "<h1>Source code for steamship.invocable.config</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">json</span>\n<span class=\"kn\">from</span> <span class=\"nn\">enum</span> <span class=\"kn\">import</span> <span class=\"n\">Enum</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Dict</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.base.error</span> <span class=\"kn\">import</span> <span class=\"n\">SteamshipError</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.base.model</span> <span class=\"kn\">import</span> <span class=\"n\">CamelModel</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.data.manifest</span> <span class=\"kn\">import</span> <span class=\"n\">ConfigParameter</span><span class=\"p\">,</span> <span class=\"n\">ConfigParameterType</span>\n\n\n<div class=\"viewcode-block\" id=\"Config\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.invocable/#steamship.invocable.config.Config\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Config</span><span class=\"p\">(</span><span class=\"n\">CamelModel</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Base class Steamship Package and Plugin configuration objects.&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"n\">kwargs</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"n\">v</span> <span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()</span> <span class=\"k\">if</span> <span class=\"n\">v</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">}</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"Config.extend_with_dict\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.invocable/#steamship.invocable.config.Config.extend_with_dict\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">extend_with_dict</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">d</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Sets the attributes on this object with provided keys and values.&quot;&quot;&quot;</span>\n        <span class=\"k\">for</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">val</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"n\">d</span> <span class=\"ow\">or</span> <span class=\"p\">{})</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"k\">if</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"p\">(</span><span class=\"n\">overwrite</span> <span class=\"ow\">or</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">)</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n                <span class=\"nb\">setattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Config.extend_with_json_file\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.invocable/#steamship.invocable.config.Config.extend_with_json_file\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">extend_with_json_file</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">fail_on_missing_file</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Extends this config object&#39;s values with a JSON file from disk.</span>\n\n<span class=\"sd\">        This is useful for applying late-bound defaults, such as API keys added to a deployment bundle.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">():</span>\n            <span class=\"k\">if</span> <span class=\"n\">fail_on_missing_file</span><span class=\"p\">:</span>\n                <span class=\"k\">raise</span> <span class=\"n\">SteamshipError</span><span class=\"p\">(</span>\n                    <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Attempted to extend Config object with </span><span class=\"si\">{</span><span class=\"n\">path</span><span class=\"si\">}</span><span class=\"s2\">, but the file was not found.&quot;</span>\n                <span class=\"p\">)</span>\n            <span class=\"k\">return</span>\n\n        <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n            <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">):</span>\n                <span class=\"k\">raise</span> <span class=\"n\">SteamshipError</span><span class=\"p\">(</span>\n                    <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Attempted to extend Config object with </span><span class=\"si\">{</span><span class=\"n\">path</span><span class=\"si\">}</span><span class=\"s2\">, but the file did not contain a JSON `dict` object.&quot;</span>\n                <span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">extend_with_dict</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">overwrite</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Config.strip_enum\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.invocable/#steamship.invocable.config.Config.strip_enum\">[docs]</a>    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">strip_enum</span><span class=\"p\">(</span><span class=\"n\">default_value</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">issubclass</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">default_value</span><span class=\"p\">),</span> <span class=\"n\">Enum</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"n\">default_value</span><span class=\"o\">.</span><span class=\"n\">value</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">default_value</span></div>\n\n<div class=\"viewcode-block\" id=\"Config.get_config_parameters\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.invocable/#steamship.invocable.config.Config.get_config_parameters\">[docs]</a>    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_config_parameters</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">ConfigParameter</span><span class=\"p\">]:</span>\n        <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">for</span> <span class=\"n\">field_name</span><span class=\"p\">,</span> <span class=\"n\">field</span> <span class=\"ow\">in</span> <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">__fields__</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"n\">description</span> <span class=\"o\">=</span> <span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">field_info</span><span class=\"o\">.</span><span class=\"n\">description</span>\n            <span class=\"n\">type_</span> <span class=\"o\">=</span> <span class=\"n\">ConfigParameterType</span><span class=\"o\">.</span><span class=\"n\">from_python_type</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">type_</span><span class=\"p\">)</span>\n            <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"n\">field_name</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">ConfigParameter</span><span class=\"p\">(</span>\n                <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"n\">type_</span><span class=\"p\">,</span>\n                <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">strip_enum</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">default</span><span class=\"p\">),</span>\n                <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"n\">description</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">result</span></div></div>\n</pre></div>", "current_page_name": "_modules/steamship/invocable/config", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "furo_version": "2023.03.27", "furo_navigation_tree": "", "furo_hide_toc": true, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#272822", "foreground": "#f8f8f2"}}}