{"parents": [{"link": "../../../../", "title": "Module code"}], "title": "steamship.invocable.mixins.indexer_pipeline_mixin", "body": "<h1>Source code for steamship.invocable.mixins.indexer_pipeline_mixin</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Optional</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">steamship</span> <span class=\"kn\">import</span> <span class=\"n\">File</span><span class=\"p\">,</span> <span class=\"n\">Steamship</span><span class=\"p\">,</span> <span class=\"n\">Task</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.invocable</span> <span class=\"kn\">import</span> <span class=\"n\">PackageService</span><span class=\"p\">,</span> <span class=\"n\">post</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.invocable.mixins.blockifier_mixin</span> <span class=\"kn\">import</span> <span class=\"n\">BlockifierMixin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.invocable.mixins.file_importer_mixin</span> <span class=\"kn\">import</span> <span class=\"n\">FileImporterMixin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.invocable.mixins.indexer_mixin</span> <span class=\"kn\">import</span> <span class=\"n\">IndexerMixin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.invocable.package_mixin</span> <span class=\"kn\">import</span> <span class=\"n\">PackageMixin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.utils.file_tags</span> <span class=\"kn\">import</span> <span class=\"n\">update_file_status</span>\n\n\n<div class=\"viewcode-block\" id=\"IndexerPipelineMixin\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.invocable.mixins/#steamship.invocable.mixins.indexer_pipeline_mixin.IndexerPipelineMixin\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">IndexerPipelineMixin</span><span class=\"p\">(</span><span class=\"n\">PackageMixin</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Provides a complete set of endpoints &amp; async workflow for Document Question Answering.</span>\n\n<span class=\"sd\">    This Mixin is an async orchestrator of other mixins:</span>\n<span class=\"sd\">    - Importer Mixin:       to import files, e.g. YouTube videos, PDF urls</span>\n<span class=\"sd\">    - Blockifier Mixin:     to convert files to Blocks -- whether that&#39;s s2t or PDF parsing, etc.</span>\n<span class=\"sd\">    - Indexer Mixin:        to convert Steamship Files to embedded sharts</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Steamship</span>\n    <span class=\"n\">invocable</span><span class=\"p\">:</span> <span class=\"n\">PackageService</span>\n    <span class=\"n\">blockifier_mixin</span><span class=\"p\">:</span> <span class=\"n\">BlockifierMixin</span>\n    <span class=\"n\">importer_mixin</span><span class=\"p\">:</span> <span class=\"n\">FileImporterMixin</span>\n    <span class=\"n\">indexer_mixin</span><span class=\"p\">:</span> <span class=\"n\">IndexerMixin</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Steamship</span><span class=\"p\">,</span> <span class=\"n\">invocable</span><span class=\"p\">:</span> <span class=\"n\">PackageService</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">client</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">invocable</span> <span class=\"o\">=</span> <span class=\"n\">invocable</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">importer_mixin</span> <span class=\"o\">=</span> <span class=\"n\">FileImporterMixin</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">invocable</span><span class=\"o\">.</span><span class=\"n\">add_mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">importer_mixin</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">blockifier_mixin</span> <span class=\"o\">=</span> <span class=\"n\">BlockifierMixin</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">invocable</span><span class=\"o\">.</span><span class=\"n\">add_mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">blockifier_mixin</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">indexer_mixin</span> <span class=\"o\">=</span> <span class=\"n\">IndexerMixin</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">invocable</span><span class=\"o\">.</span><span class=\"n\">add_mixin</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">indexer_mixin</span><span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"IndexerPipelineMixin.set_file_status\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.invocable.mixins/#steamship.invocable.mixins.indexer_pipeline_mixin.IndexerPipelineMixin.set_file_status\">[docs]</a>    <span class=\"nd\">@post</span><span class=\"p\">(</span><span class=\"s2\">&quot;/set_file_status&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_file_status</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">file_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">status</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bool</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Set the status bit of a file. Intended to be scheduled after import.&quot;&quot;&quot;</span>\n        <span class=\"n\">file</span> <span class=\"o\">=</span> <span class=\"n\">File</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">_id</span><span class=\"o\">=</span><span class=\"n\">file_id</span><span class=\"p\">)</span>\n        <span class=\"n\">update_file_status</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"n\">status</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"IndexerPipelineMixin.index_url\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.invocable.mixins/#steamship.invocable.mixins.indexer_pipeline_mixin.IndexerPipelineMixin.index_url\">[docs]</a>    <span class=\"nd\">@post</span><span class=\"p\">(</span><span class=\"s2\">&quot;/index_url&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">index_url</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">index_handle</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">mime_type</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Task</span><span class=\"p\">:</span>\n        <span class=\"c1\"># Step 1: Import the URL</span>\n        <span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"n\">task</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">importer_mixin</span><span class=\"o\">.</span><span class=\"n\">import_url_to_file_and_task</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Step 2: Blockify the File</span>\n        <span class=\"n\">importer_task_id</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">if</span> <span class=\"n\">task</span> <span class=\"ow\">and</span> <span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">task_id</span><span class=\"p\">:</span>\n            <span class=\"n\">importer_task_id</span> <span class=\"o\">=</span> <span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">task_id</span>\n\n        <span class=\"n\">blockify_task</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">blockifier_mixin</span><span class=\"o\">.</span><span class=\"n\">blockify</span><span class=\"p\">(</span>\n            <span class=\"n\">file_id</span><span class=\"o\">=</span><span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"n\">mime_type</span><span class=\"p\">,</span> <span class=\"n\">after_task_id</span><span class=\"o\">=</span><span class=\"n\">importer_task_id</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># Step 3: Index the File</span>\n        <span class=\"n\">index_task</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">invocable</span><span class=\"o\">.</span><span class=\"n\">invoke_later</span><span class=\"p\">(</span>\n            <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s2\">&quot;index_file&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">wait_on_tasks</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">blockify_task</span><span class=\"p\">],</span>\n            <span class=\"n\">arguments</span><span class=\"o\">=</span><span class=\"p\">{</span>\n                <span class=\"s2\">&quot;file_id&quot;</span><span class=\"p\">:</span> <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;index_handle&quot;</span><span class=\"p\">:</span> <span class=\"n\">index_handle</span><span class=\"p\">,</span>\n            <span class=\"p\">},</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># Step 4: Set the File Status to &#39;indexed&#39;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">invocable</span><span class=\"o\">.</span><span class=\"n\">invoke_later</span><span class=\"p\">(</span>\n            <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s2\">&quot;set_file_status&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">wait_on_tasks</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">index_task</span><span class=\"p\">],</span>\n            <span class=\"n\">arguments</span><span class=\"o\">=</span><span class=\"p\">{</span>\n                <span class=\"s2\">&quot;file_id&quot;</span><span class=\"p\">:</span> <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;status&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Indexed&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">},</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># We return the index task instead of the file set task just to safe a few seconds.</span>\n        <span class=\"k\">return</span> <span class=\"n\">index_task</span></div></div>\n</pre></div>", "current_page_name": "_modules/steamship/invocable/mixins/indexer_pipeline_mixin", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "furo_version": "2023.03.27", "furo_navigation_tree": "", "furo_hide_toc": true, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#272822", "foreground": "#f8f8f2"}}}