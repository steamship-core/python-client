{"parents": [{"link": "../../../../", "title": "Module code"}], "title": "steamship.invocable.mixins.indexer_mixin", "body": "<h1>Source code for steamship.invocable.mixins.indexer_mixin</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Optional</span><span class=\"p\">,</span> <span class=\"n\">cast</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">steamship</span> <span class=\"kn\">import</span> <span class=\"n\">Block</span><span class=\"p\">,</span> <span class=\"n\">DocTag</span><span class=\"p\">,</span> <span class=\"n\">File</span><span class=\"p\">,</span> <span class=\"n\">Steamship</span><span class=\"p\">,</span> <span class=\"n\">Tag</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.data</span> <span class=\"kn\">import</span> <span class=\"n\">TagValueKey</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.data.plugin.index_plugin_instance</span> <span class=\"kn\">import</span> <span class=\"n\">EmbeddingIndexPluginInstance</span><span class=\"p\">,</span> <span class=\"n\">SearchResults</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.invocable</span> <span class=\"kn\">import</span> <span class=\"n\">post</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.invocable.package_mixin</span> <span class=\"kn\">import</span> <span class=\"n\">PackageMixin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.utils.file_tags</span> <span class=\"kn\">import</span> <span class=\"n\">update_file_status</span>\n\n<span class=\"n\">DEFAULT_EMBEDDING_INDEX_CONFIG</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">&quot;embedder&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;plugin_handle&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;openai-embedder&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;plugin_instance_handle&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;text-embedding-ada-002&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;fetch_if_exists&quot;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;config&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">&quot;model&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;text-embedding-ada-002&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;dimensionality&quot;</span><span class=\"p\">:</span> <span class=\"mi\">1536</span><span class=\"p\">},</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">DEFAULT_EMBEDDING_INDEX_HANDLE</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;default-embedding-index&quot;</span>\n\n\n<div class=\"viewcode-block\" id=\"IndexerMixin\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.invocable.mixins/#steamship.invocable.mixins.indexer_mixin.IndexerMixin\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">IndexerMixin</span><span class=\"p\">(</span><span class=\"n\">PackageMixin</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Provides endpoints for easy Indexing of blockified files.&quot;&quot;&quot;</span>\n\n    <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Steamship</span>\n    <span class=\"n\">context_window_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n    <span class=\"n\">context_window_overlap</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n    <span class=\"n\">embedding_index_config</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Steamship</span><span class=\"p\">,</span>\n        <span class=\"n\">embedder_config</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">context_window_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">200</span><span class=\"p\">,</span>\n        <span class=\"n\">context_window_overlap</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">50</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">client</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">context_window_size</span> <span class=\"o\">=</span> <span class=\"n\">context_window_size</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">context_window_overlap</span> <span class=\"o\">=</span> <span class=\"n\">context_window_overlap</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">embedding_indexes</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">embedding_index_config</span> <span class=\"o\">=</span> <span class=\"n\">embedder_config</span> <span class=\"ow\">or</span> <span class=\"n\">DEFAULT_EMBEDDING_INDEX_CONFIG</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_get_page</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">block</span><span class=\"p\">:</span> <span class=\"n\">Block</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Return the page_id from the block if it exists.&quot;&quot;&quot;</span>\n        <span class=\"n\">page_id</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">for</span> <span class=\"n\">tag</span> <span class=\"ow\">in</span> <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">tags</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">tag</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"n\">DocTag</span><span class=\"o\">.</span><span class=\"n\">PAGE</span><span class=\"p\">:</span>\n                <span class=\"n\">page_num</span> <span class=\"o\">=</span> <span class=\"n\">tag</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">TagValueKey</span><span class=\"o\">.</span><span class=\"n\">NUMBER_VALUE</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">page_num</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                    <span class=\"n\">page_id</span> <span class=\"o\">=</span> <span class=\"n\">page_num</span>\n        <span class=\"k\">return</span> <span class=\"n\">page_id</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_get_index</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">index_handle</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">EmbeddingIndexPluginInstance</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Return the page_id from the block if it exists.&quot;&quot;&quot;</span>\n        <span class=\"n\">handle</span> <span class=\"o\">=</span> <span class=\"n\">index_handle</span> <span class=\"ow\">or</span> <span class=\"n\">DEFAULT_EMBEDDING_INDEX_HANDLE</span>\n        <span class=\"k\">if</span> <span class=\"n\">handle</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">embedding_indexes</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">embedding_indexes</span><span class=\"p\">[</span><span class=\"n\">handle</span><span class=\"p\">]</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">embedding_indexes</span><span class=\"p\">[</span><span class=\"n\">handle</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">cast</span><span class=\"p\">(</span>\n            <span class=\"n\">EmbeddingIndexPluginInstance</span><span class=\"p\">,</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">use_plugin</span><span class=\"p\">(</span>\n                <span class=\"n\">plugin_handle</span><span class=\"o\">=</span><span class=\"s2\">&quot;embedding-index&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">instance_handle</span><span class=\"o\">=</span><span class=\"n\">handle</span><span class=\"p\">,</span>\n                <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">embedding_index_config</span><span class=\"p\">,</span>\n                <span class=\"n\">fetch_if_exists</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"p\">),</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">embedding_indexes</span><span class=\"p\">[</span><span class=\"n\">handle</span><span class=\"p\">]</span>\n\n<div class=\"viewcode-block\" id=\"IndexerMixin.index_text\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.invocable.mixins/#steamship.invocable.mixins.indexer_mixin.IndexerMixin.index_text\">[docs]</a>    <span class=\"nd\">@post</span><span class=\"p\">(</span><span class=\"s2\">&quot;/index_text&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">index_text</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">metadata</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">index_handle</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bool</span><span class=\"p\">:</span>\n        <span class=\"n\">tags</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">),</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">context_window_size</span><span class=\"p\">):</span>\n            <span class=\"c1\"># Calculate the extent of the window plus the overlap at the edges</span>\n            <span class=\"n\">min_range</span> <span class=\"o\">=</span> <span class=\"nb\">max</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">i</span> <span class=\"o\">-</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">context_window_overlap</span><span class=\"p\">)</span>\n            <span class=\"n\">max_range</span> <span class=\"o\">=</span> <span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">context_window_size</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">context_window_overlap</span>\n            <span class=\"n\">chunk</span> <span class=\"o\">=</span> <span class=\"n\">text</span><span class=\"p\">[</span><span class=\"n\">min_range</span><span class=\"p\">:</span><span class=\"n\">max_range</span><span class=\"p\">]</span>\n            <span class=\"n\">tags</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">Tag</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"n\">chunk</span><span class=\"p\">,</span> <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"n\">metadata</span><span class=\"p\">))</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_index</span><span class=\"p\">(</span><span class=\"n\">index_handle</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">tags</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_index_block</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">block</span><span class=\"p\">:</span> <span class=\"n\">Block</span><span class=\"p\">,</span> <span class=\"n\">metadata</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">index_handle</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"p\">):</span>\n        <span class=\"n\">page_id</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_page</span><span class=\"p\">(</span><span class=\"n\">block</span><span class=\"p\">)</span>\n        <span class=\"n\">_metadata</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"k\">if</span> <span class=\"n\">metadata</span><span class=\"p\">:</span>\n            <span class=\"n\">_metadata</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">metadata</span><span class=\"p\">)</span>\n        <span class=\"n\">_metadata</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;source&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;file_id&quot;</span><span class=\"p\">:</span> <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">file_id</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;block_id&quot;</span><span class=\"p\">:</span> <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;page&quot;</span><span class=\"p\">:</span> <span class=\"n\">page_id</span><span class=\"p\">,</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">index_text</span><span class=\"p\">(</span><span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">,</span> <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"n\">_metadata</span><span class=\"p\">,</span> <span class=\"n\">index_handle</span><span class=\"o\">=</span><span class=\"n\">index_handle</span><span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"IndexerMixin.index_block\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.invocable.mixins/#steamship.invocable.mixins.indexer_mixin.IndexerMixin.index_block\">[docs]</a>    <span class=\"nd\">@post</span><span class=\"p\">(</span><span class=\"s2\">&quot;/index_block&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">index_block</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">block_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">metadata</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">index_handle</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"p\">):</span>\n        <span class=\"n\">block</span> <span class=\"o\">=</span> <span class=\"n\">Block</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">_id</span><span class=\"o\">=</span><span class=\"n\">block_id</span><span class=\"p\">)</span>\n        <span class=\"n\">page_id</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_page</span><span class=\"p\">(</span><span class=\"n\">block</span><span class=\"p\">)</span>\n        <span class=\"n\">_metadata</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n        <span class=\"n\">_metadata</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">metadata</span><span class=\"p\">)</span>\n        <span class=\"n\">_metadata</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;source&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;file_id&quot;</span><span class=\"p\">:</span> <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">file_id</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;block_id&quot;</span><span class=\"p\">:</span> <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;page&quot;</span><span class=\"p\">:</span> <span class=\"n\">page_id</span><span class=\"p\">,</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">index_text</span><span class=\"p\">(</span><span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">,</span> <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"n\">_metadata</span><span class=\"p\">,</span> <span class=\"n\">index_handle</span><span class=\"o\">=</span><span class=\"n\">index_handle</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"IndexerMixin.index_file\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.invocable.mixins/#steamship.invocable.mixins.indexer_mixin.IndexerMixin.index_file\">[docs]</a>    <span class=\"nd\">@post</span><span class=\"p\">(</span><span class=\"s2\">&quot;/index_file&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">index_file</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">file_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">metadata</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">index_handle</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bool</span><span class=\"p\">:</span>\n        <span class=\"n\">file</span> <span class=\"o\">=</span> <span class=\"n\">File</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">_id</span><span class=\"o\">=</span><span class=\"n\">file_id</span><span class=\"p\">)</span>\n        <span class=\"n\">update_file_status</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Indexing&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">block</span> <span class=\"ow\">in</span> <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">blocks</span> <span class=\"ow\">or</span> <span class=\"p\">[]:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_index_block</span><span class=\"p\">(</span><span class=\"n\">block</span><span class=\"p\">,</span> <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"n\">metadata</span><span class=\"p\">,</span> <span class=\"n\">index_handle</span><span class=\"o\">=</span><span class=\"n\">index_handle</span><span class=\"p\">)</span>\n\n        <span class=\"n\">update_file_status</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Indexed&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"kc\">True</span></div>\n\n<div class=\"viewcode-block\" id=\"IndexerMixin.search_index\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.invocable.mixins/#steamship.invocable.mixins.indexer_mixin.IndexerMixin.search_index\">[docs]</a>    <span class=\"nd\">@post</span><span class=\"p\">(</span><span class=\"s2\">&quot;/search_index&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">search_index</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">index_handle</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">SearchResults</span><span class=\"p\">:</span>\n        <span class=\"n\">index</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_index</span><span class=\"p\">(</span><span class=\"n\">index_handle</span><span class=\"p\">)</span>\n        <span class=\"n\">task</span> <span class=\"o\">=</span> <span class=\"n\">index</span><span class=\"o\">.</span><span class=\"n\">search</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">wait</span><span class=\"p\">()</span></div></div>\n</pre></div>", "current_page_name": "_modules/steamship/invocable/mixins/indexer_mixin", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "furo_version": "2023.03.27", "furo_navigation_tree": "", "furo_hide_toc": true, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#272822", "foreground": "#f8f8f2"}}}