{"parents": [{"link": "../../../../", "title": "Module code"}], "title": "steamship.invocable.mixins.blockifier_mixin", "body": "<h1>Source code for steamship.invocable.mixins.blockifier_mixin</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Optional</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">steamship</span> <span class=\"kn\">import</span> <span class=\"n\">File</span><span class=\"p\">,</span> <span class=\"n\">MimeTypes</span><span class=\"p\">,</span> <span class=\"n\">Steamship</span><span class=\"p\">,</span> <span class=\"n\">SteamshipError</span><span class=\"p\">,</span> <span class=\"n\">Task</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.invocable</span> <span class=\"kn\">import</span> <span class=\"n\">post</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.invocable.package_mixin</span> <span class=\"kn\">import</span> <span class=\"n\">PackageMixin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.utils.file_tags</span> <span class=\"kn\">import</span> <span class=\"n\">update_file_status</span>\n\n\n<div class=\"viewcode-block\" id=\"BlockifierMixin\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.invocable.mixins/#steamship.invocable.mixins.blockifier_mixin.BlockifierMixin\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">BlockifierMixin</span><span class=\"p\">(</span><span class=\"n\">PackageMixin</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Provides endpoints for easy Blockification of files.&quot;&quot;&quot;</span>\n\n    <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Steamship</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Steamship</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">client</span>\n\n<div class=\"viewcode-block\" id=\"BlockifierMixin.blockify\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.invocable.mixins/#steamship.invocable.mixins.blockifier_mixin.BlockifierMixin.blockify\">[docs]</a>    <span class=\"nd\">@post</span><span class=\"p\">(</span><span class=\"s2\">&quot;/blockify_file&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">blockify</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">file_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n        <span class=\"n\">mime_type</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">MimeTypes</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">blockifier_handle</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">after_task_id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Task</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Blockify the file `file_id` using a curated set of defaults for the provided `mime_type`.</span>\n\n<span class=\"sd\">        If no MIME Type is provided, the file&#39;s recorded MIME Type will be used.</span>\n<span class=\"sd\">        If still no MIME Type is available, an error will be thrown.</span>\n\n<span class=\"sd\">        Supported MIME Types:</span>\n\n<span class=\"sd\">        - PDF</span>\n<span class=\"sd\">        - Audio (MP3, MP4, WEBM)</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"n\">file</span> <span class=\"o\">=</span> <span class=\"n\">File</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">_id</span><span class=\"o\">=</span><span class=\"n\">file_id</span><span class=\"p\">)</span>\n        <span class=\"n\">update_file_status</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Blockifying&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"n\">_mime_type</span> <span class=\"o\">=</span> <span class=\"n\">mime_type</span> <span class=\"ow\">or</span> <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">mime_type</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">_mime_type</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">SteamshipError</span><span class=\"p\">(</span>\n                <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s2\">&quot;No MIME Type found for file </span><span class=\"si\">{</span><span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"si\">}</span><span class=\"s2\">. Unable to blockify.&quot;</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"n\">plugin_instance</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">blockifier_handle</span><span class=\"p\">:</span>\n            <span class=\"n\">plugin_instance</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">use_plugin</span><span class=\"p\">(</span><span class=\"n\">blockifier_handle</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">_mime_type</span> <span class=\"o\">==</span> <span class=\"n\">MimeTypes</span><span class=\"o\">.</span><span class=\"n\">PDF</span><span class=\"p\">:</span>\n            <span class=\"n\">plugin_instance</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">use_plugin</span><span class=\"p\">(</span><span class=\"s2\">&quot;pdf-blockifier&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">_mime_type</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"n\">MimeTypes</span><span class=\"o\">.</span><span class=\"n\">MP3</span><span class=\"p\">,</span> <span class=\"n\">MimeTypes</span><span class=\"o\">.</span><span class=\"n\">MP4_AUDIO</span><span class=\"p\">,</span> <span class=\"n\">MimeTypes</span><span class=\"o\">.</span><span class=\"n\">WEBM_AUDIO</span><span class=\"p\">]:</span>\n            <span class=\"n\">plugin_instance</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">use_plugin</span><span class=\"p\">(</span><span class=\"s2\">&quot;s2t-blockifier-default&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">_mime_type</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"n\">MimeTypes</span><span class=\"o\">.</span><span class=\"n\">MKD</span><span class=\"p\">,</span> <span class=\"n\">MimeTypes</span><span class=\"o\">.</span><span class=\"n\">TXT</span><span class=\"p\">]:</span>\n            <span class=\"n\">plugin_instance</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">use_plugin</span><span class=\"p\">(</span><span class=\"s2\">&quot;markdown-blockifier-default&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">plugin_instance</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">SteamshipError</span><span class=\"p\">(</span>\n                <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Unable to blockify file </span><span class=\"si\">{</span><span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"si\">}</span><span class=\"s2\">. MIME Type </span><span class=\"si\">{</span><span class=\"n\">_mime_type</span><span class=\"si\">}</span><span class=\"s2\"> unsupported&quot;</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"c1\"># Postpone the operation if required.</span>\n        <span class=\"n\">wait_on_tasks</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">if</span> <span class=\"n\">after_task_id</span><span class=\"p\">:</span>\n            <span class=\"n\">wait_on_tasks</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">Task</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">task_id</span><span class=\"o\">=</span><span class=\"n\">after_task_id</span><span class=\"p\">))</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">blockify</span><span class=\"p\">(</span><span class=\"n\">plugin_instance</span><span class=\"o\">.</span><span class=\"n\">handle</span><span class=\"p\">,</span> <span class=\"n\">wait_on_tasks</span><span class=\"o\">=</span><span class=\"n\">wait_on_tasks</span><span class=\"p\">)</span></div></div>\n</pre></div>", "current_page_name": "_modules/steamship/invocable/mixins/blockifier_mixin", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "furo_version": "2023.03.27", "furo_navigation_tree": "", "furo_hide_toc": true, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#272822", "foreground": "#f8f8f2"}}}