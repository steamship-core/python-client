{"parents": [{"link": "../../../../", "title": "Module code"}], "title": "steamship.invocable.mixins.file_importer_mixin", "body": "<h1>Source code for steamship.invocable.mixins.file_importer_mixin</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">,</span> <span class=\"n\">Tuple</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">requests</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">steamship</span> <span class=\"kn\">import</span> <span class=\"n\">DocTag</span><span class=\"p\">,</span> <span class=\"n\">File</span><span class=\"p\">,</span> <span class=\"n\">MimeTypes</span><span class=\"p\">,</span> <span class=\"n\">Steamship</span><span class=\"p\">,</span> <span class=\"n\">SteamshipError</span><span class=\"p\">,</span> <span class=\"n\">Tag</span><span class=\"p\">,</span> <span class=\"n\">Task</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.invocable</span> <span class=\"kn\">import</span> <span class=\"n\">post</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.invocable.package_mixin</span> <span class=\"kn\">import</span> <span class=\"n\">PackageMixin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.utils.file_tags</span> <span class=\"kn\">import</span> <span class=\"n\">update_file_status</span>\n\n\n<div class=\"viewcode-block\" id=\"FileImporterMixin\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.invocable.mixins/#steamship.invocable.mixins.file_importer_mixin.FileImporterMixin\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">FileImporterMixin</span><span class=\"p\">(</span><span class=\"n\">PackageMixin</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Provide endpoints for easy file import -- both sync and async.&quot;&quot;&quot;</span>\n\n    <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Steamship</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Steamship</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">client</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_async_importer_for_url</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Return the async importer plugin, if necessary.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;youtube.com&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">url</span> <span class=\"ow\">or</span> <span class=\"s2\">&quot;youtu.be&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">url</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"s2\">&quot;youtube-file-importer&quot;</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_import_with_async_importer</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n        <span class=\"n\">importer_handle</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n        <span class=\"n\">mime_type</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">tags</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Tag</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">File</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Task</span><span class=\"p\">]]:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Import a URL via an async FileImporter, returning a synchronous File but async import Task.&quot;&quot;&quot;</span>\n\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"s2\">&quot;youtube&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">url</span> <span class=\"ow\">or</span> <span class=\"s2\">&quot;youtu.be&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">url</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"n\">mime_type</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Mark it as audio so that the s2t will work later.</span>\n            <span class=\"n\">mime_type</span> <span class=\"o\">=</span> <span class=\"n\">MimeTypes</span><span class=\"o\">.</span><span class=\"n\">MP3</span>\n\n        <span class=\"n\">file</span> <span class=\"o\">=</span> <span class=\"n\">File</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"n\">tags</span><span class=\"p\">,</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"n\">mime_type</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">importer_handle</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">SteamshipError</span><span class=\"p\">(</span>\n                <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Unable to async auto-guess file importer for </span><span class=\"si\">{</span><span class=\"n\">url</span><span class=\"si\">}</span><span class=\"s2\"> and none was provided.&quot;</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"n\">file_importer</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">use_plugin</span><span class=\"p\">(</span><span class=\"n\">importer_handle</span><span class=\"p\">)</span>\n        <span class=\"n\">task</span> <span class=\"o\">=</span> <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">import_with_plugin</span><span class=\"p\">(</span>\n            <span class=\"n\">plugin_instance</span><span class=\"o\">=</span><span class=\"n\">file_importer</span><span class=\"o\">.</span><span class=\"n\">handle</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"n\">mime_type</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">update_file_status</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Importing&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"n\">task</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_scrape_and_import_url</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n        <span class=\"n\">mime_type</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">tags</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Tag</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">File</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Task</span><span class=\"p\">]]:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Scrape and then import the URL to a File, returning a synchronous File and no import Task.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">mime_type</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"ow\">and</span> <span class=\"s2\">&quot;.pdf&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">url</span><span class=\"p\">:</span>\n            <span class=\"n\">mime_type</span> <span class=\"o\">=</span> <span class=\"n\">MimeTypes</span><span class=\"o\">.</span><span class=\"n\">PDF</span>\n\n        <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span>\n        <span class=\"n\">_bytes</span> <span class=\"o\">=</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">content</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">ok</span><span class=\"p\">:</span>\n            <span class=\"n\">msg</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;Error importing url </span><span class=\"si\">{</span><span class=\"n\">url</span><span class=\"si\">}</span><span class=\"s2\">. Response was </span><span class=\"si\">{</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n            <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>\n            <span class=\"k\">raise</span> <span class=\"n\">SteamshipError</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"o\">=</span><span class=\"n\">msg</span><span class=\"p\">)</span>\n\n        <span class=\"n\">file</span> <span class=\"o\">=</span> <span class=\"n\">File</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">content</span><span class=\"o\">=</span><span class=\"n\">_bytes</span><span class=\"p\">,</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"n\">mime_type</span><span class=\"p\">,</span> <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"n\">tags</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"kc\">None</span>\n\n<div class=\"viewcode-block\" id=\"FileImporterMixin.import_url_to_file_and_task\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.invocable.mixins/#steamship.invocable.mixins.file_importer_mixin.FileImporterMixin.import_url_to_file_and_task\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">import_url_to_file_and_task</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">File</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Task</span><span class=\"p\">]]:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Import the provided URL, returning the file and optional task, if async work is required.&quot;&quot;&quot;</span>\n        <span class=\"n\">async_importer_for_url</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_async_importer_for_url</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span>\n\n        <span class=\"n\">source_tag</span> <span class=\"o\">=</span> <span class=\"n\">Tag</span><span class=\"p\">(</span><span class=\"n\">kind</span><span class=\"o\">=</span><span class=\"n\">DocTag</span><span class=\"o\">.</span><span class=\"n\">SOURCE</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">url</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Hacky way to get ta title</span>\n        <span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"n\">url</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;/&quot;</span><span class=\"p\">)[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n        <span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"n\">title</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;?&quot;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"n\">title</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">&quot;#&quot;</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n        <span class=\"n\">title_tag</span> <span class=\"o\">=</span> <span class=\"n\">Tag</span><span class=\"p\">(</span><span class=\"n\">kind</span><span class=\"o\">=</span><span class=\"n\">DocTag</span><span class=\"o\">.</span><span class=\"n\">TITLE</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">title</span><span class=\"p\">)</span>\n        <span class=\"n\">tags</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">source_tag</span><span class=\"p\">,</span> <span class=\"n\">title_tag</span><span class=\"p\">]</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">async_importer_for_url</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_import_with_async_importer</span><span class=\"p\">(</span>\n                <span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">async_importer_for_url</span><span class=\"p\">,</span> <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"n\">tags</span><span class=\"p\">,</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"kc\">None</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_scrape_and_import_url</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"n\">tags</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"FileImporterMixin.import_url\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.invocable.mixins/#steamship.invocable.mixins.file_importer_mixin.FileImporterMixin.import_url\">[docs]</a>    <span class=\"nd\">@post</span><span class=\"p\">(</span><span class=\"s2\">&quot;/import_url&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">import_url</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">File</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Import the URL to a Steamship File. Actual import will be scheduled Async.&quot;&quot;&quot;</span>\n        <span class=\"n\">file</span><span class=\"p\">,</span> <span class=\"n\">task</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">import_url_to_file_and_task</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">file</span></div>\n\n<div class=\"viewcode-block\" id=\"FileImporterMixin.import_text\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.invocable.mixins/#steamship.invocable.mixins.file_importer_mixin.FileImporterMixin.import_text\">[docs]</a>    <span class=\"nd\">@post</span><span class=\"p\">(</span><span class=\"s2\">&quot;/import_text&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">import_text</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">mime_type</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">])</span> <span class=\"o\">-&gt;</span> <span class=\"n\">File</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Import the text to a Steamship File.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"n\">File</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">content</span><span class=\"o\">=</span><span class=\"n\">text</span><span class=\"p\">,</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"n\">mime_type</span><span class=\"p\">)</span></div></div>\n</pre></div>", "current_page_name": "_modules/steamship/invocable/mixins/file_importer_mixin", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "furo_version": "2023.03.27", "furo_navigation_tree": "", "furo_hide_toc": true, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#272822", "foreground": "#f8f8f2"}}}