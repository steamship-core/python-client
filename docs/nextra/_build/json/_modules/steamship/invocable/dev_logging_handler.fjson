{"parents": [{"link": "../../../", "title": "Module code"}], "title": "steamship.invocable.dev_logging_handler", "body": "<h1>Source code for steamship.invocable.dev_logging_handler</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">from</span> <span class=\"nn\">logging</span> <span class=\"kn\">import</span> <span class=\"n\">StreamHandler</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">cast</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">fluent.handler</span> <span class=\"kn\">import</span> <span class=\"n\">FluentRecordFormatter</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.agents.logging</span> <span class=\"kn\">import</span> <span class=\"n\">AgentLogging</span>\n\n<span class=\"n\">LOGGING_FORMAT</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">&quot;level&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;</span><span class=\"si\">%(levelname)s</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;host&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;</span><span class=\"si\">%(hostname)s</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;where&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;</span><span class=\"si\">%(module)s</span><span class=\"s2\">.</span><span class=\"si\">%(filename)s</span><span class=\"s2\">.</span><span class=\"si\">%(funcName)s</span><span class=\"s2\">:</span><span class=\"si\">%(lineno)s</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;</span><span class=\"si\">%(levelname)s</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;stack_trace&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;</span><span class=\"si\">%(exc_text)s</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;message_type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;</span><span class=\"si\">%(message_type)s</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;component_name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;</span><span class=\"si\">%(component_name)s</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">AgentLogging</span><span class=\"o\">.</span><span class=\"n\">IS_MESSAGE</span><span class=\"p\">:</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;%(</span><span class=\"si\">{</span><span class=\"n\">AgentLogging</span><span class=\"o\">.</span><span class=\"n\">IS_MESSAGE</span><span class=\"si\">}</span><span class=\"s2\">)s&quot;</span><span class=\"p\">,</span>  <span class=\"c1\"># b doesn&#39;t work. Unsure how to make a bool</span>\n    <span class=\"n\">AgentLogging</span><span class=\"o\">.</span><span class=\"n\">AGENT_NAME</span><span class=\"p\">:</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;%(</span><span class=\"si\">{</span><span class=\"n\">AgentLogging</span><span class=\"o\">.</span><span class=\"n\">AGENT_NAME</span><span class=\"si\">}</span><span class=\"s2\">)s&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">AgentLogging</span><span class=\"o\">.</span><span class=\"n\">MESSAGE_AUTHOR</span><span class=\"p\">:</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;%(</span><span class=\"si\">{</span><span class=\"n\">AgentLogging</span><span class=\"o\">.</span><span class=\"n\">MESSAGE_AUTHOR</span><span class=\"si\">}</span><span class=\"s2\">)s&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">AgentLogging</span><span class=\"o\">.</span><span class=\"n\">MESSAGE_TYPE</span><span class=\"p\">:</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;%(</span><span class=\"si\">{</span><span class=\"n\">AgentLogging</span><span class=\"o\">.</span><span class=\"n\">MESSAGE_TYPE</span><span class=\"si\">}</span><span class=\"s2\">)s&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">AgentLogging</span><span class=\"o\">.</span><span class=\"n\">TOOL_NAME</span><span class=\"p\">:</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;%(</span><span class=\"si\">{</span><span class=\"n\">AgentLogging</span><span class=\"o\">.</span><span class=\"n\">TOOL_NAME</span><span class=\"si\">}</span><span class=\"s2\">)s&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n\n<div class=\"viewcode-block\" id=\"DevelopmentLoggingHandler\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.invocable/#steamship.invocable.dev_logging_handler.DevelopmentLoggingHandler\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">DevelopmentLoggingHandler</span><span class=\"p\">(</span><span class=\"n\">StreamHandler</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;A logging handler for developing Steamship Agents, Tools, Packages, and Plugins locally.&quot;&quot;&quot;</span>\n\n    <span class=\"n\">log_level</span><span class=\"p\">:</span> <span class=\"nb\">any</span>\n    <span class=\"n\">log_level_with_message_type</span><span class=\"p\">:</span> <span class=\"nb\">any</span>\n    <span class=\"n\">file_log_level</span><span class=\"p\">:</span> <span class=\"nb\">any</span>\n    <span class=\"n\">file_handler</span><span class=\"p\">:</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">FileHandler</span>\n    <span class=\"n\">log_filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">log_level</span><span class=\"p\">:</span> <span class=\"nb\">any</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">WARN</span><span class=\"p\">,</span>\n        <span class=\"n\">log_level_for_messages</span><span class=\"p\">:</span> <span class=\"nb\">any</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">INFO</span><span class=\"p\">,</span>\n        <span class=\"n\">file_log_level</span><span class=\"p\">:</span> <span class=\"nb\">any</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">INFO</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"n\">StreamHandler</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n        <span class=\"n\">formatter</span> <span class=\"o\">=</span> <span class=\"n\">FluentRecordFormatter</span><span class=\"p\">(</span><span class=\"n\">LOGGING_FORMAT</span><span class=\"p\">,</span> <span class=\"n\">fill_missing_fmt_key</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">setFormatter</span><span class=\"p\">(</span><span class=\"n\">formatter</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">log_level</span> <span class=\"o\">=</span> <span class=\"n\">log_level</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">log_level_for_messages</span> <span class=\"o\">=</span> <span class=\"n\">log_level_for_messages</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">file_log_level</span> <span class=\"o\">=</span> <span class=\"n\">file_log_level</span>\n\n        <span class=\"n\">timestr</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s2\">&quot;shiplog--%Y-%m-</span><span class=\"si\">%d</span><span class=\"s2\">--%H:%M:%S.log&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"s2\">&quot;logs&quot;</span><span class=\"p\">):</span>\n                <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">makedirs</span><span class=\"p\">(</span><span class=\"s2\">&quot;logs&quot;</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">log_filename</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"s2\">&quot;logs&quot;</span><span class=\"p\">,</span> <span class=\"n\">timestr</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"ne\">BaseException</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Unable to create logs/ directory to store debugging logs.&quot;</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">log_filename</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"s2\">&quot;logs&quot;</span><span class=\"p\">,</span> <span class=\"n\">timestr</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">file_handler</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">FileHandler</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">log_filename</span><span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"DevelopmentLoggingHandler.init_and_take_root\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.invocable/#steamship.invocable.dev_logging_handler.DevelopmentLoggingHandler.init_and_take_root\">[docs]</a>    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">init_and_take_root</span><span class=\"p\">(</span><span class=\"n\">log_level</span><span class=\"p\">:</span> <span class=\"nb\">any</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">INFO</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"s2\">&quot;DevelopmentLoggingHandler&quot;</span><span class=\"p\">:</span>\n        <span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">()</span>\n        <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">handlers</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">()</span>\n        <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">setLevel</span><span class=\"p\">(</span><span class=\"n\">log_level</span><span class=\"p\">)</span>\n        <span class=\"n\">dev_logging_handler</span> <span class=\"o\">=</span> <span class=\"n\">DevelopmentLoggingHandler</span><span class=\"p\">()</span>\n        <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">addHandler</span><span class=\"p\">(</span><span class=\"n\">dev_logging_handler</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">dev_logging_handler</span></div>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_emit_regular</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">message_dict</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">):</span>\n        <span class=\"n\">level</span> <span class=\"o\">=</span> <span class=\"n\">message_dict</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;level&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n        <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">message_dict</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;message&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;[</span><span class=\"si\">{</span><span class=\"n\">level</span><span class=\"si\">}</span><span class=\"s2\">] </span><span class=\"si\">{</span><span class=\"n\">message</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_emit_message</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">message_dict</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">):</span>\n        <span class=\"n\">author</span> <span class=\"o\">=</span> <span class=\"n\">message_dict</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">AgentLogging</span><span class=\"o\">.</span><span class=\"n\">MESSAGE_AUTHOR</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Unknown&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">message_dict</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;message&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n        <span class=\"n\">message_type</span> <span class=\"o\">=</span> <span class=\"n\">message_dict</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">AgentLogging</span><span class=\"o\">.</span><span class=\"n\">MESSAGE_TYPE</span><span class=\"p\">,</span> <span class=\"n\">AgentLogging</span><span class=\"o\">.</span><span class=\"n\">MESSAGE</span><span class=\"p\">)</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;[</span><span class=\"si\">{</span><span class=\"n\">author</span><span class=\"si\">}</span><span class=\"s2\"> </span><span class=\"si\">{</span><span class=\"n\">message_type</span><span class=\"si\">}</span><span class=\"s2\">] </span><span class=\"si\">{</span><span class=\"n\">message</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"DevelopmentLoggingHandler.emit\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.invocable/#steamship.invocable.dev_logging_handler.DevelopmentLoggingHandler.emit\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">emit</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">record</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Emit the record, printing it to console out.</span>\n\n<span class=\"sd\">        We rely on TWO logging levels for the mechanics of this LoggingHandler:</span>\n\n<span class=\"sd\">        - One for standard logging</span>\n<span class=\"sd\">        - One for specific system Agent-related events, flagged with metadata</span>\n\n<span class=\"sd\">        This is to permit INFO-level logging of key Agent/Tool actions without committing the user to see all</span>\n<span class=\"sd\">        INFO-level logging globally.</span>\n\n<span class=\"sd\">        A future implementation may use a cascade of loggers attached to the AgentContext to do this more cleanly.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">file_handler</span> <span class=\"ow\">and</span> <span class=\"n\">record</span><span class=\"o\">.</span><span class=\"n\">levelno</span> <span class=\"o\">&gt;=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">file_log_level</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">file_handler</span><span class=\"o\">.</span><span class=\"n\">emit</span><span class=\"p\">(</span><span class=\"n\">record</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">file_handler</span><span class=\"o\">.</span><span class=\"n\">flush</span><span class=\"p\">()</span>\n\n        <span class=\"n\">message_dict</span> <span class=\"o\">=</span> <span class=\"n\">cast</span><span class=\"p\">(</span><span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">record</span><span class=\"p\">))</span>\n\n        <span class=\"c1\"># It will be returned as a string representation of a bool</span>\n        <span class=\"n\">is_message</span> <span class=\"o\">=</span> <span class=\"n\">message_dict</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">AgentLogging</span><span class=\"o\">.</span><span class=\"n\">IS_MESSAGE</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;True&quot;</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">record</span><span class=\"o\">.</span><span class=\"n\">levelno</span> <span class=\"o\">&gt;=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">log_level</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">is_message</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_emit_regular</span><span class=\"p\">(</span><span class=\"n\">message_dict</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">record</span><span class=\"o\">.</span><span class=\"n\">levelno</span> <span class=\"o\">&gt;=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">log_level_for_messages</span> <span class=\"ow\">and</span> <span class=\"n\">is_message</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_emit_message</span><span class=\"p\">(</span><span class=\"n\">message_dict</span><span class=\"p\">)</span></div></div>\n</pre></div>", "current_page_name": "_modules/steamship/invocable/dev_logging_handler", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "furo_version": "2023.03.27", "furo_navigation_tree": "", "furo_hide_toc": true, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#272822", "foreground": "#f8f8f2"}}}