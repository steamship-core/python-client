{"parents": [{"link": "../../../", "title": "Module code"}], "title": "steamship.base.model", "body": "<h1>Source code for steamship.base.model</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">re</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">TypeVar</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">inflection</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pydantic</span> <span class=\"kn\">import</span> <span class=\"n\">BaseModel</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pydantic.generics</span> <span class=\"kn\">import</span> <span class=\"n\">GenericModel</span>\n\n<span class=\"n\">T</span> <span class=\"o\">=</span> <span class=\"n\">TypeVar</span><span class=\"p\">(</span><span class=\"s2\">&quot;T&quot;</span><span class=\"p\">)</span>  <span class=\"c1\"># Declare type variable</span>\n\n\n<div class=\"viewcode-block\" id=\"to_camel\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.base/#steamship.base.model.to_camel\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">to_camel</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n    <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">sub</span><span class=\"p\">(</span><span class=\"s2\">&quot;_(url)$&quot;</span><span class=\"p\">,</span> <span class=\"k\">lambda</span> <span class=\"n\">m</span><span class=\"p\">:</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;_</span><span class=\"si\">{</span><span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">group</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">upper</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">inflection</span><span class=\"o\">.</span><span class=\"n\">camelize</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">uppercase_first_letter</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"CamelModel\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.base/#steamship.base.model.CamelModel\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">CamelModel</span><span class=\"p\">(</span><span class=\"n\">BaseModel</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"n\">kwargs</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"n\">v</span> <span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()</span> <span class=\"k\">if</span> <span class=\"n\">v</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">}</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"CamelModel.Config\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.base/#steamship.base.model.CamelModel.Config\">[docs]</a>    <span class=\"k\">class</span> <span class=\"nc\">Config</span><span class=\"p\">:</span>\n        <span class=\"n\">alias_generator</span> <span class=\"o\">=</span> <span class=\"n\">to_camel</span>\n        <span class=\"n\">allow_population_by_field_name</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n        <span class=\"c1\"># Populate enum values with their value, rather than the raw enum. Important to serialise model.dict()</span>\n        <span class=\"n\">use_enum_values</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></div></div>\n\n\n<div class=\"viewcode-block\" id=\"GenericCamelModel\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.base/#steamship.base.model.GenericCamelModel\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">GenericCamelModel</span><span class=\"p\">(</span><span class=\"n\">CamelModel</span><span class=\"p\">,</span> <span class=\"n\">GenericModel</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span></div>\n</pre></div>", "current_page_name": "_modules/steamship/base/model", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "furo_version": "2023.03.27", "furo_navigation_tree": "", "furo_hide_toc": true, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#272822", "foreground": "#f8f8f2"}}}