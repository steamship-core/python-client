{"parents": [{"link": "../../../", "title": "Module code"}], "title": "steamship.base.tasks", "body": "<h1>Source code for steamship.base.tasks</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">annotations</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">Generic</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">,</span> <span class=\"n\">Set</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">,</span> <span class=\"n\">TypeVar</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pydantic</span> <span class=\"kn\">import</span> <span class=\"n\">BaseModel</span><span class=\"p\">,</span> <span class=\"n\">Field</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.base.error</span> <span class=\"kn\">import</span> <span class=\"n\">SteamshipError</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.base.model</span> <span class=\"kn\">import</span> <span class=\"n\">CamelModel</span><span class=\"p\">,</span> <span class=\"n\">GenericCamelModel</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.base.request</span> <span class=\"kn\">import</span> <span class=\"n\">DeleteRequest</span><span class=\"p\">,</span> <span class=\"n\">IdentifierRequest</span><span class=\"p\">,</span> <span class=\"n\">ListRequest</span><span class=\"p\">,</span> <span class=\"n\">Request</span><span class=\"p\">,</span> <span class=\"n\">SortOrder</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.utils.metadata</span> <span class=\"kn\">import</span> <span class=\"n\">metadata_to_str</span><span class=\"p\">,</span> <span class=\"n\">str_to_metadata</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">.response</span> <span class=\"kn\">import</span> <span class=\"n\">ListResponse</span>\n\n<span class=\"n\">T</span> <span class=\"o\">=</span> <span class=\"n\">TypeVar</span><span class=\"p\">(</span><span class=\"s2\">&quot;T&quot;</span><span class=\"p\">)</span>\n\n\n<div class=\"viewcode-block\" id=\"CreateTaskCommentRequest\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.base/#steamship.CreateTaskCommentRequest\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">CreateTaskCommentRequest</span><span class=\"p\">(</span><span class=\"n\">Request</span><span class=\"p\">):</span>\n    <span class=\"n\">task_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n    <span class=\"n\">external_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">external_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">external_group</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">metadata</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></div>\n\n\n<div class=\"viewcode-block\" id=\"ListTaskCommentRequest\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.base/#steamship.ListTaskCommentRequest\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">ListTaskCommentRequest</span><span class=\"p\">(</span><span class=\"n\">ListRequest</span><span class=\"p\">):</span>\n    <span class=\"n\">task_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">external_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">external_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">external_group</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></div>\n\n\n<div class=\"viewcode-block\" id=\"TaskComment\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.base/#steamship.TaskComment\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">TaskComment</span><span class=\"p\">(</span><span class=\"n\">CamelModel</span><span class=\"p\">):</span>\n    <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Client</span> <span class=\"o\">=</span> <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">exclude</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">task_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">external_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">external_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">external_group</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">metadata</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">created_at</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;metadata&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">str_to_metadata</span><span class=\"p\">(</span><span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;metadata&quot;</span><span class=\"p\">))</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"TaskComment.parse_obj\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.base/#steamship.TaskComment.parse_obj\">[docs]</a>    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">parse_obj</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">:</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">BaseModel</span><span class=\"p\">],</span> <span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"n\">Any</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">BaseModel</span><span class=\"p\">:</span>\n        <span class=\"c1\"># TODO (enias): This needs to be solved at the engine side</span>\n        <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"n\">obj</span><span class=\"p\">[</span><span class=\"s2\">&quot;taskComment&quot;</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"s2\">&quot;taskComment&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">obj</span> <span class=\"k\">else</span> <span class=\"n\">obj</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">parse_obj</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"TaskComment.create\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.base/#steamship.TaskComment.create\">[docs]</a>    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create</span><span class=\"p\">(</span>\n        <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Client</span><span class=\"p\">,</span>\n        <span class=\"n\">task_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">external_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">external_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">external_group</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">TaskComment</span><span class=\"p\">:</span>\n        <span class=\"n\">req</span> <span class=\"o\">=</span> <span class=\"n\">CreateTaskCommentRequest</span><span class=\"p\">(</span>\n            <span class=\"n\">taskId</span><span class=\"o\">=</span><span class=\"n\">task_id</span><span class=\"p\">,</span>\n            <span class=\"n\">external_id</span><span class=\"o\">=</span><span class=\"n\">external_id</span><span class=\"p\">,</span>\n            <span class=\"n\">external_type</span><span class=\"o\">=</span><span class=\"n\">external_type</span><span class=\"p\">,</span>\n            <span class=\"n\">externalGroup</span><span class=\"o\">=</span><span class=\"n\">external_group</span><span class=\"p\">,</span>\n            <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"n\">metadata_to_str</span><span class=\"p\">(</span><span class=\"n\">metadata</span><span class=\"p\">),</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;task/comment/create&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">req</span><span class=\"p\">,</span>\n            <span class=\"n\">expect</span><span class=\"o\">=</span><span class=\"n\">TaskComment</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"TaskComment.list\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.base/#steamship.TaskComment.list\">[docs]</a>    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">list</span><span class=\"p\">(</span>\n        <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Client</span><span class=\"p\">,</span>\n        <span class=\"n\">task_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">external_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">external_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">external_group</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">page_size</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">page_token</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">sort_order</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">SortOrder</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">SortOrder</span><span class=\"o\">.</span><span class=\"n\">DESC</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">TaskCommentList</span><span class=\"p\">:</span>\n        <span class=\"n\">req</span> <span class=\"o\">=</span> <span class=\"n\">ListTaskCommentRequest</span><span class=\"p\">(</span>\n            <span class=\"n\">taskId</span><span class=\"o\">=</span><span class=\"n\">task_id</span><span class=\"p\">,</span>\n            <span class=\"n\">external_id</span><span class=\"o\">=</span><span class=\"n\">external_id</span><span class=\"p\">,</span>\n            <span class=\"n\">external_type</span><span class=\"o\">=</span><span class=\"n\">external_type</span><span class=\"p\">,</span>\n            <span class=\"n\">externalGroup</span><span class=\"o\">=</span><span class=\"n\">external_group</span><span class=\"p\">,</span>\n            <span class=\"n\">page_size</span><span class=\"o\">=</span><span class=\"n\">page_size</span><span class=\"p\">,</span>\n            <span class=\"n\">page_token</span><span class=\"o\">=</span><span class=\"n\">page_token</span><span class=\"p\">,</span>\n            <span class=\"n\">sort_order</span><span class=\"o\">=</span><span class=\"n\">sort_order</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;task/comment/list&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">req</span><span class=\"p\">,</span>\n            <span class=\"n\">expect</span><span class=\"o\">=</span><span class=\"n\">TaskCommentList</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"TaskComment.delete\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.base/#steamship.TaskComment.delete\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">delete</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">TaskComment</span><span class=\"p\">:</span>\n        <span class=\"n\">req</span> <span class=\"o\">=</span> <span class=\"n\">DeleteRequest</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;task/comment/delete&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">req</span><span class=\"p\">,</span>\n            <span class=\"n\">expect</span><span class=\"o\">=</span><span class=\"n\">TaskComment</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span></div></div>\n\n\n<div class=\"viewcode-block\" id=\"TaskCommentList\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.base/#steamship.TaskCommentList\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">TaskCommentList</span><span class=\"p\">(</span><span class=\"n\">ListResponse</span><span class=\"p\">):</span>\n    <span class=\"n\">comments</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">TaskComment</span><span class=\"p\">]</span></div>\n\n\n<div class=\"viewcode-block\" id=\"TaskState\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.base/#steamship.TaskState\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">TaskState</span><span class=\"p\">:</span>\n    <span class=\"n\">waiting</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;waiting&quot;</span>\n    <span class=\"n\">running</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;running&quot;</span>\n    <span class=\"n\">succeeded</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;succeeded&quot;</span>\n    <span class=\"n\">failed</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;failed&quot;</span></div>\n\n\n<div class=\"viewcode-block\" id=\"TaskType\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.base/#steamship.TaskType\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">TaskType</span><span class=\"p\">:</span>\n    <span class=\"n\">internal_api</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;internalApi&quot;</span>\n    <span class=\"n\">train</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;train&quot;</span>\n    <span class=\"n\">infer</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;infer&quot;</span></div>\n\n\n<div class=\"viewcode-block\" id=\"TaskRunRequest\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.base/#steamship.TaskRunRequest\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">TaskRunRequest</span><span class=\"p\">(</span><span class=\"n\">Request</span><span class=\"p\">):</span>\n    <span class=\"n\">task_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></div>\n\n\n<div class=\"viewcode-block\" id=\"TaskStatusRequest\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.base/#steamship.TaskStatusRequest\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">TaskStatusRequest</span><span class=\"p\">(</span><span class=\"n\">Request</span><span class=\"p\">):</span>\n    <span class=\"n\">task_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></div>\n\n\n<div class=\"viewcode-block\" id=\"Task\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.base/#steamship.Task\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Task</span><span class=\"p\">(</span><span class=\"n\">GenericCamelModel</span><span class=\"p\">,</span> <span class=\"n\">Generic</span><span class=\"p\">[</span><span class=\"n\">T</span><span class=\"p\">]):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Encapsulates a unit of asynchronously performed work.&quot;&quot;&quot;</span>\n\n    <span class=\"c1\"># Note: The Field object prevents this from being serialized into JSON (and causing a crash)</span>\n    <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Client</span> <span class=\"o\">=</span> <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">exclude</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>  <span class=\"c1\"># Steamship client</span>\n\n    <span class=\"n\">task_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>  <span class=\"c1\"># The id of this task</span>\n    <span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>  <span class=\"c1\"># The user who requested this task</span>\n    <span class=\"n\">workspace_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>  <span class=\"c1\"># The workspace in which this task is executing</span>\n\n    <span class=\"c1\"># Note: The Field object prevents this from being serialized into JSON (and causing a crash)</span>\n    <span class=\"n\">expect</span><span class=\"p\">:</span> <span class=\"n\">Type</span> <span class=\"o\">=</span> <span class=\"n\">Field</span><span class=\"p\">(</span>\n        <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">exclude</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n    <span class=\"p\">)</span>  <span class=\"c1\"># Type of the expected output once the output is complete.</span>\n\n    <span class=\"nb\">input</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>  <span class=\"c1\"># The input provided to the task</span>\n    <span class=\"n\">output</span><span class=\"p\">:</span> <span class=\"n\">T</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>  <span class=\"c1\"># The output of the task</span>\n    <span class=\"n\">state</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>  <span class=\"c1\"># A value in class TaskState</span>\n\n    <span class=\"n\">status_message</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>  <span class=\"c1\"># User-facing message concerning task status</span>\n    <span class=\"n\">status_suggestion</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>  <span class=\"c1\"># User-facing suggestion concerning error remediation</span>\n    <span class=\"n\">status_code</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>  <span class=\"c1\"># User-facing error code for support assistance</span>\n    <span class=\"n\">status_created_on</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>  <span class=\"c1\"># When the status fields were last set</span>\n\n    <span class=\"n\">task_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>  <span class=\"c1\"># A value in class TaskType; for internal routing</span>\n    <span class=\"n\">task_executor</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>  <span class=\"c1\">#</span>\n    <span class=\"n\">task_created_on</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>  <span class=\"c1\"># When the task object was created</span>\n    <span class=\"n\">task_last_modified_on</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>  <span class=\"c1\"># When the task object was last modified</span>\n\n    <span class=\"c1\"># Long Running Plugin Support</span>\n    <span class=\"c1\"># The `remote_status_*` fields govern how Steamship Plugins can communicate long-running work back to the engine.</span>\n    <span class=\"c1\"># If instead of sending data, the plugin sends a status with these fields set, the engine will begin polling for</span>\n    <span class=\"c1\"># updates, echoing the contents of these fields back to the plugin to communicate, e.g., the jobId of the work</span>\n    <span class=\"c1\"># being checked. When the work is complete, simply respond with the Response `data` field set as per usual.</span>\n    <span class=\"n\">remote_status_input</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span>\n        <span class=\"n\">Dict</span>\n    <span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>  <span class=\"c1\"># For re-hydrating state in order to check remote status.</span>\n    <span class=\"n\">remote_status_output</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span>\n        <span class=\"n\">Dict</span>\n    <span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>  <span class=\"c1\"># For reporting structured JSON state for error diagnostics.</span>\n    <span class=\"n\">remote_status_message</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>  <span class=\"c1\"># User facing message string to report on remote status.</span>\n\n    <span class=\"n\">assigned_worker</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>  <span class=\"c1\"># The worker assigned to complete this task</span>\n    <span class=\"n\">started_at</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>  <span class=\"c1\"># When the work on this task began</span>\n\n    <span class=\"n\">max_retries</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>  <span class=\"c1\"># The maximum number of retries allowed for this task</span>\n    <span class=\"n\">retries</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>  <span class=\"c1\"># The number of retries already used.</span>\n\n<div class=\"viewcode-block\" id=\"Task.as_error\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.base/#steamship.Task.as_error\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">as_error</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">SteamshipError</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">SteamshipError</span><span class=\"p\">(</span>\n            <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">status_message</span><span class=\"p\">,</span> <span class=\"n\">suggestion</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">status_suggestion</span><span class=\"p\">,</span> <span class=\"n\">code</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">status_code</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Task.parse_obj\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.base/#steamship.Task.parse_obj\">[docs]</a>    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">parse_obj</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">:</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">BaseModel</span><span class=\"p\">],</span> <span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"n\">Any</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Task</span><span class=\"p\">:</span>\n        <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"n\">obj</span><span class=\"p\">[</span><span class=\"s2\">&quot;task&quot;</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"s2\">&quot;task&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">obj</span> <span class=\"k\">else</span> <span class=\"n\">obj</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">parse_obj</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Task.get\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.base/#steamship.Task.get\">[docs]</a>    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">(</span>\n        <span class=\"n\">client</span><span class=\"p\">,</span>\n        <span class=\"n\">_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">handle</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Task</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;task/get&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">IdentifierRequest</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"n\">_id</span><span class=\"p\">,</span> <span class=\"n\">handle</span><span class=\"o\">=</span><span class=\"n\">handle</span><span class=\"p\">),</span>\n            <span class=\"n\">expect</span><span class=\"o\">=</span><span class=\"n\">Task</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Task.update\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.base/#steamship.Task.update\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">update</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">other</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Task</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Incorporates a `Task` into this object.&quot;&quot;&quot;</span>\n        <span class=\"n\">other</span> <span class=\"o\">=</span> <span class=\"n\">other</span> <span class=\"ow\">or</span> <span class=\"n\">Task</span><span class=\"p\">()</span>\n        <span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">other</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">():</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">v</span></div>\n\n<div class=\"viewcode-block\" id=\"Task.add_comment\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.base/#steamship.Task.add_comment\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">add_comment</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">external_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">external_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">external_group</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">metadata</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">TaskComment</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">TaskComment</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span>\n            <span class=\"n\">client</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">,</span>\n            <span class=\"n\">task_id</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">task_id</span><span class=\"p\">,</span>\n            <span class=\"n\">external_id</span><span class=\"o\">=</span><span class=\"n\">external_id</span><span class=\"p\">,</span>\n            <span class=\"n\">external_type</span><span class=\"o\">=</span><span class=\"n\">external_type</span><span class=\"p\">,</span>\n            <span class=\"n\">external_group</span><span class=\"o\">=</span><span class=\"n\">external_group</span><span class=\"p\">,</span>\n            <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"n\">metadata</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Task.post_update\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.base/#steamship.Task.post_update\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">post_update</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">fields</span><span class=\"p\">:</span> <span class=\"n\">Set</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Task</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Updates this task in the Steamship Engine.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"p\">,</span> <span class=\"nb\">set</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">RuntimeError</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">&#39;Unexpected type of &quot;fields&quot;: </span><span class=\"si\">{</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s1\">. Expected type set.&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">body</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dict</span><span class=\"p\">(</span><span class=\"n\">by_alias</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"o\">*</span><span class=\"n\">fields</span><span class=\"p\">,</span> <span class=\"s2\">&quot;task_id&quot;</span><span class=\"p\">})</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s2\">&quot;task/update&quot;</span><span class=\"p\">,</span> <span class=\"n\">body</span><span class=\"p\">,</span> <span class=\"n\">expect</span><span class=\"o\">=</span><span class=\"n\">Task</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Task.wait\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.base/#steamship.Task.wait\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">wait</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">max_timeout_s</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">180</span><span class=\"p\">,</span>\n        <span class=\"n\">retry_delay_s</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"n\">on_each_refresh</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Optional[Callable[[int, float, Task], None]]&quot;</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Polls and blocks until the task has succeeded or failed (or timeout reached).</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        max_timeout_s : int</span>\n<span class=\"sd\">            Max timeout in seconds. Default: 180s. After this timeout, an exception will be thrown.</span>\n<span class=\"sd\">        retry_delay_s : float</span>\n<span class=\"sd\">            Delay between status checks. Default: 1s.</span>\n<span class=\"sd\">        on_each_refresh : Optional[Callable[[int, float, Task], None]]</span>\n<span class=\"sd\">            Optional call back you can get after each refresh is made, including success state refreshes.</span>\n<span class=\"sd\">            The signature represents: (refresh #, total elapsed time, task)</span>\n\n<span class=\"sd\">            WARNING: Do not pass a long-running function to this variable. It will block the update polling.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">t0</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">perf_counter</span><span class=\"p\">()</span>\n        <span class=\"n\">refresh_count</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">while</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">perf_counter</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">t0</span> <span class=\"o\">&lt;</span> <span class=\"n\">max_timeout_s</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">state</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"p\">(</span>\n            <span class=\"n\">TaskState</span><span class=\"o\">.</span><span class=\"n\">succeeded</span><span class=\"p\">,</span>\n            <span class=\"n\">TaskState</span><span class=\"o\">.</span><span class=\"n\">failed</span><span class=\"p\">,</span>\n        <span class=\"p\">):</span>\n            <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"n\">retry_delay_s</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">refresh</span><span class=\"p\">()</span>\n            <span class=\"n\">refresh_count</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n            <span class=\"c1\"># Possibly make a callback so the caller knows we&#39;ve tried again</span>\n            <span class=\"k\">if</span> <span class=\"n\">on_each_refresh</span><span class=\"p\">:</span>\n                <span class=\"n\">on_each_refresh</span><span class=\"p\">(</span><span class=\"n\">refresh_count</span><span class=\"p\">,</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">perf_counter</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">t0</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># If the task did not complete within the timeout, throw an error</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">state</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"n\">TaskState</span><span class=\"o\">.</span><span class=\"n\">succeeded</span><span class=\"p\">,</span> <span class=\"n\">TaskState</span><span class=\"o\">.</span><span class=\"n\">failed</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"n\">SteamshipError</span><span class=\"p\">(</span>\n                <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Task </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">task_id</span><span class=\"si\">}</span><span class=\"s2\"> did not complete within requested timeout of </span><span class=\"si\">{</span><span class=\"n\">max_timeout_s</span><span class=\"si\">}</span><span class=\"s2\">s. The task is still running on the server. You can retrieve its status via Task.get() or try waiting again with wait().&quot;</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">output</span></div>\n\n<div class=\"viewcode-block\" id=\"Task.refresh\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.base/#steamship.Task.refresh\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">refresh</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">task_id</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">SteamshipError</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"o\">=</span><span class=\"s2\">&quot;Unable to refresh task because `task_id` is None&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"n\">req</span> <span class=\"o\">=</span> <span class=\"n\">TaskStatusRequest</span><span class=\"p\">(</span><span class=\"n\">taskId</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">task_id</span><span class=\"p\">)</span>\n        <span class=\"c1\"># TODO (enias): A status call can return both data and task</span>\n        <span class=\"c1\"># In this case both task and data will include the output (one is string serialized, the other is parsed)</span>\n        <span class=\"c1\"># Ideally task status only returns the status, not the full output object</span>\n        <span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s2\">&quot;task/status&quot;</span><span class=\"p\">,</span> <span class=\"n\">payload</span><span class=\"o\">=</span><span class=\"n\">req</span><span class=\"p\">,</span> <span class=\"n\">expect</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">expect</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">resp</span><span class=\"p\">)</span></div></div>\n\n\n<span class=\"kn\">from</span> <span class=\"nn\">.client</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>  <span class=\"c1\"># noqa: E402</span>\n\n<span class=\"n\">Task</span><span class=\"o\">.</span><span class=\"n\">update_forward_refs</span><span class=\"p\">()</span>\n<span class=\"n\">TaskComment</span><span class=\"o\">.</span><span class=\"n\">update_forward_refs</span><span class=\"p\">()</span>\n</pre></div>", "current_page_name": "_modules/steamship/base/tasks", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "furo_version": "2023.03.27", "furo_navigation_tree": "", "furo_hide_toc": true, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#272822", "foreground": "#f8f8f2"}}}