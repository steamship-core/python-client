{"parents": [{"link": "../../../", "title": "Module code"}], "title": "steamship.utils.repl", "body": "<h1>Source code for steamship.utils.repl</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">abc</span>\n<span class=\"kn\">import</span> <span class=\"nn\">contextlib</span>\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">import</span> <span class=\"nn\">uuid</span>\n<span class=\"kn\">from</span> <span class=\"nn\">abc</span> <span class=\"kn\">import</span> <span class=\"n\">ABC</span>\n<span class=\"kn\">from</span> <span class=\"nn\">json</span> <span class=\"kn\">import</span> <span class=\"n\">JSONDecodeError</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">,</span> <span class=\"n\">cast</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">requests</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">steamship</span> <span class=\"kn\">import</span> <span class=\"n\">Block</span><span class=\"p\">,</span> <span class=\"n\">Steamship</span><span class=\"p\">,</span> <span class=\"n\">Task</span><span class=\"p\">,</span> <span class=\"n\">TaskState</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.agents.logging</span> <span class=\"kn\">import</span> <span class=\"n\">AgentLogging</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.agents.schema</span> <span class=\"kn\">import</span> <span class=\"n\">AgentContext</span><span class=\"p\">,</span> <span class=\"n\">Tool</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.agents.service.agent_service</span> <span class=\"kn\">import</span> <span class=\"n\">AgentService</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.data.workspace</span> <span class=\"kn\">import</span> <span class=\"n\">Workspace</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.invocable.dev_logging_handler</span> <span class=\"kn\">import</span> <span class=\"n\">DevelopmentLoggingHandler</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">termcolor</span> <span class=\"kn\">import</span> <span class=\"n\">colored</span>  <span class=\"c1\"># noqa: F401</span>\n<span class=\"k\">except</span> <span class=\"ne\">ImportError</span><span class=\"p\">:</span>\n\n<div class=\"viewcode-block\" id=\"colored\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.utils/#steamship.utils.repl.colored\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">colored</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"SteamshipREPL\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.utils/#steamship.utils.repl.SteamshipREPL\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">SteamshipREPL</span><span class=\"p\">(</span><span class=\"n\">ABC</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Base class for building REPLs that facilitate running Steamship code in the IDE.&quot;&quot;&quot;</span>\n\n    <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Steamship</span>\n    <span class=\"n\">dev_logging_handler</span><span class=\"p\">:</span> <span class=\"n\">DevelopmentLoggingHandler</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">log_level</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">dev_logging_handler</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">dev_logging_handler</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dev_logging_handler</span> <span class=\"o\">=</span> <span class=\"n\">DevelopmentLoggingHandler</span><span class=\"o\">.</span><span class=\"n\">init_and_take_root</span><span class=\"p\">()</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dev_logging_handler</span> <span class=\"o\">=</span> <span class=\"n\">dev_logging_handler</span>\n\n<div class=\"viewcode-block\" id=\"SteamshipREPL.print_string\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.utils/#steamship.utils.repl.SteamshipREPL.print_string\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">print_string</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">output</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">metadata</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Print a string to console. All REPL output should ideally route through this method.&quot;&quot;&quot;</span>\n        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">output</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">extra</span><span class=\"o\">=</span><span class=\"p\">{</span>\n                <span class=\"n\">AgentLogging</span><span class=\"o\">.</span><span class=\"n\">IS_MESSAGE</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"n\">AgentLogging</span><span class=\"o\">.</span><span class=\"n\">MESSAGE_AUTHOR</span><span class=\"p\">:</span> <span class=\"n\">AgentLogging</span><span class=\"o\">.</span><span class=\"n\">AGENT</span><span class=\"p\">,</span>\n                <span class=\"n\">AgentLogging</span><span class=\"o\">.</span><span class=\"n\">MESSAGE_TYPE</span><span class=\"p\">:</span> <span class=\"n\">AgentLogging</span><span class=\"o\">.</span><span class=\"n\">MESSAGE</span><span class=\"p\">,</span>\n            <span class=\"p\">},</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"SteamshipREPL.print_object\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.utils/#steamship.utils.repl.SteamshipREPL.print_object\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">print_object</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Task</span><span class=\"p\">,</span> <span class=\"n\">Block</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">],</span> <span class=\"n\">metadata</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Print an object, returned by the agent or tool, to the console.</span>\n\n<span class=\"sd\">        Various epochs of the Agent SDK development have included Agents returning, to the repl: Blocks, strings, and</span>\n<span class=\"sd\">        Tasks. Since this is something that users can write (e.g. not controlled by the SDK) the REPL needs to handle</span>\n<span class=\"sd\">        all three cases in displaying output.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"c1\"># A string gets printed wholesale.</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">print_string</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">,</span> <span class=\"n\">metadata</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span>\n\n        <span class=\"c1\"># A task gets its ID printed.</span>\n        <span class=\"c1\"># TODO: It would be nice for this to be a link to the web UI.</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">,</span> <span class=\"n\">Task</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">print_string</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Task: </span><span class=\"si\">{</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">task_id</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"n\">metadata</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span>\n\n        <span class=\"c1\"># A dict is assumed to be a Block.</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">):</span>\n            <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"n\">Block</span><span class=\"o\">.</span><span class=\"n\">parse_obj</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># A block gets handled based on what it contains.</span>\n        <span class=\"n\">block</span> <span class=\"o\">=</span> <span class=\"n\">cast</span><span class=\"p\">(</span><span class=\"n\">Block</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">is_text</span><span class=\"p\">():</span>\n            <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">text</span>\n        <span class=\"k\">elif</span> <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">:</span>\n            <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">url</span>\n        <span class=\"k\">elif</span> <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">content_url</span><span class=\"p\">:</span>\n            <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">content_url</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">set_public_data</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n            <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">raw_data_url</span>\n        <span class=\"k\">if</span> <span class=\"n\">output</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">print_string</span><span class=\"p\">(</span><span class=\"n\">output</span><span class=\"p\">,</span> <span class=\"n\">metadata</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"SteamshipREPL.print_object_or_objects\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.utils/#steamship.utils.repl.SteamshipREPL.print_object_or_objects\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">print_object_or_objects</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">output</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">],</span> <span class=\"n\">metadata</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Print Agent or Tool output, whether a list or a single object.&quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">output</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">):</span>\n            <span class=\"n\">objects</span> <span class=\"o\">=</span> <span class=\"n\">cast</span><span class=\"p\">(</span><span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">output</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">obj</span> <span class=\"ow\">in</span> <span class=\"n\">objects</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">print_object</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">,</span> <span class=\"n\">metadata</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">print_object</span><span class=\"p\">(</span><span class=\"n\">output</span><span class=\"p\">,</span> <span class=\"n\">metadata</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"SteamshipREPL.temporary_workspace\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.utils/#steamship.utils.repl.SteamshipREPL.temporary_workspace\">[docs]</a>    <span class=\"nd\">@contextlib</span><span class=\"o\">.</span><span class=\"n\">contextmanager</span>\n    <span class=\"k\">def</span> <span class=\"nf\">temporary_workspace</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Steamship</span><span class=\"p\">:</span>\n        <span class=\"n\">workspace</span> <span class=\"o\">=</span> <span class=\"n\">Workspace</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">)</span>\n        <span class=\"n\">temp_client</span> <span class=\"o\">=</span> <span class=\"n\">Steamship</span><span class=\"p\">(</span><span class=\"n\">workspace</span><span class=\"o\">=</span><span class=\"n\">workspace</span><span class=\"o\">.</span><span class=\"n\">handle</span><span class=\"p\">)</span>\n        <span class=\"k\">yield</span> <span class=\"n\">temp_client</span>\n        <span class=\"n\">workspace</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span></div>\n\n<div class=\"viewcode-block\" id=\"SteamshipREPL.run\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.utils/#steamship.utils.repl.SteamshipREPL.run\">[docs]</a>    <span class=\"nd\">@abc</span><span class=\"o\">.</span><span class=\"n\">abstractmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">run</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">NotImplementedError</span><span class=\"p\">()</span></div></div>\n\n\n<div class=\"viewcode-block\" id=\"ToolREPL\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.utils/#steamship.utils.repl.ToolREPL\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">ToolREPL</span><span class=\"p\">(</span><span class=\"n\">SteamshipREPL</span><span class=\"p\">):</span>\n    <span class=\"n\">tool</span><span class=\"p\">:</span> <span class=\"n\">Tool</span>\n    <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Steamship</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">tool</span><span class=\"p\">:</span> <span class=\"n\">Tool</span><span class=\"p\">,</span> <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Steamship</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tool</span> <span class=\"o\">=</span> <span class=\"n\">tool</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">client</span> <span class=\"ow\">or</span> <span class=\"n\">Steamship</span><span class=\"p\">()</span>\n\n<div class=\"viewcode-block\" id=\"ToolREPL.run_with_client\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.utils/#steamship.utils.repl.ToolREPL.run_with_client\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">run_with_client</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Workspace</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">AgentContext</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">context</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"n\">AgentContext</span><span class=\"p\">()</span>\n        <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">client</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Starting REPL for Tool </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tool</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">...&quot;</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;If you make code changes, restart this REPL. Press CTRL+C to exit at any time.</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n            <span class=\"n\">input_text</span> <span class=\"o\">=</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"n\">colored</span><span class=\"p\">(</span><span class=\"s2\">&quot;Input: &quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;blue&quot;</span><span class=\"p\">))</span>  <span class=\"c1\"># noqa: F821</span>\n            <span class=\"n\">input_block</span> <span class=\"o\">=</span> <span class=\"n\">Block</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"n\">input_text</span><span class=\"p\">)</span>\n            <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tool</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">([</span><span class=\"n\">input_block</span><span class=\"p\">],</span> <span class=\"n\">context</span><span class=\"o\">=</span><span class=\"n\">context</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">print_object_or_objects</span><span class=\"p\">(</span><span class=\"n\">output</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"ToolREPL.run\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.utils/#steamship.utils.repl.ToolREPL.run\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">run</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">with</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">temporary_workspace</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">client</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">run_with_client</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">)</span></div></div>\n\n\n<div class=\"viewcode-block\" id=\"AgentREPL\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.utils/#steamship.utils.repl.AgentREPL\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">AgentREPL</span><span class=\"p\">(</span><span class=\"n\">SteamshipREPL</span><span class=\"p\">):</span>\n    <span class=\"n\">agent_class</span><span class=\"p\">:</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">AgentService</span><span class=\"p\">]</span>\n    <span class=\"n\">agent_instance</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">AgentService</span><span class=\"p\">]</span>\n    <span class=\"n\">context_id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Steamship</span>\n    <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">agent_class</span><span class=\"p\">:</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">AgentService</span><span class=\"p\">],</span>\n        <span class=\"n\">method</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">agent_package_config</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Steamship</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">context_id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">agent_class</span> <span class=\"o\">=</span> <span class=\"n\">agent_class</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">method</span> <span class=\"o\">=</span> <span class=\"n\">method</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">client</span> <span class=\"ow\">or</span> <span class=\"n\">Steamship</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">agent_package_config</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">agent_instance</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">context_id</span> <span class=\"o\">=</span> <span class=\"n\">context_id</span> <span class=\"ow\">or</span> <span class=\"n\">uuid</span><span class=\"o\">.</span><span class=\"n\">uuid4</span><span class=\"p\">()</span>\n\n<div class=\"viewcode-block\" id=\"AgentREPL.run_with_client\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.utils/#steamship.utils.repl.AgentREPL.run_with_client\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">run_with_client</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Steamship</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"kn\">from</span> <span class=\"nn\">termcolor</span> <span class=\"kn\">import</span> <span class=\"n\">colored</span>  <span class=\"c1\"># noqa: F401</span>\n        <span class=\"k\">except</span> <span class=\"ne\">ImportError</span><span class=\"p\">:</span>\n\n            <span class=\"k\">def</span> <span class=\"nf\">colored</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n                <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">)</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Starting REPL for Agent...&quot;</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;If you make code changes, restart this REPL. Press CTRL+C to exit at any time.</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">agent_instance</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">agent_class</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"o\">=</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Determine the responder, which may have been custom-supplied on the agent.</span>\n        <span class=\"n\">responder</span> <span class=\"o\">=</span> <span class=\"nb\">getattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">agent_instance</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">method</span> <span class=\"ow\">or</span> <span class=\"s2\">&quot;prompt&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n            <span class=\"n\">input_text</span> <span class=\"o\">=</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"n\">colored</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s2\">&quot;Input: &quot;</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s2\">&quot;blue&quot;</span><span class=\"p\">))</span>  <span class=\"c1\"># noqa: F821</span>\n            <span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">responder</span><span class=\"p\">(</span><span class=\"n\">prompt</span><span class=\"o\">=</span><span class=\"n\">input_text</span><span class=\"p\">,</span> <span class=\"n\">context_id</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">context_id</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">print_object_or_objects</span><span class=\"p\">(</span><span class=\"n\">output</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"AgentREPL.run\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.utils/#steamship.utils.repl.AgentREPL.run\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">run</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"k\">with</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">temporary_workspace</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">client</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">run_with_client</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span></div></div>\n\n\n<div class=\"viewcode-block\" id=\"HttpREPL\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.utils/#steamship.utils.repl.HttpREPL\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">HttpREPL</span><span class=\"p\">(</span><span class=\"n\">SteamshipREPL</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;REPL that uses an HTTP endpoint. Best for the `ship serve` command.&quot;&quot;&quot;</span>\n\n    <span class=\"n\">prompt_url</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">AgentService</span><span class=\"p\">]</span>\n    <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Steamship</span>\n    <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">context_id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">prompt_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n        <span class=\"n\">context_id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Steamship</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">prompt_url</span> <span class=\"o\">=</span> <span class=\"n\">prompt_url</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">client</span> <span class=\"ow\">or</span> <span class=\"n\">Steamship</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">context_id</span> <span class=\"o\">=</span> <span class=\"n\">context_id</span> <span class=\"ow\">or</span> <span class=\"n\">uuid</span><span class=\"o\">.</span><span class=\"n\">uuid4</span><span class=\"p\">()</span>\n\n<div class=\"viewcode-block\" id=\"HttpREPL.run_with_client\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.utils/#steamship.utils.repl.HttpREPL.run_with_client\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">run_with_client</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Steamship</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>  <span class=\"c1\"># noqa: C901</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"kn\">from</span> <span class=\"nn\">termcolor</span> <span class=\"kn\">import</span> <span class=\"n\">colored</span>  <span class=\"c1\"># noqa: F401</span>\n        <span class=\"k\">except</span> <span class=\"ne\">ImportError</span><span class=\"p\">:</span>\n\n            <span class=\"k\">def</span> <span class=\"nf\">colored</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n                <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"p\">)</span>\n\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Starting REPL for Agent...&quot;</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;If you make code changes, restart this REPL. Press CTRL+C to exit at any time.</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n            <span class=\"n\">input_text</span> <span class=\"o\">=</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"n\">colored</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s2\">&quot;Input: &quot;</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s2\">&quot;blue&quot;</span><span class=\"p\">))</span>  <span class=\"c1\"># noqa: F821</span>\n            <span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">prompt_url</span><span class=\"p\">,</span>\n                <span class=\"n\">json</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;prompt&quot;</span><span class=\"p\">:</span> <span class=\"n\">input_text</span><span class=\"p\">,</span> <span class=\"s2\">&quot;context_id&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">context_id</span><span class=\"p\">},</span>\n                <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"p\">{</span>\n                    <span class=\"s2\">&quot;Content-Type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;application/json&quot;</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;Authorization&quot;</span><span class=\"p\">:</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;Bearer </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">api_key</span><span class=\"o\">.</span><span class=\"n\">get_secret_value</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span>\n                <span class=\"p\">},</span>\n            <span class=\"p\">)</span>\n\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">ok</span><span class=\"p\">:</span>\n                <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span>\n                    <span class=\"sa\">f</span><span class=\"s2\">&quot;Request to AgentService failed with HTTP Status </span><span class=\"si\">{</span><span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">status_code</span><span class=\"si\">}</span><span class=\"s2\">.&quot;</span>\n                <span class=\"p\">)</span>\n                <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Message: </span><span class=\"si\">{</span><span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">()</span>\n            <span class=\"k\">except</span> <span class=\"n\">JSONDecodeError</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n                <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">exception</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">)</span>\n            <span class=\"k\">except</span> <span class=\"ne\">BaseException</span> <span class=\"k\">as</span> <span class=\"n\">ex</span><span class=\"p\">:</span>\n                <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">exception</span><span class=\"p\">(</span><span class=\"n\">ex</span><span class=\"p\">)</span>\n\n            <span class=\"k\">if</span> <span class=\"n\">result</span><span class=\"p\">:</span>\n                <span class=\"k\">if</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;status&quot;</span><span class=\"p\">,</span> <span class=\"p\">{})</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;state&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">TaskState</span><span class=\"o\">.</span><span class=\"n\">failed</span><span class=\"p\">:</span>\n                    <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;status&quot;</span><span class=\"p\">,</span> <span class=\"p\">{})</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;status_message&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n                    <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Response failed with remote error: </span><span class=\"si\">{</span><span class=\"n\">message</span><span class=\"w\"> </span><span class=\"ow\">or</span><span class=\"w\"> </span><span class=\"s1\">&#39;No message&#39;</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n                    <span class=\"k\">if</span> <span class=\"n\">suggestion</span> <span class=\"o\">:=</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;status&quot;</span><span class=\"p\">,</span> <span class=\"p\">{})</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;status_suggestion&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n                        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Suggestion: </span><span class=\"si\">{</span><span class=\"n\">suggestion</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n                <span class=\"k\">elif</span> <span class=\"n\">data</span> <span class=\"o\">:=</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;data&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">print_object_or_objects</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span>\n                        <span class=\"s2\">&quot;REPL interaction completed with empty data field in InvocableResponse.&quot;</span>\n                    <span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span><span class=\"s2\">&quot;REPL interaction completed with no result to print.&quot;</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"HttpREPL.run\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.utils/#steamship.utils.repl.HttpREPL.run\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">run</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"k\">with</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">temporary_workspace</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">client</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">run_with_client</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span></div></div>\n</pre></div>", "current_page_name": "_modules/steamship/utils/repl", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "furo_version": "2023.03.27", "furo_navigation_tree": "", "furo_hide_toc": true, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#272822", "foreground": "#f8f8f2"}}}