{"parents": [{"link": "../../../../", "title": "Module code"}], "title": "steamship.data.plugin.plugin_instance", "body": "<h1>Source code for steamship.data.plugin.plugin_instance</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">annotations</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">,</span> <span class=\"n\">Union</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pydantic</span> <span class=\"kn\">import</span> <span class=\"n\">BaseModel</span><span class=\"p\">,</span> <span class=\"n\">Field</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">steamship</span> <span class=\"kn\">import</span> <span class=\"n\">SteamshipError</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.base</span> <span class=\"kn\">import</span> <span class=\"n\">Task</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.base.client</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.base.model</span> <span class=\"kn\">import</span> <span class=\"n\">CamelModel</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.base.request</span> <span class=\"kn\">import</span> <span class=\"n\">DeleteRequest</span><span class=\"p\">,</span> <span class=\"n\">IdentifierRequest</span><span class=\"p\">,</span> <span class=\"n\">Request</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.data.block</span> <span class=\"kn\">import</span> <span class=\"n\">Block</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.data.file</span> <span class=\"kn\">import</span> <span class=\"n\">File</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.data.invocable_init_status</span> <span class=\"kn\">import</span> <span class=\"n\">InvocableInitStatus</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.data.operations.generator</span> <span class=\"kn\">import</span> <span class=\"n\">GenerateRequest</span><span class=\"p\">,</span> <span class=\"n\">GenerateResponse</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.data.operations.tagger</span> <span class=\"kn\">import</span> <span class=\"n\">TagRequest</span><span class=\"p\">,</span> <span class=\"n\">TagResponse</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.data.plugin</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">HostingCpu</span><span class=\"p\">,</span>\n    <span class=\"n\">HostingEnvironment</span><span class=\"p\">,</span>\n    <span class=\"n\">HostingMemory</span><span class=\"p\">,</span>\n    <span class=\"n\">HostingTimeout</span><span class=\"p\">,</span>\n    <span class=\"n\">HostingType</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.plugin.inputs.export_plugin_input</span> <span class=\"kn\">import</span> <span class=\"n\">ExportPluginInput</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.plugin.inputs.training_parameter_plugin_input</span> <span class=\"kn\">import</span> <span class=\"n\">TrainingParameterPluginInput</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.plugin.outputs.train_plugin_output</span> <span class=\"kn\">import</span> <span class=\"n\">TrainPluginOutput</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.plugin.outputs.training_parameter_plugin_output</span> <span class=\"kn\">import</span> <span class=\"n\">TrainingParameterPluginOutput</span>\n\n\n<div class=\"viewcode-block\" id=\"CreatePluginInstanceRequest\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.data.plugin/#steamship.CreatePluginInstanceRequest\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">CreatePluginInstanceRequest</span><span class=\"p\">(</span><span class=\"n\">Request</span><span class=\"p\">):</span>\n    <span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">plugin_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">plugin_handle</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">plugin_version_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">plugin_version_handle</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">handle</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">fetch_if_exists</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></div>\n\n\n<span class=\"n\">SIGNED_URL_EXPORTER_INSTANCE_HANDLE</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;signed-url-exporter-1.0&quot;</span>\n\n\n<div class=\"viewcode-block\" id=\"PluginInstance\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.data.plugin/#steamship.PluginInstance\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">PluginInstance</span><span class=\"p\">(</span><span class=\"n\">CamelModel</span><span class=\"p\">):</span>\n    <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Client</span> <span class=\"o\">=</span> <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">exclude</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">handle</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">plugin_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">plugin_version_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">plugin_handle</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">plugin_version_handle</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">workspace_id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">hosting_type</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">HostingType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">hosting_cpu</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">HostingCpu</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">hosting_memory</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">HostingMemory</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">hosting_timeout</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">HostingTimeout</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">hosting_environment</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">HostingEnvironment</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">init_status</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">InvocableInitStatus</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n<div class=\"viewcode-block\" id=\"PluginInstance.parse_obj\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.data.plugin/#steamship.PluginInstance.parse_obj\">[docs]</a>    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">parse_obj</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">:</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">BaseModel</span><span class=\"p\">],</span> <span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"n\">Any</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">BaseModel</span><span class=\"p\">:</span>\n        <span class=\"c1\"># TODO (enias): This needs to be solved at the engine side</span>\n        <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"n\">obj</span><span class=\"p\">[</span><span class=\"s2\">&quot;pluginInstance&quot;</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"s2\">&quot;pluginInstance&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">obj</span> <span class=\"k\">else</span> <span class=\"n\">obj</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">parse_obj</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"PluginInstance.create\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.data.plugin/#steamship.PluginInstance.create\">[docs]</a>    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create</span><span class=\"p\">(</span>\n        <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Client</span><span class=\"p\">,</span>\n        <span class=\"n\">plugin_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">plugin_handle</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">plugin_version_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">plugin_version_handle</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">handle</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">fetch_if_exists</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">PluginInstance</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Create a plugin instance</span>\n\n<span class=\"sd\">        When handle is empty the engine will automatically assign one</span>\n<span class=\"sd\">        fetch_if_exists controls whether we want to re-use an existing plugin instance or not.&quot;&quot;&quot;</span>\n        <span class=\"n\">req</span> <span class=\"o\">=</span> <span class=\"n\">CreatePluginInstanceRequest</span><span class=\"p\">(</span>\n            <span class=\"n\">handle</span><span class=\"o\">=</span><span class=\"n\">handle</span><span class=\"p\">,</span>\n            <span class=\"n\">plugin_id</span><span class=\"o\">=</span><span class=\"n\">plugin_id</span><span class=\"p\">,</span>\n            <span class=\"n\">plugin_handle</span><span class=\"o\">=</span><span class=\"n\">plugin_handle</span><span class=\"p\">,</span>\n            <span class=\"n\">plugin_version_id</span><span class=\"o\">=</span><span class=\"n\">plugin_version_id</span><span class=\"p\">,</span>\n            <span class=\"n\">plugin_version_handle</span><span class=\"o\">=</span><span class=\"n\">plugin_version_handle</span><span class=\"p\">,</span>\n            <span class=\"n\">fetch_if_exists</span><span class=\"o\">=</span><span class=\"n\">fetch_if_exists</span><span class=\"p\">,</span>\n            <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">config</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s2\">&quot;plugin/instance/create&quot;</span><span class=\"p\">,</span> <span class=\"n\">payload</span><span class=\"o\">=</span><span class=\"n\">req</span><span class=\"p\">,</span> <span class=\"n\">expect</span><span class=\"o\">=</span><span class=\"n\">PluginInstance</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"PluginInstance.get\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.data.plugin/#steamship.PluginInstance.get\">[docs]</a>    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Client</span><span class=\"p\">,</span> <span class=\"n\">handle</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">PluginInstance</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;plugin/instance/get&quot;</span><span class=\"p\">,</span> <span class=\"n\">IdentifierRequest</span><span class=\"p\">(</span><span class=\"n\">handle</span><span class=\"o\">=</span><span class=\"n\">handle</span><span class=\"p\">),</span> <span class=\"n\">expect</span><span class=\"o\">=</span><span class=\"n\">PluginInstance</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"PluginInstance.tag\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.data.plugin/#steamship.PluginInstance.tag\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">tag</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">doc</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">File</span><span class=\"p\">],</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Task</span><span class=\"p\">[</span>\n        <span class=\"n\">TagResponse</span>\n    <span class=\"p\">]:</span>  <span class=\"c1\"># TODO (enias): Should we remove this helper function in favor of always working with files?</span>\n        <span class=\"n\">req</span> <span class=\"o\">=</span> <span class=\"n\">TagRequest</span><span class=\"p\">(</span>\n            <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">&quot;inline&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">file</span><span class=\"o\">=</span><span class=\"n\">File</span><span class=\"p\">(</span><span class=\"n\">blocks</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">Block</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"n\">doc</span><span class=\"p\">)])</span> <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">doc</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"k\">else</span> <span class=\"n\">doc</span><span class=\"p\">,</span>\n            <span class=\"n\">plugin_instance</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">handle</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;plugin/instance/tag&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">req</span><span class=\"p\">,</span>\n            <span class=\"n\">expect</span><span class=\"o\">=</span><span class=\"n\">TagResponse</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"PluginInstance.generate\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.data.plugin/#steamship.PluginInstance.generate\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">generate</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">input_file_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">input_file_start_block_index</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">input_file_end_block_index</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">input_file_block_index_list</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"c1\"># bytes: Optional[bytes] = None, [Not yet implemented]</span>\n        <span class=\"n\">block_query</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"c1\"># url: Optional[str] = None, [Not yet implemented]</span>\n        <span class=\"n\">append_output_to_file</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">output_file_id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">make_output_public</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">options</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Task</span><span class=\"p\">[</span><span class=\"n\">GenerateResponse</span><span class=\"p\">]:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;See GenerateRequest for description of parameter options&quot;&quot;&quot;</span>\n        <span class=\"n\">req</span> <span class=\"o\">=</span> <span class=\"n\">GenerateRequest</span><span class=\"p\">(</span>\n            <span class=\"n\">plugin_instance</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">handle</span><span class=\"p\">,</span>\n            <span class=\"n\">input_file_id</span><span class=\"o\">=</span><span class=\"n\">input_file_id</span><span class=\"p\">,</span>\n            <span class=\"n\">input_file_start_block_index</span><span class=\"o\">=</span><span class=\"n\">input_file_start_block_index</span><span class=\"p\">,</span>\n            <span class=\"n\">input_file_end_block_index</span><span class=\"o\">=</span><span class=\"n\">input_file_end_block_index</span><span class=\"p\">,</span>\n            <span class=\"n\">input_file_block_index_list</span><span class=\"o\">=</span><span class=\"n\">input_file_block_index_list</span><span class=\"p\">,</span>\n            <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"n\">text</span><span class=\"p\">,</span>\n            <span class=\"c1\"># bytes=bytes,</span>\n            <span class=\"n\">block_query</span><span class=\"o\">=</span><span class=\"n\">block_query</span><span class=\"p\">,</span>\n            <span class=\"c1\"># url=url,</span>\n            <span class=\"n\">append_output_to_file</span><span class=\"o\">=</span><span class=\"n\">append_output_to_file</span><span class=\"p\">,</span>\n            <span class=\"n\">output_file_id</span><span class=\"o\">=</span><span class=\"n\">output_file_id</span><span class=\"p\">,</span>\n            <span class=\"n\">make_output_public</span><span class=\"o\">=</span><span class=\"n\">make_output_public</span><span class=\"p\">,</span>\n            <span class=\"n\">options</span><span class=\"o\">=</span><span class=\"n\">options</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s2\">&quot;plugin/instance/generate&quot;</span><span class=\"p\">,</span> <span class=\"n\">req</span><span class=\"p\">,</span> <span class=\"n\">expect</span><span class=\"o\">=</span><span class=\"n\">GenerateResponse</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"PluginInstance.delete\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.data.plugin/#steamship.PluginInstance.delete\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">delete</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">PluginInstance</span><span class=\"p\">:</span>\n        <span class=\"n\">req</span> <span class=\"o\">=</span> <span class=\"n\">DeleteRequest</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s2\">&quot;plugin/instance/delete&quot;</span><span class=\"p\">,</span> <span class=\"n\">payload</span><span class=\"o\">=</span><span class=\"n\">req</span><span class=\"p\">,</span> <span class=\"n\">expect</span><span class=\"o\">=</span><span class=\"n\">PluginInstance</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"PluginInstance.train\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.data.plugin/#steamship.PluginInstance.train\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">train</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">training_request</span><span class=\"p\">:</span> <span class=\"n\">TrainingParameterPluginInput</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">training_epochs</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">export_query</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">testing_holdout_percent</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">test_split_seed</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">training_params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">inference_params</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Task</span><span class=\"p\">[</span><span class=\"n\">TrainPluginOutput</span><span class=\"p\">]:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Train a plugin instance.  Please provide either training_request OR the other parameters; passing</span>\n<span class=\"sd\">        training_request ignores all other parameters, but is kept for backwards compatibility.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">input_params</span> <span class=\"o\">=</span> <span class=\"n\">training_request</span> <span class=\"ow\">or</span> <span class=\"n\">TrainingParameterPluginInput</span><span class=\"p\">(</span>\n            <span class=\"n\">plugin_instance</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">handle</span><span class=\"p\">,</span>\n            <span class=\"n\">training_epochs</span><span class=\"o\">=</span><span class=\"n\">training_epochs</span><span class=\"p\">,</span>\n            <span class=\"n\">export_plugin_input</span><span class=\"o\">=</span><span class=\"n\">ExportPluginInput</span><span class=\"p\">(</span>\n                <span class=\"n\">plugin_instance</span><span class=\"o\">=</span><span class=\"n\">SIGNED_URL_EXPORTER_INSTANCE_HANDLE</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">&quot;file&quot;</span><span class=\"p\">,</span> <span class=\"n\">query</span><span class=\"o\">=</span><span class=\"n\">export_query</span>\n            <span class=\"p\">),</span>\n            <span class=\"n\">testing_holdout_percent</span><span class=\"o\">=</span><span class=\"n\">testing_holdout_percent</span><span class=\"p\">,</span>\n            <span class=\"n\">test_split_seed</span><span class=\"o\">=</span><span class=\"n\">test_split_seed</span><span class=\"p\">,</span>\n            <span class=\"n\">training_params</span><span class=\"o\">=</span><span class=\"n\">training_params</span><span class=\"p\">,</span>\n            <span class=\"n\">inference_params</span><span class=\"o\">=</span><span class=\"n\">inference_params</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;plugin/instance/train&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">payload</span><span class=\"o\">=</span><span class=\"n\">input_params</span><span class=\"p\">,</span>\n            <span class=\"n\">expect</span><span class=\"o\">=</span><span class=\"n\">TrainPluginOutput</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"PluginInstance.get_training_parameters\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.data.plugin/#steamship.PluginInstance.get_training_parameters\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">get_training_parameters</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">training_request</span><span class=\"p\">:</span> <span class=\"n\">TrainingParameterPluginInput</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">TrainingParameterPluginOutput</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;plugin/instance/getTrainingParameters&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">payload</span><span class=\"o\">=</span><span class=\"n\">training_request</span><span class=\"p\">,</span>\n            <span class=\"n\">expect</span><span class=\"o\">=</span><span class=\"n\">TrainingParameterPluginOutput</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"PluginInstance.refresh_init_status\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.data.plugin/#steamship.PluginInstance.refresh_init_status\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">refresh_init_status</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">new_self</span> <span class=\"o\">=</span> <span class=\"n\">PluginInstance</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">handle</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">handle</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">init_status</span> <span class=\"o\">=</span> <span class=\"n\">new_self</span><span class=\"o\">.</span><span class=\"n\">init_status</span></div>\n\n<div class=\"viewcode-block\" id=\"PluginInstance.wait_for_init\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.data.plugin/#steamship.PluginInstance.wait_for_init\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">wait_for_init</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">max_timeout_s</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">180</span><span class=\"p\">,</span>\n        <span class=\"n\">retry_delay_s</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Polls and blocks until the init has succeeded or failed (or timeout reached).</span>\n\n<span class=\"sd\">        Parameters</span>\n<span class=\"sd\">        ----------</span>\n<span class=\"sd\">        max_timeout_s : int</span>\n<span class=\"sd\">            Max timeout in seconds. Default: 180s. After this timeout, an exception will be thrown.</span>\n<span class=\"sd\">        retry_delay_s : float</span>\n<span class=\"sd\">            Delay between status checks. Default: 1s.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">t0</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">perf_counter</span><span class=\"p\">()</span>\n        <span class=\"n\">refresh_count</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">while</span> <span class=\"p\">(</span>\n            <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">perf_counter</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">t0</span> <span class=\"o\">&lt;</span> <span class=\"n\">max_timeout_s</span>\n            <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">init_status</span> <span class=\"o\">==</span> <span class=\"n\">InvocableInitStatus</span><span class=\"o\">.</span><span class=\"n\">INITIALIZING</span>\n        <span class=\"p\">):</span>\n            <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"n\">retry_delay_s</span><span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">refresh_init_status</span><span class=\"p\">()</span>\n            <span class=\"n\">refresh_count</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n\n        <span class=\"c1\"># If the task did not complete within the timeout, throw an error</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">init_status</span> <span class=\"o\">==</span> <span class=\"n\">InvocableInitStatus</span><span class=\"o\">.</span><span class=\"n\">INITIALIZING</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">SteamshipError</span><span class=\"p\">(</span>\n                <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Plugin Instance </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"si\">}</span><span class=\"s2\"> did not complete within requested timeout of </span><span class=\"si\">{</span><span class=\"n\">max_timeout_s</span><span class=\"si\">}</span><span class=\"s2\">s. The init is still running on the server. You can retrieve its status via PluginInstance.get() or try waiting again with wait_for_init().&quot;</span>\n            <span class=\"p\">)</span></div></div>\n</pre></div>", "current_page_name": "_modules/steamship/data/plugin/plugin_instance", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "furo_version": "2023.03.27", "furo_navigation_tree": "", "furo_hide_toc": true, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#272822", "foreground": "#f8f8f2"}}}