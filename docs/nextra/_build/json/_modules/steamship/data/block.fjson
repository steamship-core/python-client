{"parents": [{"link": "../../../", "title": "Module code"}], "title": "steamship.data.block", "body": "<h1>Source code for steamship.data.block</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">annotations</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">enum</span> <span class=\"kn\">import</span> <span class=\"n\">Enum</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">,</span> <span class=\"n\">Union</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">requests</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pydantic</span> <span class=\"kn\">import</span> <span class=\"n\">BaseModel</span><span class=\"p\">,</span> <span class=\"n\">Field</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">steamship</span> <span class=\"kn\">import</span> <span class=\"n\">MimeTypes</span><span class=\"p\">,</span> <span class=\"n\">SteamshipError</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.base.client</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.base.model</span> <span class=\"kn\">import</span> <span class=\"n\">CamelModel</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.base.request</span> <span class=\"kn\">import</span> <span class=\"n\">DeleteRequest</span><span class=\"p\">,</span> <span class=\"n\">IdentifierRequest</span><span class=\"p\">,</span> <span class=\"n\">Request</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.base.response</span> <span class=\"kn\">import</span> <span class=\"n\">Response</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.data.tags.tag</span> <span class=\"kn\">import</span> <span class=\"n\">Tag</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.data.tags.tag_constants</span> <span class=\"kn\">import</span> <span class=\"n\">ChatTag</span><span class=\"p\">,</span> <span class=\"n\">DocTag</span><span class=\"p\">,</span> <span class=\"n\">RoleTag</span><span class=\"p\">,</span> <span class=\"n\">TagValueKey</span>\n\n\n<div class=\"viewcode-block\" id=\"BlockQueryRequest\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.BlockQueryRequest\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">BlockQueryRequest</span><span class=\"p\">(</span><span class=\"n\">Request</span><span class=\"p\">):</span>\n    <span class=\"n\">tag_filter_query</span><span class=\"p\">:</span> <span class=\"nb\">str</span></div>\n\n\n<div class=\"viewcode-block\" id=\"BlockUploadType\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.BlockUploadType\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">BlockUploadType</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Enum</span><span class=\"p\">):</span>\n    <span class=\"n\">FILE</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;file&quot;</span>  <span class=\"c1\"># A file uploaded as bytes or a string</span>\n    <span class=\"n\">BLOCKS</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;blocks&quot;</span>  <span class=\"c1\"># Blocks are sent to create a file</span>\n    <span class=\"n\">URL</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;url&quot;</span>  <span class=\"c1\"># content will be fetched from a URL</span>\n    <span class=\"n\">NONE</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;none&quot;</span>  <span class=\"c1\"># No upload; plain text only.</span></div>\n\n\n<div class=\"viewcode-block\" id=\"get_tag_value_key\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.get_tag_value_key\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">get_tag_value_key</span><span class=\"p\">(</span>\n    <span class=\"n\">tags</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Tag</span><span class=\"p\">]],</span> <span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">kind</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n<span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">any</span><span class=\"p\">]:</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Iterates through a list of tags and returns the first that contains the provided Kind/Name/ValueKey.&quot;&quot;&quot;</span>\n    <span class=\"k\">for</span> <span class=\"n\">tag</span> <span class=\"ow\">in</span> <span class=\"n\">tags</span> <span class=\"ow\">or</span> <span class=\"p\">[]:</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">kind</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"ow\">or</span> <span class=\"n\">tag</span><span class=\"o\">.</span><span class=\"n\">kind</span> <span class=\"o\">==</span> <span class=\"n\">kind</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"p\">(</span><span class=\"n\">name</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"ow\">or</span> <span class=\"n\">tag</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"n\">name</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"p\">(</span><span class=\"n\">tag</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"ow\">or</span> <span class=\"p\">{})</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"kc\">None</span></div>\n\n\n<div class=\"viewcode-block\" id=\"Block\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.Block\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Block</span><span class=\"p\">(</span><span class=\"n\">CamelModel</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;A Block is a chunk of content within a File. It can be plain text content, image content,</span>\n<span class=\"sd\">    video content, etc. If the content is not text, the text value may be the empty string</span>\n<span class=\"sd\">    for backwards compatibility.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Client</span> <span class=\"o\">=</span> <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">exclude</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">file_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">tags</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Tag</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">index_in_file</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"n\">alias</span><span class=\"o\">=</span><span class=\"s2\">&quot;index&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">mime_type</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">MimeTypes</span><span class=\"p\">]</span>\n    <span class=\"n\">public_data</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n    <span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span>\n        <span class=\"nb\">str</span>\n    <span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>  <span class=\"c1\"># Only for creation of blocks; used to fetch content from a public URL.</span>\n    <span class=\"n\">content_url</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span>\n        <span class=\"nb\">str</span>\n    <span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>  <span class=\"c1\"># For overriding the URL of the raw data for ephemeral blocks. Setting this will have no effect</span>\n    <span class=\"n\">upload_type</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span>\n        <span class=\"n\">BlockUploadType</span>\n    <span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>  <span class=\"c1\"># for returning Blocks as the result of a generate request</span>\n    <span class=\"n\">upload_bytes</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span>\n        <span class=\"nb\">bytes</span>\n    <span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>  <span class=\"c1\"># ONLY for returning Blocks as the result of a generate request. Will not be set when receiving blocks from the server. See raw()</span>\n\n<div class=\"viewcode-block\" id=\"Block.ListRequest\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.Block.ListRequest\">[docs]</a>    <span class=\"k\">class</span> <span class=\"nc\">ListRequest</span><span class=\"p\">(</span><span class=\"n\">Request</span><span class=\"p\">):</span>\n        <span class=\"n\">file_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></div>\n\n<div class=\"viewcode-block\" id=\"Block.ListResponse\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.Block.ListResponse\">[docs]</a>    <span class=\"k\">class</span> <span class=\"nc\">ListResponse</span><span class=\"p\">(</span><span class=\"n\">Response</span><span class=\"p\">):</span>\n        <span class=\"n\">blocks</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Block</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></div>\n\n<div class=\"viewcode-block\" id=\"Block.parse_obj\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.Block.parse_obj\">[docs]</a>    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">parse_obj</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">:</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">BaseModel</span><span class=\"p\">],</span> <span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"n\">Any</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">BaseModel</span><span class=\"p\">:</span>\n        <span class=\"c1\"># TODO (enias): This needs to be solved at the engine side</span>\n        <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"n\">obj</span><span class=\"p\">[</span><span class=\"s2\">&quot;block&quot;</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"s2\">&quot;block&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">obj</span> <span class=\"k\">else</span> <span class=\"n\">obj</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">parse_obj</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Block.get\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.Block.get\">[docs]</a>    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">(</span>\n        <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Client</span><span class=\"p\">,</span>\n        <span class=\"n\">_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Block</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;block/get&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">IdentifierRequest</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"n\">_id</span><span class=\"p\">),</span>\n            <span class=\"n\">expect</span><span class=\"o\">=</span><span class=\"n\">Block</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Block.create\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.Block.create\">[docs]</a>    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create</span><span class=\"p\">(</span>\n        <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Client</span><span class=\"p\">,</span>\n        <span class=\"n\">file_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n        <span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">tags</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Tag</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bytes</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">mime_type</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">MimeTypes</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">public_data</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Block</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">        Create a new Block within a File specified by file_id.</span>\n\n<span class=\"sd\">        You can create a Block in several ways:</span>\n<span class=\"sd\">        - Providing raw text as the text parameter;</span>\n<span class=\"sd\">        - Providing the content of the block as string or bytes;</span>\n<span class=\"sd\">        - Providing a publicly accessible URL where the content is stored.</span>\n\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">content</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span> <span class=\"ow\">and</span> <span class=\"n\">url</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">SteamshipError</span><span class=\"p\">(</span><span class=\"s2\">&quot;May provide content or URL, but not both when creating a Block&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">content</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">upload_type</span> <span class=\"o\">=</span> <span class=\"n\">BlockUploadType</span><span class=\"o\">.</span><span class=\"n\">FILE</span>\n        <span class=\"k\">elif</span> <span class=\"n\">url</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">upload_type</span> <span class=\"o\">=</span> <span class=\"n\">BlockUploadType</span><span class=\"o\">.</span><span class=\"n\">URL</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">upload_type</span> <span class=\"o\">=</span> <span class=\"n\">BlockUploadType</span><span class=\"o\">.</span><span class=\"n\">NONE</span>\n\n        <span class=\"n\">req</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;fileId&quot;</span><span class=\"p\">:</span> <span class=\"n\">file_id</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;text&quot;</span><span class=\"p\">:</span> <span class=\"n\">text</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;tags&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">t</span><span class=\"o\">.</span><span class=\"n\">dict</span><span class=\"p\">(</span><span class=\"n\">by_alias</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">t</span> <span class=\"ow\">in</span> <span class=\"n\">tags</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"n\">tags</span> <span class=\"k\">else</span> <span class=\"p\">[],</span>\n            <span class=\"s2\">&quot;url&quot;</span><span class=\"p\">:</span> <span class=\"n\">url</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;mimeType&quot;</span><span class=\"p\">:</span> <span class=\"n\">mime_type</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;uploadType&quot;</span><span class=\"p\">:</span> <span class=\"n\">upload_type</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;publicData&quot;</span><span class=\"p\">:</span> <span class=\"n\">public_data</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"n\">file_data</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n            <span class=\"p\">(</span><span class=\"s2\">&quot;file-part&quot;</span><span class=\"p\">,</span> <span class=\"n\">content</span><span class=\"p\">,</span> <span class=\"s2\">&quot;multipart/form-data&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">upload_type</span> <span class=\"o\">==</span> <span class=\"n\">BlockUploadType</span><span class=\"o\">.</span><span class=\"n\">FILE</span>\n            <span class=\"k\">else</span> <span class=\"kc\">None</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;block/create&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">req</span><span class=\"p\">,</span>\n            <span class=\"n\">expect</span><span class=\"o\">=</span><span class=\"n\">Block</span><span class=\"p\">,</span>\n            <span class=\"n\">file</span><span class=\"o\">=</span><span class=\"n\">file_data</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Block.delete\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.Block.delete\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">delete</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Block</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;block/delete&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">DeleteRequest</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">),</span>\n            <span class=\"n\">expect</span><span class=\"o\">=</span><span class=\"n\">Tag</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Block.query\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.Block.query\">[docs]</a>    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">query</span><span class=\"p\">(</span>\n        <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Client</span><span class=\"p\">,</span>\n        <span class=\"n\">tag_filter_query</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">BlockQueryResponse</span><span class=\"p\">:</span>\n        <span class=\"n\">req</span> <span class=\"o\">=</span> <span class=\"n\">BlockQueryRequest</span><span class=\"p\">(</span><span class=\"n\">tag_filter_query</span><span class=\"o\">=</span><span class=\"n\">tag_filter_query</span><span class=\"p\">)</span>\n        <span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;block/query&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">payload</span><span class=\"o\">=</span><span class=\"n\">req</span><span class=\"p\">,</span>\n            <span class=\"n\">expect</span><span class=\"o\">=</span><span class=\"n\">BlockQueryResponse</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">res</span></div>\n\n<div class=\"viewcode-block\" id=\"Block.index\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.Block.index\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">index</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">embedding_plugin_instance</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Index this block.&quot;&quot;&quot;</span>\n        <span class=\"n\">tags</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"n\">Tag</span><span class=\"p\">(</span>\n                <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">,</span>\n                <span class=\"n\">file_id</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">file_id</span><span class=\"p\">,</span>\n                <span class=\"n\">block_id</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span>\n                <span class=\"n\">kind</span><span class=\"o\">=</span><span class=\"s2\">&quot;block&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">start_idx</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n                <span class=\"n\">end_idx</span><span class=\"o\">=</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">),</span>\n            <span class=\"p\">)</span>\n        <span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"n\">embedding_plugin_instance</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">tags</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Block.raw\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.Block.raw\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">raw</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">content_url</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">content_url</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">content</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;block/raw&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">payload</span><span class=\"o\">=</span><span class=\"p\">{</span>\n                    <span class=\"s2\">&quot;id&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span>\n                <span class=\"p\">},</span>\n                <span class=\"n\">raw_response</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Block.set_public_data\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.Block.set_public_data\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">set_public_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">public_data</span><span class=\"p\">:</span> <span class=\"nb\">bool</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Set the public_data flag on this Block. If this object already exists server-side, update the flag.&quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">public_data</span> <span class=\"o\">=</span> <span class=\"n\">public_data</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">req</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;id&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;publicData&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">public_data</span><span class=\"p\">,</span>\n            <span class=\"p\">}</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s2\">&quot;block/update&quot;</span><span class=\"p\">,</span> <span class=\"n\">payload</span><span class=\"o\">=</span><span class=\"n\">req</span><span class=\"p\">,</span> <span class=\"n\">expect</span><span class=\"o\">=</span><span class=\"n\">Block</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Block.is_text\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.Block.is_text\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">is_text</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bool</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Return whether this is a text Block.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mime_type</span> <span class=\"o\">==</span> <span class=\"n\">MimeTypes</span><span class=\"o\">.</span><span class=\"n\">TXT</span> <span class=\"ow\">or</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mime_type</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Block.is_image\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.Block.is_image\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">is_image</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Return whether this is an image Block.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mime_type</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"n\">MimeTypes</span><span class=\"o\">.</span><span class=\"n\">PNG</span><span class=\"p\">,</span> <span class=\"n\">MimeTypes</span><span class=\"o\">.</span><span class=\"n\">JPG</span><span class=\"p\">,</span> <span class=\"n\">MimeTypes</span><span class=\"o\">.</span><span class=\"n\">GIF</span><span class=\"p\">,</span> <span class=\"n\">MimeTypes</span><span class=\"o\">.</span><span class=\"n\">TIFF</span><span class=\"p\">]</span></div>\n\n<div class=\"viewcode-block\" id=\"Block.is_audio\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.Block.is_audio\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">is_audio</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Return whether this is an audio Block.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mime_type</span> <span class=\"ow\">in</span> <span class=\"p\">[</span>\n            <span class=\"n\">MimeTypes</span><span class=\"o\">.</span><span class=\"n\">MP3</span><span class=\"p\">,</span>\n            <span class=\"n\">MimeTypes</span><span class=\"o\">.</span><span class=\"n\">MP4_AUDIO</span><span class=\"p\">,</span>\n            <span class=\"n\">MimeTypes</span><span class=\"o\">.</span><span class=\"n\">WEBM_AUDIO</span><span class=\"p\">,</span>\n            <span class=\"n\">MimeTypes</span><span class=\"o\">.</span><span class=\"n\">WAV</span><span class=\"p\">,</span>\n            <span class=\"n\">MimeTypes</span><span class=\"o\">.</span><span class=\"n\">OGG_AUDIO</span><span class=\"p\">,</span>\n        <span class=\"p\">]</span></div>\n\n<div class=\"viewcode-block\" id=\"Block.is_video\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.Block.is_video\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">is_video</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Return whether this is a video Block.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mime_type</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"n\">MimeTypes</span><span class=\"o\">.</span><span class=\"n\">MP4_VIDEO</span><span class=\"p\">,</span> <span class=\"n\">MimeTypes</span><span class=\"o\">.</span><span class=\"n\">WEBM_VIDEO</span><span class=\"p\">,</span> <span class=\"n\">MimeTypes</span><span class=\"o\">.</span><span class=\"n\">OGG_VIDEO</span><span class=\"p\">]</span></div>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">raw_data_url</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Return a URL at which the data content of this Block can be accessed.  If public_data is True,</span>\n<span class=\"sd\">        this content can be accessed without an API key.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"si\">}</span><span class=\"s2\">block/</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"si\">}</span><span class=\"s2\">/raw&quot;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">chat_role</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">RoleTag</span><span class=\"p\">]:</span>\n        <span class=\"k\">return</span> <span class=\"n\">get_tag_value_key</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tags</span><span class=\"p\">,</span> <span class=\"n\">TagValueKey</span><span class=\"o\">.</span><span class=\"n\">STRING_VALUE</span><span class=\"p\">,</span> <span class=\"n\">kind</span><span class=\"o\">=</span><span class=\"n\">DocTag</span><span class=\"o\">.</span><span class=\"n\">CHAT</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">ChatTag</span><span class=\"o\">.</span><span class=\"n\">ROLE</span>\n        <span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"Block.set_chat_role\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.Block.set_chat_role\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">set_chat_role</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">role</span><span class=\"p\">:</span> <span class=\"n\">RoleTag</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_one_time_set_tag</span><span class=\"p\">(</span>\n            <span class=\"n\">tag_kind</span><span class=\"o\">=</span><span class=\"n\">DocTag</span><span class=\"o\">.</span><span class=\"n\">CHAT</span><span class=\"p\">,</span> <span class=\"n\">tag_name</span><span class=\"o\">=</span><span class=\"n\">ChatTag</span><span class=\"o\">.</span><span class=\"n\">ROLE</span><span class=\"p\">,</span> <span class=\"n\">string_value</span><span class=\"o\">=</span><span class=\"n\">role</span><span class=\"o\">.</span><span class=\"n\">value</span>\n        <span class=\"p\">)</span></div>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">message_id</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">get_tag_value_key</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tags</span><span class=\"p\">,</span> <span class=\"n\">TagValueKey</span><span class=\"o\">.</span><span class=\"n\">STRING_VALUE</span><span class=\"p\">,</span> <span class=\"n\">kind</span><span class=\"o\">=</span><span class=\"n\">DocTag</span><span class=\"o\">.</span><span class=\"n\">CHAT</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">ChatTag</span><span class=\"o\">.</span><span class=\"n\">MESSAGE_ID</span>\n        <span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"Block.set_message_id\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.Block.set_message_id\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">set_message_id</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">message_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_one_time_set_tag</span><span class=\"p\">(</span>\n            <span class=\"n\">tag_kind</span><span class=\"o\">=</span><span class=\"n\">DocTag</span><span class=\"o\">.</span><span class=\"n\">CHAT</span><span class=\"p\">,</span> <span class=\"n\">tag_name</span><span class=\"o\">=</span><span class=\"n\">ChatTag</span><span class=\"o\">.</span><span class=\"n\">MESSAGE_ID</span><span class=\"p\">,</span> <span class=\"n\">string_value</span><span class=\"o\">=</span><span class=\"n\">message_id</span>\n        <span class=\"p\">)</span></div>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">chat_id</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">get_tag_value_key</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tags</span><span class=\"p\">,</span> <span class=\"n\">TagValueKey</span><span class=\"o\">.</span><span class=\"n\">STRING_VALUE</span><span class=\"p\">,</span> <span class=\"n\">kind</span><span class=\"o\">=</span><span class=\"n\">DocTag</span><span class=\"o\">.</span><span class=\"n\">CHAT</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">ChatTag</span><span class=\"o\">.</span><span class=\"n\">CHAT_ID</span>\n        <span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"Block.set_chat_id\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.Block.set_chat_id\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">set_chat_id</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">chat_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_one_time_set_tag</span><span class=\"p\">(</span>\n            <span class=\"n\">tag_kind</span><span class=\"o\">=</span><span class=\"n\">DocTag</span><span class=\"o\">.</span><span class=\"n\">CHAT</span><span class=\"p\">,</span> <span class=\"n\">tag_name</span><span class=\"o\">=</span><span class=\"n\">ChatTag</span><span class=\"o\">.</span><span class=\"n\">CHAT_ID</span><span class=\"p\">,</span> <span class=\"n\">string_value</span><span class=\"o\">=</span><span class=\"n\">chat_id</span>\n        <span class=\"p\">)</span></div>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_one_time_set_tag</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">tag_kind</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">tag_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">string_value</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n        <span class=\"n\">existing</span> <span class=\"o\">=</span> <span class=\"n\">get_tag_value_key</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tags</span><span class=\"p\">,</span> <span class=\"n\">TagValueKey</span><span class=\"o\">.</span><span class=\"n\">STRING_VALUE</span><span class=\"p\">,</span> <span class=\"n\">kind</span><span class=\"o\">=</span><span class=\"n\">tag_kind</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">tag_name</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">existing</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">existing</span> <span class=\"o\">==</span> <span class=\"n\">string_value</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span>  <span class=\"c1\"># No action necessary</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"k\">raise</span> <span class=\"n\">SteamshipError</span><span class=\"p\">(</span>\n                    <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Block </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"si\">}</span><span class=\"s2\"> already has an existing </span><span class=\"si\">{</span><span class=\"n\">tag_kind</span><span class=\"si\">}</span><span class=\"s2\">/</span><span class=\"si\">{</span><span class=\"n\">tag_name</span><span class=\"si\">}</span><span class=\"s2\"> with value </span><span class=\"si\">{</span><span class=\"n\">existing</span><span class=\"si\">}</span><span class=\"s2\">. Unable to set to </span><span class=\"si\">{</span><span class=\"n\">string_value</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n                <span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">:</span>\n            <span class=\"n\">tag</span> <span class=\"o\">=</span> <span class=\"n\">Tag</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">,</span>\n                <span class=\"n\">file_id</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">file_id</span><span class=\"p\">,</span>\n                <span class=\"n\">block_id</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span>\n                <span class=\"n\">kind</span><span class=\"o\">=</span><span class=\"n\">tag_kind</span><span class=\"p\">,</span>\n                <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">tag_name</span><span class=\"p\">,</span>\n                <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"n\">TagValueKey</span><span class=\"o\">.</span><span class=\"n\">STRING_VALUE</span><span class=\"p\">:</span> <span class=\"n\">string_value</span><span class=\"p\">},</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">tag</span> <span class=\"o\">=</span> <span class=\"n\">Tag</span><span class=\"p\">(</span>\n                <span class=\"n\">kind</span><span class=\"o\">=</span><span class=\"n\">tag_kind</span><span class=\"p\">,</span>\n                <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">tag_name</span><span class=\"p\">,</span>\n                <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"n\">TagValueKey</span><span class=\"o\">.</span><span class=\"n\">STRING_VALUE</span><span class=\"p\">:</span> <span class=\"n\">string_value</span><span class=\"p\">},</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tags</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">tag</span><span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"Block.as_llm_input\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.Block.as_llm_input\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">as_llm_input</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">exclude_block_wrapper</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">is_text</span><span class=\"p\">():</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">text</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">exclude_block_wrapper</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n            <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;Block(</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"si\">}</span><span class=\"s2\">)&quot;</span></div></div>\n\n\n<div class=\"viewcode-block\" id=\"BlockQueryResponse\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.BlockQueryResponse\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">BlockQueryResponse</span><span class=\"p\">(</span><span class=\"n\">Response</span><span class=\"p\">):</span>\n    <span class=\"n\">blocks</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Block</span><span class=\"p\">]</span></div>\n\n\n<span class=\"n\">Block</span><span class=\"o\">.</span><span class=\"n\">ListResponse</span><span class=\"o\">.</span><span class=\"n\">update_forward_refs</span><span class=\"p\">()</span>\n<span class=\"n\">Block</span><span class=\"o\">.</span><span class=\"n\">update_forward_refs</span><span class=\"p\">()</span>\n</pre></div>", "current_page_name": "_modules/steamship/data/block", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "furo_version": "2023.03.27", "furo_navigation_tree": "", "furo_hide_toc": true, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#272822", "foreground": "#f8f8f2"}}}