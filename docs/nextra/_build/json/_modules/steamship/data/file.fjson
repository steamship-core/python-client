{"parents": [{"link": "../../../", "title": "Module code"}], "title": "steamship.data.file", "body": "<h1>Source code for steamship.data.file</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">annotations</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">io</span>\n<span class=\"kn\">import</span> <span class=\"nn\">mimetypes</span>\n<span class=\"kn\">from</span> <span class=\"nn\">enum</span> <span class=\"kn\">import</span> <span class=\"n\">Enum</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">TYPE_CHECKING</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">,</span> <span class=\"n\">Union</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pydantic</span> <span class=\"kn\">import</span> <span class=\"n\">BaseModel</span><span class=\"p\">,</span> <span class=\"n\">Field</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">steamship</span> <span class=\"kn\">import</span> <span class=\"n\">MimeTypes</span><span class=\"p\">,</span> <span class=\"n\">SteamshipError</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.base.client</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.base.model</span> <span class=\"kn\">import</span> <span class=\"n\">CamelModel</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.base.request</span> <span class=\"kn\">import</span> <span class=\"n\">GetRequest</span><span class=\"p\">,</span> <span class=\"n\">IdentifierRequest</span><span class=\"p\">,</span> <span class=\"n\">ListRequest</span><span class=\"p\">,</span> <span class=\"n\">Request</span><span class=\"p\">,</span> <span class=\"n\">SortOrder</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.base.response</span> <span class=\"kn\">import</span> <span class=\"n\">ListResponse</span><span class=\"p\">,</span> <span class=\"n\">Response</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.base.tasks</span> <span class=\"kn\">import</span> <span class=\"n\">Task</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.data.block</span> <span class=\"kn\">import</span> <span class=\"n\">Block</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.data.embeddings</span> <span class=\"kn\">import</span> <span class=\"n\">EmbeddingIndex</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.data.tags</span> <span class=\"kn\">import</span> <span class=\"n\">Tag</span><span class=\"p\">,</span> <span class=\"n\">TagKind</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.data.tags.tag_constants</span> <span class=\"kn\">import</span> <span class=\"n\">ProvenanceTag</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.utils.binary_utils</span> <span class=\"kn\">import</span> <span class=\"n\">flexi_create</span>\n\n<span class=\"k\">if</span> <span class=\"n\">TYPE_CHECKING</span><span class=\"p\">:</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">steamship.data.operations.generator</span> <span class=\"kn\">import</span> <span class=\"n\">GenerateResponse</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">steamship.data.operations.tagger</span> <span class=\"kn\">import</span> <span class=\"n\">TagResponse</span>\n\n\n<div class=\"viewcode-block\" id=\"FileUploadType\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.FileUploadType\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">FileUploadType</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Enum</span><span class=\"p\">):</span>\n    <span class=\"n\">FILE</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;file&quot;</span>  <span class=\"c1\"># A file uploaded as bytes or a string</span>\n    <span class=\"n\">FILE_IMPORTER</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;fileImporter&quot;</span>  <span class=\"c1\"># A fileImporter will be used to create the file</span>\n    <span class=\"n\">BLOCKS</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;blocks&quot;</span>  <span class=\"c1\"># Blocks are sent to create a file</span>\n    <span class=\"n\">NONE</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;none&quot;</span>  <span class=\"c1\"># Create an empty file</span></div>\n\n\n<div class=\"viewcode-block\" id=\"FileClearResponse\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.FileClearResponse\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">FileClearResponse</span><span class=\"p\">(</span><span class=\"n\">Response</span><span class=\"p\">):</span>\n    <span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></div>\n\n\n<div class=\"viewcode-block\" id=\"ListFileRequest\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.ListFileRequest\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">ListFileRequest</span><span class=\"p\">(</span><span class=\"n\">ListRequest</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span></div>\n\n\n<div class=\"viewcode-block\" id=\"ListFileResponse\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.ListFileResponse\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">ListFileResponse</span><span class=\"p\">(</span><span class=\"n\">ListResponse</span><span class=\"p\">):</span>\n    <span class=\"n\">files</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">File</span><span class=\"p\">]</span></div>\n\n\n<div class=\"viewcode-block\" id=\"FileQueryRequest\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.FileQueryRequest\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">FileQueryRequest</span><span class=\"p\">(</span><span class=\"n\">Request</span><span class=\"p\">):</span>\n    <span class=\"n\">tag_filter_query</span><span class=\"p\">:</span> <span class=\"nb\">str</span></div>\n\n\n<div class=\"viewcode-block\" id=\"File\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.File\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">File</span><span class=\"p\">(</span><span class=\"n\">CamelModel</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;A file.&quot;&quot;&quot;</span>\n\n    <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Client</span> <span class=\"o\">=</span> <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">exclude</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">handle</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">mime_type</span><span class=\"p\">:</span> <span class=\"n\">MimeTypes</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">workspace_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">blocks</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Block</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">tags</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Tag</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n    <span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">public_data</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n<div class=\"viewcode-block\" id=\"File.CreateResponse\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.File.CreateResponse\">[docs]</a>    <span class=\"k\">class</span> <span class=\"nc\">CreateResponse</span><span class=\"p\">(</span><span class=\"n\">Response</span><span class=\"p\">):</span>\n        <span class=\"n\">data_</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"n\">mime_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n        <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"p\">,</span>\n            <span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n            <span class=\"n\">string</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n            <span class=\"n\">_bytes</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">BytesIO</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n            <span class=\"n\">json</span><span class=\"p\">:</span> <span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">BytesIO</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n            <span class=\"n\">mime_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"p\">):</span>\n            <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n            <span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">mime_type</span><span class=\"p\">,</span> <span class=\"n\">encoding</span> <span class=\"o\">=</span> <span class=\"n\">flexi_create</span><span class=\"p\">(</span>\n                <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">string</span><span class=\"o\">=</span><span class=\"n\">string</span><span class=\"p\">,</span> <span class=\"n\">json</span><span class=\"o\">=</span><span class=\"n\">json</span><span class=\"p\">,</span> <span class=\"n\">_bytes</span><span class=\"o\">=</span><span class=\"n\">_bytes</span><span class=\"p\">,</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"n\">mime_type</span>\n            <span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">data_</span> <span class=\"o\">=</span> <span class=\"n\">data</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mime_type</span> <span class=\"o\">=</span> <span class=\"n\">mime_type</span>\n\n<div class=\"viewcode-block\" id=\"File.CreateResponse.parse_obj\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.File.CreateResponse.parse_obj\">[docs]</a>        <span class=\"nd\">@classmethod</span>\n        <span class=\"k\">def</span> <span class=\"nf\">parse_obj</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">:</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">BaseModel</span><span class=\"p\">],</span> <span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"n\">Any</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Response</span><span class=\"p\">:</span>\n            <span class=\"n\">obj</span><span class=\"p\">[</span><span class=\"s2\">&quot;data&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;data&quot;</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;data_&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"s2\">&quot;data_&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">obj</span><span class=\"p\">:</span>\n                <span class=\"k\">del</span> <span class=\"n\">obj</span><span class=\"p\">[</span><span class=\"s2\">&quot;data_&quot;</span><span class=\"p\">]</span>\n            <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">parse_obj</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">)</span></div></div>\n\n<div class=\"viewcode-block\" id=\"File.parse_obj\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.File.parse_obj\">[docs]</a>    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">parse_obj</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">:</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">BaseModel</span><span class=\"p\">],</span> <span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"n\">Any</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">BaseModel</span><span class=\"p\">:</span>\n        <span class=\"c1\"># TODO (enias): This needs to be solved at the engine side</span>\n        <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"n\">obj</span><span class=\"p\">[</span><span class=\"s2\">&quot;file&quot;</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"s2\">&quot;file&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">obj</span> <span class=\"k\">else</span> <span class=\"n\">obj</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">parse_obj</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"File.delete\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.File.delete\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">delete</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">File</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;file/delete&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">IdentifierRequest</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">),</span>\n            <span class=\"n\">expect</span><span class=\"o\">=</span><span class=\"n\">File</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"File.get\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.File.get\">[docs]</a>    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">(</span>\n        <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Client</span><span class=\"p\">,</span>\n        <span class=\"n\">_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">handle</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">File</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;file/get&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">IdentifierRequest</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"n\">_id</span><span class=\"p\">,</span> <span class=\"n\">handle</span><span class=\"o\">=</span><span class=\"n\">handle</span><span class=\"p\">),</span>\n            <span class=\"n\">expect</span><span class=\"o\">=</span><span class=\"n\">File</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"File.create\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.File.create\">[docs]</a>    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create</span><span class=\"p\">(</span>\n        <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Client</span><span class=\"p\">,</span>\n        <span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bytes</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">mime_type</span><span class=\"p\">:</span> <span class=\"n\">MimeTypes</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">handle</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">blocks</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Block</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">tags</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Tag</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">public_data</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Any</span><span class=\"p\">:</span>\n\n        <span class=\"n\">req</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;handle&quot;</span><span class=\"p\">:</span> <span class=\"n\">handle</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;mimeType&quot;</span><span class=\"p\">:</span> <span class=\"n\">mime_type</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;publicData&quot;</span><span class=\"p\">:</span> <span class=\"n\">public_data</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">content</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"ow\">and</span> <span class=\"n\">blocks</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Both none: empty file; to be imported later.</span>\n            <span class=\"n\">upload_type</span> <span class=\"o\">=</span> <span class=\"n\">FileUploadType</span><span class=\"o\">.</span><span class=\"n\">NONE</span>\n        <span class=\"k\">elif</span> <span class=\"n\">content</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span> <span class=\"ow\">and</span> <span class=\"n\">blocks</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Both not none: unclear what to do; raise an exception</span>\n            <span class=\"k\">raise</span> <span class=\"n\">SteamshipError</span><span class=\"p\">(</span>\n                <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"s2\">&quot;Please provide only `blocks` or `content` to `File.create`.&quot;</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"n\">blocks</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Blocks</span>\n            <span class=\"n\">upload_type</span> <span class=\"o\">=</span> <span class=\"n\">FileUploadType</span><span class=\"o\">.</span><span class=\"n\">BLOCKS</span>\n            <span class=\"n\">req</span><span class=\"p\">[</span><span class=\"s2\">&quot;blocks&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">dict</span><span class=\"p\">(</span><span class=\"n\">by_alias</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">exclude_unset</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">exclude_none</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n                <span class=\"k\">for</span> <span class=\"n\">block</span> <span class=\"ow\">in</span> <span class=\"n\">blocks</span> <span class=\"ow\">or</span> <span class=\"p\">[]</span>\n            <span class=\"p\">]</span>\n\n        <span class=\"k\">elif</span> <span class=\"n\">content</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">upload_type</span> <span class=\"o\">=</span> <span class=\"n\">FileUploadType</span><span class=\"o\">.</span><span class=\"n\">FILE</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">Exception</span><span class=\"p\">(</span><span class=\"s2\">&quot;Unable to determine upload type.&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"n\">req</span><span class=\"p\">[</span><span class=\"s2\">&quot;type&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">upload_type</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">tags</span><span class=\"p\">:</span>\n            <span class=\"n\">req</span><span class=\"p\">[</span><span class=\"s2\">&quot;tags&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n                <span class=\"n\">tag</span><span class=\"o\">.</span><span class=\"n\">dict</span><span class=\"p\">(</span><span class=\"n\">by_alias</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">exclude_unset</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">exclude_none</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">tag</span> <span class=\"ow\">in</span> <span class=\"n\">tags</span> <span class=\"ow\">or</span> <span class=\"p\">[]</span>\n            <span class=\"p\">]</span>\n\n        <span class=\"n\">file_data</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n            <span class=\"p\">(</span><span class=\"s2\">&quot;file-part&quot;</span><span class=\"p\">,</span> <span class=\"n\">content</span><span class=\"p\">,</span> <span class=\"s2\">&quot;multipart/form-data&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">upload_type</span> <span class=\"o\">==</span> <span class=\"n\">FileUploadType</span><span class=\"o\">.</span><span class=\"n\">FILE</span>\n            <span class=\"k\">else</span> <span class=\"kc\">None</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># Defaulting this here, as opposed to in the Engine, because it is processed by Vapor</span>\n        <span class=\"k\">return</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;file/create&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">payload</span><span class=\"o\">=</span><span class=\"n\">req</span><span class=\"p\">,</span>\n            <span class=\"n\">file</span><span class=\"o\">=</span><span class=\"n\">file_data</span><span class=\"p\">,</span>\n            <span class=\"n\">expect</span><span class=\"o\">=</span><span class=\"n\">File</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"File.create_with_plugin\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.File.create_with_plugin\">[docs]</a>    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_with_plugin</span><span class=\"p\">(</span>\n        <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Client</span><span class=\"p\">,</span>\n        <span class=\"n\">plugin_instance</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n        <span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">mime_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Task</span><span class=\"p\">[</span><span class=\"n\">File</span><span class=\"p\">]:</span>\n\n        <span class=\"n\">req</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;type&quot;</span><span class=\"p\">:</span> <span class=\"n\">FileUploadType</span><span class=\"o\">.</span><span class=\"n\">FILE_IMPORTER</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;url&quot;</span><span class=\"p\">:</span> <span class=\"n\">url</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;mimeType&quot;</span><span class=\"p\">:</span> <span class=\"n\">mime_type</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;pluginInstance&quot;</span><span class=\"p\">:</span> <span class=\"n\">plugin_instance</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s2\">&quot;file/create&quot;</span><span class=\"p\">,</span> <span class=\"n\">payload</span><span class=\"o\">=</span><span class=\"n\">req</span><span class=\"p\">,</span> <span class=\"n\">expect</span><span class=\"o\">=</span><span class=\"n\">File</span><span class=\"p\">,</span> <span class=\"n\">as_background_task</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"File.import_with_plugin\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.File.import_with_plugin\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">import_with_plugin</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">plugin_instance</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n        <span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">mime_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Task</span><span class=\"p\">[</span><span class=\"n\">File</span><span class=\"p\">]:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Run an import operation on an (empty) file object that has already been created.&quot;&quot;&quot;</span>\n        <span class=\"n\">req</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;type&quot;</span><span class=\"p\">:</span> <span class=\"n\">FileUploadType</span><span class=\"o\">.</span><span class=\"n\">FILE_IMPORTER</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;id&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;url&quot;</span><span class=\"p\">:</span> <span class=\"n\">url</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;mimeType&quot;</span><span class=\"p\">:</span> <span class=\"n\">mime_type</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;pluginInstance&quot;</span><span class=\"p\">:</span> <span class=\"n\">plugin_instance</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s2\">&quot;file/import&quot;</span><span class=\"p\">,</span> <span class=\"n\">payload</span><span class=\"o\">=</span><span class=\"n\">req</span><span class=\"p\">,</span> <span class=\"n\">expect</span><span class=\"o\">=</span><span class=\"n\">File</span><span class=\"p\">,</span> <span class=\"n\">as_background_task</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"File.refresh\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.File.refresh\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">refresh</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">File</span><span class=\"p\">:</span>\n        <span class=\"n\">refreshed</span> <span class=\"o\">=</span> <span class=\"n\">File</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">refreshed</span><span class=\"o\">.</span><span class=\"n\">dict</span><span class=\"p\">())</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">refreshed</span><span class=\"o\">.</span><span class=\"n\">client</span>\n        <span class=\"k\">for</span> <span class=\"n\">block</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">blocks</span><span class=\"p\">:</span>\n            <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span></div>\n\n<div class=\"viewcode-block\" id=\"File.query\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.File.query\">[docs]</a>    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">query</span><span class=\"p\">(</span>\n        <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Client</span><span class=\"p\">,</span>\n        <span class=\"n\">tag_filter_query</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">FileQueryResponse</span><span class=\"p\">:</span>\n\n        <span class=\"n\">req</span> <span class=\"o\">=</span> <span class=\"n\">FileQueryRequest</span><span class=\"p\">(</span><span class=\"n\">tag_filter_query</span><span class=\"o\">=</span><span class=\"n\">tag_filter_query</span><span class=\"p\">)</span>\n        <span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;file/query&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">payload</span><span class=\"o\">=</span><span class=\"n\">req</span><span class=\"p\">,</span>\n            <span class=\"n\">expect</span><span class=\"o\">=</span><span class=\"n\">FileQueryResponse</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">res</span></div>\n\n<div class=\"viewcode-block\" id=\"File.raw\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.File.raw\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">raw</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;file/raw&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">payload</span><span class=\"o\">=</span><span class=\"n\">GetRequest</span><span class=\"p\">(</span>\n                <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span>\n            <span class=\"p\">),</span>\n            <span class=\"n\">raw_response</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span></div>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">raw_data_url</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Return a URL at which the data content of this File can be accessed.  If public_data is True,</span>\n<span class=\"sd\">        this content can be accessed without an API key.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"si\">}</span><span class=\"s2\">file/</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"si\">}</span><span class=\"s2\">/raw&quot;</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n<div class=\"viewcode-block\" id=\"File.blockify\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.File.blockify\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">blockify</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">plugin_instance</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">wait_on_tasks</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Task</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Task</span><span class=\"p\">:</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">steamship.data.operations.blockifier</span> <span class=\"kn\">import</span> <span class=\"n\">BlockifyRequest</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">steamship.plugin.outputs.block_and_tag_plugin_output</span> <span class=\"kn\">import</span> <span class=\"n\">BlockAndTagPluginOutput</span>\n\n        <span class=\"n\">req</span> <span class=\"o\">=</span> <span class=\"n\">BlockifyRequest</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s2\">&quot;file&quot;</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"n\">plugin_instance</span><span class=\"o\">=</span><span class=\"n\">plugin_instance</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;plugin/instance/blockify&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">payload</span><span class=\"o\">=</span><span class=\"n\">req</span><span class=\"p\">,</span>\n            <span class=\"n\">expect</span><span class=\"o\">=</span><span class=\"n\">BlockAndTagPluginOutput</span><span class=\"p\">,</span>\n            <span class=\"n\">wait_on_tasks</span><span class=\"o\">=</span><span class=\"n\">wait_on_tasks</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"File.tag\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.File.tag\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">tag</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">plugin_instance</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">wait_on_tasks</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Task</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Task</span><span class=\"p\">[</span><span class=\"n\">TagResponse</span><span class=\"p\">]:</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">steamship.data.operations.tagger</span> <span class=\"kn\">import</span> <span class=\"n\">TagRequest</span><span class=\"p\">,</span> <span class=\"n\">TagResponse</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">steamship.data.plugin</span> <span class=\"kn\">import</span> <span class=\"n\">PluginTargetType</span>\n\n        <span class=\"n\">req</span> <span class=\"o\">=</span> <span class=\"n\">TagRequest</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"n\">PluginTargetType</span><span class=\"o\">.</span><span class=\"n\">FILE</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"n\">plugin_instance</span><span class=\"o\">=</span><span class=\"n\">plugin_instance</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;plugin/instance/tag&quot;</span><span class=\"p\">,</span> <span class=\"n\">payload</span><span class=\"o\">=</span><span class=\"n\">req</span><span class=\"p\">,</span> <span class=\"n\">expect</span><span class=\"o\">=</span><span class=\"n\">TagResponse</span><span class=\"p\">,</span> <span class=\"n\">wait_on_tasks</span><span class=\"o\">=</span><span class=\"n\">wait_on_tasks</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"File.generate\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.File.generate\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">generate</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">plugin_instance_handle</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n        <span class=\"n\">start_block_index</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">end_block_index</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">block_index_list</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">append_output_to_file</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">options</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">wait_on_tasks</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Task</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">make_output_public</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Task</span><span class=\"p\">[</span><span class=\"n\">GenerateResponse</span><span class=\"p\">]:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Generate new content from this file. Assumes this file as context for input and output.  May specify start and end blocks.&quot;&quot;&quot;</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">steamship.data.operations.generator</span> <span class=\"kn\">import</span> <span class=\"n\">GenerateRequest</span><span class=\"p\">,</span> <span class=\"n\">GenerateResponse</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">append_output_to_file</span><span class=\"p\">:</span>\n            <span class=\"n\">output_file_id</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">output_file_id</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n        <span class=\"n\">req</span> <span class=\"o\">=</span> <span class=\"n\">GenerateRequest</span><span class=\"p\">(</span>\n            <span class=\"n\">plugin_instance</span><span class=\"o\">=</span><span class=\"n\">plugin_instance_handle</span><span class=\"p\">,</span>\n            <span class=\"n\">input_file_id</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span>\n            <span class=\"n\">input_file_start_block_index</span><span class=\"o\">=</span><span class=\"n\">start_block_index</span><span class=\"p\">,</span>\n            <span class=\"n\">input_file_end_block_index</span><span class=\"o\">=</span><span class=\"n\">end_block_index</span><span class=\"p\">,</span>\n            <span class=\"n\">input_file_block_index_list</span><span class=\"o\">=</span><span class=\"n\">block_index_list</span><span class=\"p\">,</span>\n            <span class=\"n\">append_output_to_file</span><span class=\"o\">=</span><span class=\"n\">append_output_to_file</span><span class=\"p\">,</span>\n            <span class=\"n\">output_file_id</span><span class=\"o\">=</span><span class=\"n\">output_file_id</span><span class=\"p\">,</span>\n            <span class=\"n\">options</span><span class=\"o\">=</span><span class=\"n\">options</span><span class=\"p\">,</span>\n            <span class=\"n\">make_output_public</span><span class=\"o\">=</span><span class=\"n\">make_output_public</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;plugin/instance/generate&quot;</span><span class=\"p\">,</span> <span class=\"n\">req</span><span class=\"p\">,</span> <span class=\"n\">expect</span><span class=\"o\">=</span><span class=\"n\">GenerateResponse</span><span class=\"p\">,</span> <span class=\"n\">wait_on_tasks</span><span class=\"o\">=</span><span class=\"n\">wait_on_tasks</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"File.index\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.File.index\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">index</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">plugin_instance</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">EmbeddingIndex</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Index every block in the file.</span>\n\n<span class=\"sd\">        TODO(ted): Enable indexing the results of a tag query.</span>\n<span class=\"sd\">        TODO(ted): It&#39;s hard to load the EmbeddingIndexPluginInstance with just a handle because of the chain</span>\n<span class=\"sd\">        of things that need to be created to it to function.&quot;&quot;&quot;</span>\n\n        <span class=\"c1\"># Preserve the prior behavior of embedding the full text of each block.</span>\n        <span class=\"n\">tags</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"n\">Tag</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">,</span> <span class=\"n\">file_id</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"n\">block_id</span><span class=\"o\">=</span><span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"n\">kind</span><span class=\"o\">=</span><span class=\"s2\">&quot;block&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">block</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">blocks</span> <span class=\"ow\">or</span> <span class=\"p\">[]</span>\n        <span class=\"p\">]</span>\n        <span class=\"k\">return</span> <span class=\"n\">plugin_instance</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">tags</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"File.list\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.File.list\">[docs]</a>    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">list</span><span class=\"p\">(</span>\n        <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Client</span><span class=\"p\">,</span>\n        <span class=\"n\">page_size</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">page_token</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">sort_order</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">SortOrder</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">SortOrder</span><span class=\"o\">.</span><span class=\"n\">DESC</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">ListFileResponse</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;file/list&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">ListFileRequest</span><span class=\"p\">(</span><span class=\"n\">pageSize</span><span class=\"o\">=</span><span class=\"n\">page_size</span><span class=\"p\">,</span> <span class=\"n\">pageToken</span><span class=\"o\">=</span><span class=\"n\">page_token</span><span class=\"p\">,</span> <span class=\"n\">sortOrder</span><span class=\"o\">=</span><span class=\"n\">sort_order</span><span class=\"p\">),</span>\n            <span class=\"n\">expect</span><span class=\"o\">=</span><span class=\"n\">ListFileResponse</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"File.append_block\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.File.append_block\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">append_block</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">tags</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Tag</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bytes</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">mime_type</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">MimeTypes</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">public_data</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Block</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Append a new block to this File.  This is a convenience wrapper around</span>\n<span class=\"sd\">        Block.create(). You should provide only one of text, content, or url.</span>\n\n<span class=\"sd\">        This is a server-side operation, saving the new Block to the file. The new block</span>\n<span class=\"sd\">        is appended to this client-side File as well for convenience.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">block</span> <span class=\"o\">=</span> <span class=\"n\">Block</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">,</span>\n            <span class=\"n\">file_id</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span>\n            <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"n\">text</span><span class=\"p\">,</span>\n            <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"n\">tags</span><span class=\"p\">,</span>\n            <span class=\"n\">content</span><span class=\"o\">=</span><span class=\"n\">content</span><span class=\"p\">,</span>\n            <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"n\">url</span><span class=\"p\">,</span>\n            <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"n\">mime_type</span><span class=\"p\">,</span>\n            <span class=\"n\">public_data</span><span class=\"o\">=</span><span class=\"n\">public_data</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">blocks</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">block</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">block</span></div>\n\n<div class=\"viewcode-block\" id=\"File.set_public_data\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.File.set_public_data\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">set_public_data</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">public_data</span><span class=\"p\">:</span> <span class=\"nb\">bool</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Set the public_data flag on this File. If this object already exists server-side, update the flag.&quot;&quot;&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">public_data</span> <span class=\"o\">=</span> <span class=\"n\">public_data</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span> <span class=\"ow\">and</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">req</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n                <span class=\"s2\">&quot;id&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;publicData&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">public_data</span><span class=\"p\">,</span>\n            <span class=\"p\">}</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s2\">&quot;file/update&quot;</span><span class=\"p\">,</span> <span class=\"n\">payload</span><span class=\"o\">=</span><span class=\"n\">req</span><span class=\"p\">,</span> <span class=\"n\">expect</span><span class=\"o\">=</span><span class=\"n\">File</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"File.from_local\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.File.from_local\">[docs]</a>    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">from_local</span><span class=\"p\">(</span>\n        <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Client</span><span class=\"p\">,</span>\n        <span class=\"n\">file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n        <span class=\"n\">mime_type</span><span class=\"p\">:</span> <span class=\"n\">MimeTypes</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">handle</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">tags</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Tag</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">public_data</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Any</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Loads a local file into a Steamship File.</span>\n\n<span class=\"sd\">        NOTE: the `file_path` should be relative to where the call to `from_local` is happening.</span>\n\n<span class=\"sd\">        Loaded files will automatically be tagged with a provenance tag.</span>\n\n<span class=\"sd\">        Args:</span>\n<span class=\"sd\">            client: Steamship client for the workspace</span>\n<span class=\"sd\">            file_path: Location of the file to upload **relative** to the current directory of the client</span>\n<span class=\"sd\">            mime_type: Optional specification of a particular mime type. If not provided, a guess will be made.</span>\n<span class=\"sd\">            handle: Intended handle (for lookups, etc.) for Steamship File</span>\n<span class=\"sd\">            tags: Metadata to add to the Steamship File</span>\n<span class=\"sd\">            public_data: Whether to make the Steamship File publicly-accessible</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"n\">full_path</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">resolve</span><span class=\"p\">()</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">mime_type</span><span class=\"p\">:</span>\n            <span class=\"n\">mime</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">mimetypes</span><span class=\"o\">.</span><span class=\"n\">guess_type</span><span class=\"p\">(</span><span class=\"n\">file_path</span><span class=\"p\">,</span> <span class=\"n\">strict</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">MimeTypes</span><span class=\"o\">.</span><span class=\"n\">has_value</span><span class=\"p\">(</span><span class=\"n\">mime</span><span class=\"p\">):</span>\n                <span class=\"n\">mime_type</span> <span class=\"o\">=</span> <span class=\"n\">MimeTypes</span><span class=\"p\">(</span><span class=\"n\">mime</span><span class=\"p\">)</span>\n\n        <span class=\"n\">_tags</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"n\">Tag</span><span class=\"p\">(</span><span class=\"n\">kind</span><span class=\"o\">=</span><span class=\"n\">TagKind</span><span class=\"o\">.</span><span class=\"n\">PROVENANCE</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">ProvenanceTag</span><span class=\"o\">.</span><span class=\"n\">FILE</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;file_path&quot;</span><span class=\"p\">:</span> <span class=\"n\">file_path</span><span class=\"p\">})</span>\n        <span class=\"p\">]</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">tags</span><span class=\"p\">:</span>\n            <span class=\"n\">_tags</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">tags</span><span class=\"p\">)</span>\n\n        <span class=\"k\">with</span> <span class=\"n\">full_path</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s2\">&quot;rb&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">file</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">File</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span>\n                <span class=\"n\">client</span><span class=\"o\">=</span><span class=\"n\">client</span><span class=\"p\">,</span>\n                <span class=\"n\">content</span><span class=\"o\">=</span><span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(),</span>\n                <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"n\">mime_type</span><span class=\"p\">,</span>\n                <span class=\"n\">handle</span><span class=\"o\">=</span><span class=\"n\">handle</span><span class=\"p\">,</span>\n                <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"n\">_tags</span><span class=\"p\">,</span>\n                <span class=\"n\">public_data</span><span class=\"o\">=</span><span class=\"n\">public_data</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span></div></div>\n\n\n<div class=\"viewcode-block\" id=\"FileQueryResponse\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.data/#steamship.FileQueryResponse\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">FileQueryResponse</span><span class=\"p\">(</span><span class=\"n\">Response</span><span class=\"p\">):</span>\n    <span class=\"n\">files</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">File</span><span class=\"p\">]</span></div>\n\n\n<span class=\"n\">ListFileResponse</span><span class=\"o\">.</span><span class=\"n\">update_forward_refs</span><span class=\"p\">()</span>\n</pre></div>", "current_page_name": "_modules/steamship/data/file", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "furo_version": "2023.03.27", "furo_navigation_tree": "", "furo_hide_toc": true, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#272822", "foreground": "#f8f8f2"}}}