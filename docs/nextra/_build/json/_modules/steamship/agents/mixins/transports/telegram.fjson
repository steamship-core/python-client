{"parents": [{"link": "../../../../../", "title": "Module code"}], "title": "steamship.agents.mixins.transports.telegram", "body": "<h1>Source code for steamship.agents.mixins.transports.telegram</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">import</span> <span class=\"nn\">tempfile</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">Optional</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">requests</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pydantic</span> <span class=\"kn\">import</span> <span class=\"n\">Field</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">steamship</span> <span class=\"kn\">import</span> <span class=\"n\">Block</span><span class=\"p\">,</span> <span class=\"n\">Steamship</span><span class=\"p\">,</span> <span class=\"n\">SteamshipError</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.agents.llms</span> <span class=\"kn\">import</span> <span class=\"n\">OpenAI</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.agents.mixins.transports.transport</span> <span class=\"kn\">import</span> <span class=\"n\">Transport</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.agents.schema</span> <span class=\"kn\">import</span> <span class=\"n\">Agent</span><span class=\"p\">,</span> <span class=\"n\">AgentContext</span><span class=\"p\">,</span> <span class=\"n\">EmitFunc</span><span class=\"p\">,</span> <span class=\"n\">Metadata</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.agents.service.agent_service</span> <span class=\"kn\">import</span> <span class=\"n\">AgentService</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.agents.utils</span> <span class=\"kn\">import</span> <span class=\"n\">with_llm</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.invocable</span> <span class=\"kn\">import</span> <span class=\"n\">Config</span><span class=\"p\">,</span> <span class=\"n\">InvocableResponse</span><span class=\"p\">,</span> <span class=\"n\">InvocationContext</span><span class=\"p\">,</span> <span class=\"n\">post</span>\n\n\n<div class=\"viewcode-block\" id=\"TelegramTransportConfig\"><a class=\"viewcode-back\" href=\"../../../../../../api/steamship.agents.mixins.transports/#steamship.agents.mixins.transports.telegram.TelegramTransportConfig\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">TelegramTransportConfig</span><span class=\"p\">(</span><span class=\"n\">Config</span><span class=\"p\">):</span>\n    <span class=\"n\">bot_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">&quot;The secret token for your Telegram bot&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">api_base</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"s2\">&quot;https://api.telegram.org/bot&quot;</span><span class=\"p\">,</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">&quot;The root API for Telegram&quot;</span><span class=\"p\">)</span></div>\n\n\n<div class=\"viewcode-block\" id=\"TelegramTransport\"><a class=\"viewcode-back\" href=\"../../../../../../api/steamship.agents.mixins.transports/#steamship.agents.mixins.transports.telegram.TelegramTransport\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">TelegramTransport</span><span class=\"p\">(</span><span class=\"n\">Transport</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Experimental base class to encapsulate a Telegram communication channel.&quot;&quot;&quot;</span>\n\n    <span class=\"n\">api_root</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n    <span class=\"n\">bot_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n    <span class=\"n\">agent</span><span class=\"p\">:</span> <span class=\"n\">Agent</span>\n    <span class=\"n\">agent_service</span><span class=\"p\">:</span> <span class=\"n\">AgentService</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Steamship</span><span class=\"p\">,</span>\n        <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">TelegramTransportConfig</span><span class=\"p\">,</span>\n        <span class=\"n\">agent_service</span><span class=\"p\">:</span> <span class=\"n\">AgentService</span><span class=\"p\">,</span>\n        <span class=\"n\">agent</span><span class=\"p\">:</span> <span class=\"n\">Agent</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"o\">=</span><span class=\"n\">client</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">api_root</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"si\">}{</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">bot_token</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">bot_token</span> <span class=\"o\">=</span> <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">bot_token</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">agent</span> <span class=\"o\">=</span> <span class=\"n\">agent</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">agent_service</span> <span class=\"o\">=</span> <span class=\"n\">agent_service</span>\n\n<div class=\"viewcode-block\" id=\"TelegramTransport.instance_init\"><a class=\"viewcode-back\" href=\"../../../../../../api/steamship.agents.mixins.transports/#steamship.agents.mixins.transports.telegram.TelegramTransport.instance_init\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">instance_init</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">Config</span><span class=\"p\">,</span> <span class=\"n\">invocation_context</span><span class=\"p\">:</span> <span class=\"n\">InvocationContext</span><span class=\"p\">):</span>\n        <span class=\"n\">webhook_url</span> <span class=\"o\">=</span> <span class=\"n\">invocation_context</span><span class=\"o\">.</span><span class=\"n\">invocable_url</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;telegram_respond&quot;</span>\n\n        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;Setting Telegram webhook URL: </span><span class=\"si\">{</span><span class=\"n\">webhook_url</span><span class=\"si\">}</span><span class=\"s2\">. Post is to </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">api_root</span><span class=\"si\">}</span><span class=\"s2\">/setWebhook&quot;</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">api_root</span><span class=\"si\">}</span><span class=\"s2\">/setWebhook&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span>\n                <span class=\"s2\">&quot;url&quot;</span><span class=\"p\">:</span> <span class=\"n\">webhook_url</span><span class=\"p\">,</span>\n                <span class=\"s2\">&quot;allowed_updates&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;message&quot;</span><span class=\"p\">],</span>\n                <span class=\"s2\">&quot;drop_pending_updates&quot;</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"p\">},</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">ok</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">SteamshipError</span><span class=\"p\">(</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;Could not set webhook for bot. Webhook URL was </span><span class=\"si\">{</span><span class=\"n\">webhook_url</span><span class=\"si\">}</span><span class=\"s2\">. Telegram response message: </span><span class=\"si\">{</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n            <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"TelegramTransport.telegram_webhook_info\"><a class=\"viewcode-back\" href=\"../../../../../../api/steamship.agents.mixins.transports/#steamship.agents.mixins.transports.telegram.TelegramTransport.telegram_webhook_info\">[docs]</a>    <span class=\"nd\">@post</span><span class=\"p\">(</span><span class=\"s2\">&quot;telegram_webhook_info&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">telegram_webhook_info</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">dict</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">api_root</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;/getWebhookInfo&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">()</span></div>\n\n<div class=\"viewcode-block\" id=\"TelegramTransport.telegram_disconnect_webhook\"><a class=\"viewcode-back\" href=\"../../../../../../api/steamship.agents.mixins.transports/#steamship.agents.mixins.transports.telegram.TelegramTransport.telegram_disconnect_webhook\">[docs]</a>    <span class=\"nd\">@post</span><span class=\"p\">(</span><span class=\"s2\">&quot;telegram_disconnect_webhook&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">telegram_disconnect_webhook</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Unsubscribe from Telegram updates.&quot;&quot;&quot;</span>\n        <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">api_root</span><span class=\"si\">}</span><span class=\"s2\">/deleteWebhook&quot;</span><span class=\"p\">)</span></div>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_send</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">blocks</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Block</span><span class=\"p\">],</span> <span class=\"n\">metadata</span><span class=\"p\">:</span> <span class=\"n\">Metadata</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Send a response to the Telegram chat.&quot;&quot;&quot;</span>\n        <span class=\"k\">for</span> <span class=\"n\">block</span> <span class=\"ow\">in</span> <span class=\"n\">blocks</span><span class=\"p\">:</span>\n            <span class=\"n\">chat_id</span> <span class=\"o\">=</span> <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">chat_id</span>\n            <span class=\"k\">if</span> <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">is_text</span><span class=\"p\">()</span> <span class=\"ow\">or</span> <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">:</span>\n                <span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">&quot;chat_id&quot;</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">chat_id</span><span class=\"p\">),</span> <span class=\"s2\">&quot;text&quot;</span><span class=\"p\">:</span> <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">}</span>\n                <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">api_root</span><span class=\"si\">}</span><span class=\"s2\">/sendMessage&quot;</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"n\">params</span><span class=\"p\">)</span>\n            <span class=\"k\">elif</span> <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">is_image</span><span class=\"p\">()</span> <span class=\"ow\">or</span> <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">is_audio</span><span class=\"p\">()</span> <span class=\"ow\">or</span> <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">is_video</span><span class=\"p\">():</span>\n                <span class=\"k\">if</span> <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">is_image</span><span class=\"p\">():</span>\n                    <span class=\"n\">suffix</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;sendPhoto&quot;</span>\n                    <span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;photo&quot;</span>\n                <span class=\"k\">elif</span> <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">is_audio</span><span class=\"p\">():</span>\n                    <span class=\"n\">suffix</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;sendAudio&quot;</span>\n                    <span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;audio&quot;</span>\n                <span class=\"k\">elif</span> <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">is_video</span><span class=\"p\">():</span>\n                    <span class=\"n\">suffix</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;sendVideo&quot;</span>\n                    <span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;video&quot;</span>\n\n                <span class=\"n\">_bytes</span> <span class=\"o\">=</span> <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">raw</span><span class=\"p\">()</span>\n                <span class=\"k\">with</span> <span class=\"n\">tempfile</span><span class=\"o\">.</span><span class=\"n\">TemporaryFile</span><span class=\"p\">(</span><span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s2\">&quot;r+b&quot;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">temp_file</span><span class=\"p\">:</span>\n                    <span class=\"n\">temp_file</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">_bytes</span><span class=\"p\">)</span>\n                    <span class=\"n\">temp_file</span><span class=\"o\">.</span><span class=\"n\">seek</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n                    <span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n                        <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">api_root</span><span class=\"si\">}</span><span class=\"s2\">/</span><span class=\"si\">{</span><span class=\"n\">suffix</span><span class=\"si\">}</span><span class=\"s2\">?chat_id=</span><span class=\"si\">{</span><span class=\"n\">chat_id</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span>\n                        <span class=\"n\">files</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">temp_file</span><span class=\"p\">},</span>\n                    <span class=\"p\">)</span>\n                    <span class=\"k\">if</span> <span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">status_code</span> <span class=\"o\">!=</span> <span class=\"mi\">200</span><span class=\"p\">:</span>\n                        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Error sending message: </span><span class=\"si\">{</span><span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"si\">}</span><span class=\"s2\"> [</span><span class=\"si\">{</span><span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">status_code</span><span class=\"si\">}</span><span class=\"s2\">]&quot;</span><span class=\"p\">)</span>\n                        <span class=\"k\">raise</span> <span class=\"n\">SteamshipError</span><span class=\"p\">(</span>\n                            <span class=\"sa\">f</span><span class=\"s2\">&quot;Message not sent to chat </span><span class=\"si\">{</span><span class=\"n\">chat_id</span><span class=\"si\">}</span><span class=\"s2\"> successfully: </span><span class=\"si\">{</span><span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n                        <span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span>\n                    <span class=\"sa\">f</span><span class=\"s2\">&quot;Telegram transport unable to send a block of MimeType </span><span class=\"si\">{</span><span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">mime_type</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n                <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_get_file</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">file_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]:</span>\n        <span class=\"k\">return</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">api_root</span><span class=\"si\">}</span><span class=\"s2\">/getFile&quot;</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;file_id&quot;</span><span class=\"p\">:</span> <span class=\"n\">file_id</span><span class=\"p\">})</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">()[</span>\n            <span class=\"s2\">&quot;result&quot;</span>\n        <span class=\"p\">]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_get_file_url</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">file_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;https://api.telegram.org/file/bot</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">bot_token</span><span class=\"si\">}</span><span class=\"s2\">/</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_file</span><span class=\"p\">(</span><span class=\"n\">file_id</span><span class=\"p\">)[</span><span class=\"s1\">&#39;file_path&#39;</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_download_file</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">file_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n        <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_file_url</span><span class=\"p\">(</span><span class=\"n\">file_id</span><span class=\"p\">))</span>\n        <span class=\"k\">if</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">status_code</span> <span class=\"o\">!=</span> <span class=\"mi\">200</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">Exception</span><span class=\"p\">(</span><span class=\"s2\">&quot;Download file&quot;</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">content</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_parse_inbound</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">payload</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Block</span><span class=\"p\">]:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Parses an inbound Telegram message.&quot;&quot;&quot;</span>\n\n        <span class=\"n\">chat</span> <span class=\"o\">=</span> <span class=\"n\">payload</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;chat&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">chat</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">SteamshipError</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;No `chat` found in Telegram message: </span><span class=\"si\">{</span><span class=\"n\">payload</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"n\">chat_id</span> <span class=\"o\">=</span> <span class=\"n\">chat</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;id&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">chat_id</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">SteamshipError</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;No &#39;chat_id&#39; found in Telegram message: </span><span class=\"si\">{</span><span class=\"n\">payload</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">chat_id</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"n\">SteamshipError</span><span class=\"p\">(</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;Bad &#39;chat_id&#39; found in Telegram message: (</span><span class=\"si\">{</span><span class=\"n\">chat_id</span><span class=\"si\">}</span><span class=\"s2\">). Should have been an int.&quot;</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"n\">message_id</span> <span class=\"o\">=</span> <span class=\"n\">payload</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;message_id&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">message_id</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">SteamshipError</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;No &#39;message_id&#39; found in Telegram message: </span><span class=\"si\">{</span><span class=\"n\">payload</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">message_id</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"n\">SteamshipError</span><span class=\"p\">(</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;Bad &#39;message_id&#39; found in Telegram message: (</span><span class=\"si\">{</span><span class=\"n\">message_id</span><span class=\"si\">}</span><span class=\"s2\">). Should have been an int&quot;</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">video_or_voice</span> <span class=\"o\">:=</span> <span class=\"p\">(</span><span class=\"n\">payload</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;voice&quot;</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"n\">payload</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;video_note&quot;</span><span class=\"p\">)):</span>\n            <span class=\"n\">file_id</span> <span class=\"o\">=</span> <span class=\"n\">video_or_voice</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;file_id&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">file_url</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_file_url</span><span class=\"p\">(</span><span class=\"n\">file_id</span><span class=\"p\">)</span>\n            <span class=\"n\">block</span> <span class=\"o\">=</span> <span class=\"n\">Block</span><span class=\"p\">(</span>\n                <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"n\">payload</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;text&quot;</span><span class=\"p\">),</span>\n                <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"n\">file_url</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">set_chat_id</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">chat_id</span><span class=\"p\">))</span>\n            <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">set_message_id</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">message_id</span><span class=\"p\">))</span>\n            <span class=\"k\">return</span> <span class=\"n\">block</span>\n\n        <span class=\"c1\"># Some incoming messages (like the group join message) don&#39;t have message text.</span>\n        <span class=\"c1\"># Rather than throw an error, we just don&#39;t return a Block.</span>\n        <span class=\"n\">message_text</span> <span class=\"o\">=</span> <span class=\"n\">payload</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;text&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">message_text</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">Block</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"n\">message_text</span><span class=\"p\">)</span>\n            <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">set_chat_id</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">chat_id</span><span class=\"p\">))</span>\n            <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">set_message_id</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">message_id</span><span class=\"p\">))</span>\n            <span class=\"k\">return</span> <span class=\"n\">result</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n<div class=\"viewcode-block\" id=\"TelegramTransport.build_emit_func\"><a class=\"viewcode-back\" href=\"../../../../../../api/steamship.agents.mixins.transports/#steamship.agents.mixins.transports.telegram.TelegramTransport.build_emit_func\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">build_emit_func</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">chat_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">EmitFunc</span><span class=\"p\">:</span>\n        <span class=\"k\">def</span> <span class=\"nf\">new_emit_func</span><span class=\"p\">(</span><span class=\"n\">blocks</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Block</span><span class=\"p\">],</span> <span class=\"n\">metadata</span><span class=\"p\">:</span> <span class=\"n\">Metadata</span><span class=\"p\">):</span>\n            <span class=\"k\">for</span> <span class=\"n\">block</span> <span class=\"ow\">in</span> <span class=\"n\">blocks</span><span class=\"p\">:</span>\n                <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">set_chat_id</span><span class=\"p\">(</span><span class=\"n\">chat_id</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">blocks</span><span class=\"p\">,</span> <span class=\"n\">metadata</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">new_emit_func</span></div>\n\n<div class=\"viewcode-block\" id=\"TelegramTransport.telegram_respond\"><a class=\"viewcode-back\" href=\"../../../../../../api/steamship.agents.mixins.transports/#steamship.agents.mixins.transports.telegram.TelegramTransport.telegram_respond\">[docs]</a>    <span class=\"nd\">@post</span><span class=\"p\">(</span><span class=\"s2\">&quot;telegram_respond&quot;</span><span class=\"p\">,</span> <span class=\"n\">public</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">telegram_respond</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">InvocableResponse</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Endpoint implementing the Telegram WebHook contract. This is a PUBLIC endpoint since Telegram cannot pass a Bearer token.&quot;&quot;&quot;</span>\n\n        <span class=\"c1\"># TODO: must reject things not from the package</span>\n        <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;message&quot;</span><span class=\"p\">,</span> <span class=\"p\">{})</span>\n        <span class=\"n\">chat_id</span> <span class=\"o\">=</span> <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;chat&quot;</span><span class=\"p\">,</span> <span class=\"p\">{})</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;id&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">incoming_message</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">parse_inbound</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">incoming_message</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                <span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"n\">AgentContext</span><span class=\"o\">.</span><span class=\"n\">get_or_create</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">context_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;chat_id&quot;</span><span class=\"p\">:</span> <span class=\"n\">chat_id</span><span class=\"p\">})</span>\n                <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">chat_history</span><span class=\"o\">.</span><span class=\"n\">append_user_message</span><span class=\"p\">(</span>\n                    <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"n\">incoming_message</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">,</span> <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"n\">incoming_message</span><span class=\"o\">.</span><span class=\"n\">tags</span>\n                <span class=\"p\">)</span>\n                <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">emit_funcs</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">build_emit_func</span><span class=\"p\">(</span><span class=\"n\">chat_id</span><span class=\"o\">=</span><span class=\"n\">chat_id</span><span class=\"p\">)]</span>\n\n                <span class=\"c1\"># Add an LLM to the context, using the Agent&#39;s if it exists.</span>\n                <span class=\"n\">llm</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n                <span class=\"k\">if</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">agent</span><span class=\"p\">,</span> <span class=\"s2\">&quot;llm&quot;</span><span class=\"p\">):</span>\n                    <span class=\"n\">llm</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">llm</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"n\">llm</span> <span class=\"o\">=</span> <span class=\"n\">OpenAI</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">)</span>\n\n                <span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"n\">with_llm</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"o\">=</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">llm</span><span class=\"o\">=</span><span class=\"n\">llm</span><span class=\"p\">)</span>\n\n                <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">agent_service</span><span class=\"o\">.</span><span class=\"n\">run_agent</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">agent</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">)</span>\n                <span class=\"k\">if</span> <span class=\"n\">response</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">)</span>\n                <span class=\"k\">else</span><span class=\"p\">:</span>\n                    <span class=\"c1\"># Do nothing here; this could be a message we intentionally don&#39;t want to respond to (ex. an image or file upload)</span>\n                    <span class=\"k\">pass</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"c1\"># Do nothing here; this could be a message we intentionally don&#39;t want to respond to (ex. an image or file upload)</span>\n                <span class=\"k\">pass</span>\n        <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n            <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">response_for_exception</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">,</span> <span class=\"n\">chat_id</span><span class=\"o\">=</span><span class=\"n\">chat_id</span><span class=\"p\">)</span>\n\n            <span class=\"k\">if</span> <span class=\"n\">chat_id</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">([</span><span class=\"n\">response</span><span class=\"p\">])</span>\n        <span class=\"c1\"># Even if we do nothing, make sure we return ok</span>\n        <span class=\"k\">return</span> <span class=\"n\">InvocableResponse</span><span class=\"p\">(</span><span class=\"n\">string</span><span class=\"o\">=</span><span class=\"s2\">&quot;OK&quot;</span><span class=\"p\">)</span></div></div>\n</pre></div>", "current_page_name": "_modules/steamship/agents/mixins/transports/telegram", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "furo_version": "2023.03.27", "furo_navigation_tree": "", "furo_hide_toc": true, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#272822", "foreground": "#f8f8f2"}}}