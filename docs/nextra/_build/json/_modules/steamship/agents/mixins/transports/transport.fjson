{"parents": [{"link": "../../../../../", "title": "Module code"}], "title": "steamship.agents.mixins.transports.transport", "body": "<h1>Source code for steamship.agents.mixins.transports.transport</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">from</span> <span class=\"nn\">abc</span> <span class=\"kn\">import</span> <span class=\"n\">ABC</span><span class=\"p\">,</span> <span class=\"n\">abstractmethod</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">Optional</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">steamship</span> <span class=\"kn\">import</span> <span class=\"n\">Block</span><span class=\"p\">,</span> <span class=\"n\">Steamship</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.agents.schema</span> <span class=\"kn\">import</span> <span class=\"n\">AgentContext</span><span class=\"p\">,</span> <span class=\"n\">Metadata</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.agents.tools.audio_transcription.assembly_speech_to_text_tool</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">AssemblySpeechToTextTool</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.invocable.package_mixin</span> <span class=\"kn\">import</span> <span class=\"n\">PackageMixin</span>\n\n\n<div class=\"viewcode-block\" id=\"Transport\"><a class=\"viewcode-back\" href=\"../../../../../../api/steamship.agents.mixins.transports/#steamship.agents.mixins.transports.transport.Transport\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Transport</span><span class=\"p\">(</span><span class=\"n\">PackageMixin</span><span class=\"p\">,</span> <span class=\"n\">ABC</span><span class=\"p\">):</span>\n    <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Steamship</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot; Base class to encapsulate a communication channel mixin</span>\n\n<span class=\"sd\">    Intended use is:</span>\n\n<span class=\"sd\">        class MyBot(PackageService):</span>\n\n<span class=\"sd\">               def __init__(</span>\n<span class=\"sd\">                    self, client: Steamship, config: Dict[str, Any] = None, context: InvocationContext = None</span>\n<span class=\"sd\">                ):</span>\n<span class=\"sd\">                    super().__init__(client=client, config=config, context=context)</span>\n<span class=\"sd\">                    self.agent = TestAgent()</span>\n<span class=\"sd\">                self.add_mixin(</span>\n<span class=\"sd\">                    TelegramTransport(</span>\n<span class=\"sd\">                        client=client, config=self.config, agent_service=self, agent=self.agent</span>\n<span class=\"sd\">                    )</span>\n<span class=\"sd\">                )</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">client</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">client</span>\n\n<div class=\"viewcode-block\" id=\"Transport.send\"><a class=\"viewcode-back\" href=\"../../../../../../api/steamship.agents.mixins.transports/#steamship.agents.mixins.transports.transport.Transport.send\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">blocks</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Block</span><span class=\"p\">],</span> <span class=\"n\">metadata</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Metadata</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"n\">metadata</span> <span class=\"o\">=</span> <span class=\"n\">metadata</span> <span class=\"ow\">or</span> <span class=\"p\">{}</span>\n        <span class=\"k\">if</span> <span class=\"n\">blocks</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span> <span class=\"ow\">or</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">blocks</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Skipping send of 0 blocks: </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span>\n\n        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Sending </span><span class=\"si\">{</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">blocks</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\"> blocks: </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_send</span><span class=\"p\">(</span><span class=\"n\">blocks</span><span class=\"p\">,</span> <span class=\"n\">metadata</span><span class=\"p\">)</span>\n        <span class=\"n\">end</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span>\n        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;Sending </span><span class=\"si\">{</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">blocks</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\"> blocks in </span><span class=\"si\">{</span><span class=\"n\">end</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">start</span><span class=\"si\">}</span><span class=\"s2\"> seconds: </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n        <span class=\"p\">)</span></div>\n\n    <span class=\"nd\">@abstractmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_send</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">blocks</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Block</span><span class=\"p\">],</span> <span class=\"n\">metadata</span><span class=\"p\">:</span> <span class=\"n\">Metadata</span><span class=\"p\">):</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">NotImplementedError</span>\n\n<div class=\"viewcode-block\" id=\"Transport.parse_inbound\"><a class=\"viewcode-back\" href=\"../../../../../../api/steamship.agents.mixins.transports/#steamship.agents.mixins.transports.transport.Transport.parse_inbound\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">parse_inbound</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">payload</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Block</span><span class=\"p\">]:</span>\n        <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_parse_inbound</span><span class=\"p\">(</span><span class=\"n\">payload</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">url</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">:</span>\n            <span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"n\">AgentContext</span><span class=\"p\">()</span>\n            <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span>\n            <span class=\"n\">transcriptions</span> <span class=\"o\">=</span> <span class=\"n\">AssemblySpeechToTextTool</span><span class=\"p\">(</span>\n                <span class=\"n\">blockifier_plugin_config</span><span class=\"o\">=</span><span class=\"p\">{</span>\n                    <span class=\"s2\">&quot;enable_audio_intelligence&quot;</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;speaker_detection&quot;</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">([</span><span class=\"n\">Block</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">)],</span> <span class=\"n\">context</span><span class=\"o\">=</span><span class=\"n\">context</span><span class=\"p\">)</span>\n            <span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"n\">transcriptions</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">text</span>\n        <span class=\"k\">return</span> <span class=\"n\">message</span></div>\n\n    <span class=\"nd\">@abstractmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">_parse_inbound</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">payload</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Block</span><span class=\"p\">]:</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">NotImplementedError</span>\n\n<div class=\"viewcode-block\" id=\"Transport.response_for_exception\"><a class=\"viewcode-back\" href=\"../../../../../../api/steamship.agents.mixins.transports/#steamship.agents.mixins.transports.transport.Transport.response_for_exception\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">response_for_exception</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"ne\">Exception</span><span class=\"p\">],</span> <span class=\"n\">chat_id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Block</span><span class=\"p\">:</span>\n        <span class=\"n\">return_text</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;An error happened while creating a response: </span><span class=\"si\">{</span><span class=\"n\">e</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">e</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">return_text</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;An unknown error happened. Please reach out to support@steamship.com or on our discord at https://steamship.com/discord&quot;</span>\n\n        <span class=\"k\">if</span> <span class=\"s2\">&quot;usage limit&quot;</span> <span class=\"ow\">in</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">e</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">:</span>\n            <span class=\"n\">return_text</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;You have reached the introductory limit of Steamship. Visit https://steamship.com/account/plan to sign up for a plan.&quot;</span>\n\n        <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">Block</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"n\">return_text</span><span class=\"p\">)</span>\n        <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">set_chat_id</span><span class=\"p\">(</span><span class=\"n\">chat_id</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">result</span></div></div>\n</pre></div>", "current_page_name": "_modules/steamship/agents/mixins/transports/transport", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "furo_version": "2023.03.27", "furo_navigation_tree": "", "furo_hide_toc": true, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#272822", "foreground": "#f8f8f2"}}}