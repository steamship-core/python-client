{"parents": [{"link": "../../../../", "title": "Module code"}], "title": "steamship.agents.service.agent_service", "body": "<h1>Source code for steamship.agents.service.agent_service</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">import</span> <span class=\"nn\">uuid</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">Optional</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">steamship</span> <span class=\"kn\">import</span> <span class=\"n\">Block</span><span class=\"p\">,</span> <span class=\"n\">SteamshipError</span><span class=\"p\">,</span> <span class=\"n\">Task</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.agents.llms</span> <span class=\"kn\">import</span> <span class=\"n\">OpenAI</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.agents.logging</span> <span class=\"kn\">import</span> <span class=\"n\">AgentLogging</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.agents.schema</span> <span class=\"kn\">import</span> <span class=\"n\">Action</span><span class=\"p\">,</span> <span class=\"n\">Agent</span><span class=\"p\">,</span> <span class=\"n\">FinishAction</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.agents.schema.context</span> <span class=\"kn\">import</span> <span class=\"n\">AgentContext</span><span class=\"p\">,</span> <span class=\"n\">Metadata</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.agents.utils</span> <span class=\"kn\">import</span> <span class=\"n\">with_llm</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.invocable</span> <span class=\"kn\">import</span> <span class=\"n\">PackageService</span><span class=\"p\">,</span> <span class=\"n\">post</span>\n\n\n<div class=\"viewcode-block\" id=\"AgentService\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.agents.service/#steamship.agents.service.agent_service.AgentService\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">AgentService</span><span class=\"p\">(</span><span class=\"n\">PackageService</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;AgentService is a Steamship Package that can use an Agent, Tools, and a provided AgentContext to</span>\n<span class=\"sd\">    respond to user input.&quot;&quot;&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n    <span class=\"c1\">###############################################</span>\n    <span class=\"c1\"># Tool selection / execution</span>\n    <span class=\"c1\">###############################################</span>\n\n<div class=\"viewcode-block\" id=\"AgentService.run_action\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.agents.service/#steamship.agents.service.agent_service.AgentService.run_action\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">run_action</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">action</span><span class=\"p\">:</span> <span class=\"n\">Action</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"n\">AgentContext</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">action</span><span class=\"p\">,</span> <span class=\"n\">FinishAction</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span>\n\n        <span class=\"n\">blocks_or_task</span> <span class=\"o\">=</span> <span class=\"n\">action</span><span class=\"o\">.</span><span class=\"n\">tool</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">tool_input</span><span class=\"o\">=</span><span class=\"n\">action</span><span class=\"o\">.</span><span class=\"n\">input</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"o\">=</span><span class=\"n\">context</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">blocks_or_task</span><span class=\"p\">,</span> <span class=\"n\">Task</span><span class=\"p\">):</span>\n            <span class=\"k\">raise</span> <span class=\"n\">SteamshipError</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;Tools return Tasks are not yet supported (but will be soon). &quot;</span>\n                <span class=\"s2\">&quot;Please use synchronous Tasks (Tools that return List[Block] for now.&quot;</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">outputs</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;,&quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">([</span><span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">as_llm_input</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span> <span class=\"k\">for</span> <span class=\"n\">b</span> <span class=\"ow\">in</span> <span class=\"n\">blocks_or_task</span><span class=\"p\">])</span>\n            <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;Tool </span><span class=\"si\">{</span><span class=\"n\">action</span><span class=\"o\">.</span><span class=\"n\">tool</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">: (</span><span class=\"si\">{</span><span class=\"n\">outputs</span><span class=\"si\">}</span><span class=\"s2\">)&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">extra</span><span class=\"o\">=</span><span class=\"p\">{</span>\n                    <span class=\"n\">AgentLogging</span><span class=\"o\">.</span><span class=\"n\">TOOL_NAME</span><span class=\"p\">:</span> <span class=\"n\">action</span><span class=\"o\">.</span><span class=\"n\">tool</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n                    <span class=\"n\">AgentLogging</span><span class=\"o\">.</span><span class=\"n\">IS_MESSAGE</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n                    <span class=\"n\">AgentLogging</span><span class=\"o\">.</span><span class=\"n\">MESSAGE_TYPE</span><span class=\"p\">:</span> <span class=\"n\">AgentLogging</span><span class=\"o\">.</span><span class=\"n\">OBSERVATION</span><span class=\"p\">,</span>\n                    <span class=\"n\">AgentLogging</span><span class=\"o\">.</span><span class=\"n\">MESSAGE_AUTHOR</span><span class=\"p\">:</span> <span class=\"n\">AgentLogging</span><span class=\"o\">.</span><span class=\"n\">AGENT</span><span class=\"p\">,</span>\n                <span class=\"p\">},</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">action</span><span class=\"o\">.</span><span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">blocks_or_task</span>\n            <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">completed_steps</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">action</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"AgentService.run_agent\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.agents.service/#steamship.agents.service.agent_service.AgentService.run_agent\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">run_agent</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">agent</span><span class=\"p\">:</span> <span class=\"n\">Agent</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"n\">AgentContext</span><span class=\"p\">):</span>\n        <span class=\"c1\"># first, clear any prior agent steps from set of completed steps</span>\n        <span class=\"c1\"># this will allow the agent to select tools/dispatch actions based on a new context</span>\n        <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">completed_steps</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"n\">action</span> <span class=\"o\">=</span> <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">next_action</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"o\">=</span><span class=\"n\">context</span><span class=\"p\">)</span>\n        <span class=\"k\">while</span> <span class=\"ow\">not</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">action</span><span class=\"p\">,</span> <span class=\"n\">FinishAction</span><span class=\"p\">):</span>\n            <span class=\"c1\"># TODO: Arrive at a solid design for the details of this structured log object</span>\n            <span class=\"n\">inputs</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;,&quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">([</span><span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">as_llm_input</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span> <span class=\"k\">for</span> <span class=\"n\">b</span> <span class=\"ow\">in</span> <span class=\"n\">action</span><span class=\"o\">.</span><span class=\"n\">input</span><span class=\"p\">])</span>\n            <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;Running Tool </span><span class=\"si\">{</span><span class=\"n\">action</span><span class=\"o\">.</span><span class=\"n\">tool</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\"> (</span><span class=\"si\">{</span><span class=\"n\">inputs</span><span class=\"si\">}</span><span class=\"s2\">)&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">extra</span><span class=\"o\">=</span><span class=\"p\">{</span>\n                    <span class=\"n\">AgentLogging</span><span class=\"o\">.</span><span class=\"n\">TOOL_NAME</span><span class=\"p\">:</span> <span class=\"n\">action</span><span class=\"o\">.</span><span class=\"n\">tool</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n                    <span class=\"n\">AgentLogging</span><span class=\"o\">.</span><span class=\"n\">IS_MESSAGE</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n                    <span class=\"n\">AgentLogging</span><span class=\"o\">.</span><span class=\"n\">MESSAGE_TYPE</span><span class=\"p\">:</span> <span class=\"n\">AgentLogging</span><span class=\"o\">.</span><span class=\"n\">ACTION</span><span class=\"p\">,</span>\n                    <span class=\"n\">AgentLogging</span><span class=\"o\">.</span><span class=\"n\">MESSAGE_AUTHOR</span><span class=\"p\">:</span> <span class=\"n\">AgentLogging</span><span class=\"o\">.</span><span class=\"n\">AGENT</span><span class=\"p\">,</span>\n                <span class=\"p\">},</span>\n            <span class=\"p\">)</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">run_action</span><span class=\"p\">(</span><span class=\"n\">action</span><span class=\"o\">=</span><span class=\"n\">action</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"o\">=</span><span class=\"n\">context</span><span class=\"p\">)</span>\n            <span class=\"n\">action</span> <span class=\"o\">=</span> <span class=\"n\">agent</span><span class=\"o\">.</span><span class=\"n\">next_action</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"o\">=</span><span class=\"n\">context</span><span class=\"p\">)</span>\n            <span class=\"c1\"># TODO: Arrive at a solid design for the details of this structured log object</span>\n            <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;Next Tool: </span><span class=\"si\">{</span><span class=\"n\">action</span><span class=\"o\">.</span><span class=\"n\">tool</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">extra</span><span class=\"o\">=</span><span class=\"p\">{</span>\n                    <span class=\"n\">AgentLogging</span><span class=\"o\">.</span><span class=\"n\">TOOL_NAME</span><span class=\"p\">:</span> <span class=\"n\">action</span><span class=\"o\">.</span><span class=\"n\">tool</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span>\n                    <span class=\"n\">AgentLogging</span><span class=\"o\">.</span><span class=\"n\">IS_MESSAGE</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n                    <span class=\"n\">AgentLogging</span><span class=\"o\">.</span><span class=\"n\">MESSAGE_TYPE</span><span class=\"p\">:</span> <span class=\"n\">AgentLogging</span><span class=\"o\">.</span><span class=\"n\">ACTION</span><span class=\"p\">,</span>\n                    <span class=\"n\">AgentLogging</span><span class=\"o\">.</span><span class=\"n\">MESSAGE_AUTHOR</span><span class=\"p\">:</span> <span class=\"n\">AgentLogging</span><span class=\"o\">.</span><span class=\"n\">AGENT</span><span class=\"p\">,</span>\n                <span class=\"p\">},</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">completed_steps</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">action</span><span class=\"p\">)</span>\n        <span class=\"n\">output_text_length</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n        <span class=\"k\">if</span> <span class=\"n\">action</span><span class=\"o\">.</span><span class=\"n\">output</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">output_text_length</span> <span class=\"o\">=</span> <span class=\"nb\">sum</span><span class=\"p\">([</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">text</span> <span class=\"ow\">or</span> <span class=\"s2\">&quot;&quot;</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">block</span> <span class=\"ow\">in</span> <span class=\"n\">action</span><span class=\"o\">.</span><span class=\"n\">output</span><span class=\"p\">])</span>\n        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;Completed agent run. Result: </span><span class=\"si\">{</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">action</span><span class=\"o\">.</span><span class=\"n\">output</span><span class=\"w\"> </span><span class=\"ow\">or</span><span class=\"w\"> </span><span class=\"p\">[])</span><span class=\"si\">}</span><span class=\"s2\"> blocks. </span><span class=\"si\">{</span><span class=\"n\">output_text_length</span><span class=\"si\">}</span><span class=\"s2\"> total text length. Emitting on </span><span class=\"si\">{</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">emit_funcs</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\"> functions.&quot;</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">func</span> <span class=\"ow\">in</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">emit_funcs</span><span class=\"p\">:</span>\n            <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Emitting via function: </span><span class=\"si\">{</span><span class=\"n\">func</span><span class=\"o\">.</span><span class=\"vm\">__name__</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n            <span class=\"n\">func</span><span class=\"p\">(</span><span class=\"n\">action</span><span class=\"o\">.</span><span class=\"n\">output</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">metadata</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"AgentService.prompt\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.agents.service/#steamship.agents.service.agent_service.AgentService.prompt\">[docs]</a>    <span class=\"nd\">@post</span><span class=\"p\">(</span><span class=\"s2\">&quot;prompt&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">prompt</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">prompt</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">context_id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Block</span><span class=\"p\">]:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Run an agent with the provided text as the input.&quot;&quot;&quot;</span>\n        <span class=\"n\">prompt</span> <span class=\"o\">=</span> <span class=\"n\">prompt</span> <span class=\"ow\">or</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;question&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># AgentContexts serve to allow the AgentService to run agents</span>\n        <span class=\"c1\"># with appropriate information about the desired tasking.</span>\n        <span class=\"k\">if</span> <span class=\"n\">context_id</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">context_id</span> <span class=\"o\">=</span> <span class=\"n\">uuid</span><span class=\"o\">.</span><span class=\"n\">uuid4</span><span class=\"p\">()</span>\n            <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">warning</span><span class=\"p\">(</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;No context_id was provided; generated </span><span class=\"si\">{</span><span class=\"n\">context_id</span><span class=\"si\">}</span><span class=\"s2\">. This likely means no conversational history will be present.&quot;</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"n\">AgentContext</span><span class=\"o\">.</span><span class=\"n\">get_or_create</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">context_keys</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;id&quot;</span><span class=\"p\">:</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">context_id</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">})</span>\n        <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">chat_history</span><span class=\"o\">.</span><span class=\"n\">append_user_message</span><span class=\"p\">(</span><span class=\"n\">prompt</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Add a default LLM</span>\n        <span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"n\">with_llm</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"o\">=</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">llm</span><span class=\"o\">=</span><span class=\"n\">OpenAI</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">model_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;gpt-4-0613&quot;</span><span class=\"p\">))</span>\n\n        <span class=\"c1\"># AgentServices provide an emit function hook to access the output of running</span>\n        <span class=\"c1\"># agents and tools. The emit functions fire at after the supplied agent emits</span>\n        <span class=\"c1\"># a &quot;FinishAction&quot;.</span>\n        <span class=\"c1\">#</span>\n        <span class=\"c1\"># Here, we show one way of accessing the output in a synchronous fashion. An</span>\n        <span class=\"c1\"># alternative way would be to access the final Action in the `context.completed_steps`</span>\n        <span class=\"c1\"># after the call to `run_agent()`.</span>\n        <span class=\"n\">output_blocks</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">sync_emit</span><span class=\"p\">(</span><span class=\"n\">blocks</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Block</span><span class=\"p\">],</span> <span class=\"n\">meta</span><span class=\"p\">:</span> <span class=\"n\">Metadata</span><span class=\"p\">):</span>\n            <span class=\"k\">nonlocal</span> <span class=\"n\">output_blocks</span>\n            <span class=\"n\">output_blocks</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">blocks</span><span class=\"p\">)</span>\n\n        <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">emit_funcs</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">sync_emit</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Get the agent</span>\n        <span class=\"n\">agent</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Agent</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n        <span class=\"k\">if</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">&quot;agent&quot;</span><span class=\"p\">):</span>\n            <span class=\"n\">agent</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">agent</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">hasattr</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">&quot;_agent&quot;</span><span class=\"p\">):</span>\n            <span class=\"n\">agent</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_agent</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">agent</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">SteamshipError</span><span class=\"p\">(</span>\n                <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"s2\">&quot;No Agent object found in the Agent Service. &quot;</span>\n                <span class=\"s2\">&quot;Please name it either self.agent or self._agent.&quot;</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">run_agent</span><span class=\"p\">(</span><span class=\"n\">agent</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Now append the output blocks to the chat history</span>\n        <span class=\"c1\"># TODO: It seems like we&#39;ve been going from block -&gt; not block -&gt; block here. Opportunity to optimize.</span>\n        <span class=\"k\">for</span> <span class=\"n\">output_block</span> <span class=\"ow\">in</span> <span class=\"n\">output_blocks</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Need to make the output blocks public here so that they can be copied to the chat history.</span>\n            <span class=\"c1\"># They generally need to be public anyway for the REPL to be able to show a clickable link.</span>\n            <span class=\"n\">output_block</span><span class=\"o\">.</span><span class=\"n\">set_public_data</span><span class=\"p\">(</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n            <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">chat_history</span><span class=\"o\">.</span><span class=\"n\">append_assistant_message</span><span class=\"p\">(</span>\n                <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"n\">output_block</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">,</span>\n                <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"n\">output_block</span><span class=\"o\">.</span><span class=\"n\">tags</span><span class=\"p\">,</span>\n                <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"n\">output_block</span><span class=\"o\">.</span><span class=\"n\">raw_data_url</span> <span class=\"ow\">or</span> <span class=\"n\">output_block</span><span class=\"o\">.</span><span class=\"n\">url</span> <span class=\"ow\">or</span> <span class=\"n\">output_block</span><span class=\"o\">.</span><span class=\"n\">content_url</span><span class=\"p\">,</span>\n                <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"n\">output_block</span><span class=\"o\">.</span><span class=\"n\">mime_type</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"c1\"># Return the response as a set of multi-modal blocks.</span>\n        <span class=\"k\">return</span> <span class=\"n\">output_blocks</span></div></div>\n</pre></div>", "current_page_name": "_modules/steamship/agents/service/agent_service", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "furo_version": "2023.03.27", "furo_navigation_tree": "", "furo_hide_toc": true, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#272822", "foreground": "#f8f8f2"}}}