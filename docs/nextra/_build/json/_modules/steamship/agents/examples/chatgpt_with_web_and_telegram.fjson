{"parents": [{"link": "../../../../", "title": "Module code"}], "title": "steamship.agents.examples.chatgpt_with_web_and_telegram", "body": "<h1>Source code for steamship.agents.examples.chatgpt_with_web_and_telegram</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"sd\">&quot;&quot;&quot;Minimum viable AgentService implementation with Web Widget &amp; Telegram support.</span>\n\n<span class=\"sd\">This will result in an agent that acts like ChatGPT and can be communicated with on the Steamship website</span>\n<span class=\"sd\">as well as over Telegram.</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Type</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pydantic</span> <span class=\"kn\">import</span> <span class=\"n\">Field</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.agents.examples.telegram_bot</span> <span class=\"kn\">import</span> <span class=\"n\">TelegramBot</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.agents.functional</span> <span class=\"kn\">import</span> <span class=\"n\">FunctionsBasedAgent</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.agents.llms.openai</span> <span class=\"kn\">import</span> <span class=\"n\">ChatOpenAI</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.agents.mixins.transports.steamship_widget</span> <span class=\"kn\">import</span> <span class=\"n\">SteamshipWidgetTransport</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.agents.mixins.transports.telegram</span> <span class=\"kn\">import</span> <span class=\"n\">TelegramTransport</span><span class=\"p\">,</span> <span class=\"n\">TelegramTransportConfig</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.agents.service.agent_service</span> <span class=\"kn\">import</span> <span class=\"n\">AgentService</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.invocable</span> <span class=\"kn\">import</span> <span class=\"n\">Config</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.utils.repl</span> <span class=\"kn\">import</span> <span class=\"n\">AgentREPL</span>\n\n\n<div class=\"viewcode-block\" id=\"MyAssistant\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.agents.examples/#steamship.agents.examples.chatgpt_with_web_and_telegram.MyAssistant\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">MyAssistant</span><span class=\"p\">(</span><span class=\"n\">AgentService</span><span class=\"p\">):</span>\n<div class=\"viewcode-block\" id=\"MyAssistant.MyAssistantConfig\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.agents.examples/#steamship.agents.examples.chatgpt_with_web_and_telegram.MyAssistant.MyAssistantConfig\">[docs]</a>    <span class=\"k\">class</span> <span class=\"nc\">MyAssistantConfig</span><span class=\"p\">(</span><span class=\"n\">Config</span><span class=\"p\">):</span>\n        <span class=\"n\">bot_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">&quot;The secret token for your Telegram bot&quot;</span><span class=\"p\">)</span></div>\n\n    <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">MyAssistantConfig</span>\n\n<div class=\"viewcode-block\" id=\"MyAssistant.config_cls\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.agents.examples/#steamship.agents.examples.chatgpt_with_web_and_telegram.MyAssistant.config_cls\">[docs]</a>    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">config_cls</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">Config</span><span class=\"p\">]:</span>\n        <span class=\"k\">return</span> <span class=\"n\">TelegramBot</span><span class=\"o\">.</span><span class=\"n\">TelegramBotConfig</span></div>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_agent</span> <span class=\"o\">=</span> <span class=\"n\">FunctionsBasedAgent</span><span class=\"p\">(</span><span class=\"n\">llm</span><span class=\"o\">=</span><span class=\"n\">ChatOpenAI</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">),</span> <span class=\"n\">tools</span><span class=\"o\">=</span><span class=\"p\">[])</span>\n\n        <span class=\"c1\"># This Mixin provides HTTP endpoints that connects this agent to a web client</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">add_mixin</span><span class=\"p\">(</span>\n            <span class=\"n\">SteamshipWidgetTransport</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">agent_service</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">agent</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_agent</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n        <span class=\"c1\"># This Mixin provides support for Telegram bots</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">add_mixin</span><span class=\"p\">(</span>\n            <span class=\"n\">TelegramTransport</span><span class=\"p\">(</span>\n                <span class=\"n\">client</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">,</span>\n                <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">TelegramTransportConfig</span><span class=\"p\">(</span><span class=\"n\">bot_token</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">bot_token</span><span class=\"p\">),</span>\n                <span class=\"n\">agent_service</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"p\">,</span>\n                <span class=\"n\">agent</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_agent</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n        <span class=\"p\">)</span></div>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;__main__&quot;</span><span class=\"p\">:</span>\n    <span class=\"n\">AgentREPL</span><span class=\"p\">(</span>\n        <span class=\"n\">MyAssistant</span><span class=\"p\">,</span>\n        <span class=\"n\">agent_package_config</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;botToken&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;not-a-real-token-for-local-testing&quot;</span><span class=\"p\">},</span>\n    <span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre></div>", "current_page_name": "_modules/steamship/agents/examples/chatgpt_with_web_and_telegram", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "furo_version": "2023.03.27", "furo_navigation_tree": "", "furo_hide_toc": true, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#272822", "foreground": "#f8f8f2"}}}