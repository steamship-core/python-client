{"parents": [{"link": "../../../../../", "title": "Module code"}], "title": "steamship.agents.tools.text_generation.json_object_generator", "body": "<h1>Source code for steamship.agents.tools.text_generation.json_object_generator</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">json</span>\n<span class=\"kn\">import</span> <span class=\"nn\">random</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">Union</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">steamship</span> <span class=\"kn\">import</span> <span class=\"n\">Block</span><span class=\"p\">,</span> <span class=\"n\">Steamship</span><span class=\"p\">,</span> <span class=\"n\">SteamshipError</span><span class=\"p\">,</span> <span class=\"n\">Task</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.agents.llms</span> <span class=\"kn\">import</span> <span class=\"n\">OpenAI</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.agents.schema</span> <span class=\"kn\">import</span> <span class=\"n\">AgentContext</span><span class=\"p\">,</span> <span class=\"n\">Tool</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.agents.utils</span> <span class=\"kn\">import</span> <span class=\"n\">get_llm</span><span class=\"p\">,</span> <span class=\"n\">with_llm</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.utils.repl</span> <span class=\"kn\">import</span> <span class=\"n\">ToolREPL</span>\n\n<span class=\"n\">DEFAULT_PROMPT</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;&quot;INSTRUCTIONS:</span>\n<span class=\"s2\">Generate a JSON object describing </span><span class=\"si\">{table_description}</span><span class=\"s2\">.</span>\n<span class=\"s2\">Always return a non-empty value for every field in the object.</span>\n\n<span class=\"s2\">FIELDS DESIRED:</span>\n<span class=\"si\">{fields_desired}</span>\n\n<span class=\"s2\">EXAMPLE OBJECTS:</span>\n<span class=\"si\">{example_objects}</span>\n\n<span class=\"s2\">NEW OBJECT:</span>\n<span class=\"si\">{new_object_prefix}</span>\n<span class=\"s2\">&quot;&quot;&quot;</span>\n\n<span class=\"n\">DEFAULT_PLURAL_OBJECT_DESCRIPTION</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;employees of a company&quot;</span>\n<span class=\"n\">DEFAULT_OBJECT_KEYS</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Age&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Gender&quot;</span><span class=\"p\">]</span>\n<span class=\"n\">DEFAULT_OBJECT_EXAMPLES</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">[</span><span class=\"s2\">&quot;Bob&quot;</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Male&quot;</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"s2\">&quot;Susan&quot;</span><span class=\"p\">,</span> <span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Female&quot;</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"s2\">&quot;Zhenzhong&quot;</span><span class=\"p\">,</span> <span class=\"mi\">40</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Male&quot;</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"s2\">&quot;Luis&quot;</span><span class=\"p\">,</span> <span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Male&quot;</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"s2\">&quot;Roberta&quot;</span><span class=\"p\">,</span> <span class=\"mi\">35</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Female&quot;</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"s2\">&quot;Sofia&quot;</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Female&quot;</span><span class=\"p\">],</span>\n<span class=\"p\">]</span>\n<span class=\"n\">DEFAULT_NEW_ROW_PREFIX_FIELDS</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n\n<div class=\"viewcode-block\" id=\"JsonObjectGeneratorTool\"><a class=\"viewcode-back\" href=\"../../../../../../api/steamship.agents.tools.text_generation/#steamship.agents.tools.text_generation.json_object_generator.JsonObjectGeneratorTool\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">JsonObjectGeneratorTool</span><span class=\"p\">(</span><span class=\"n\">Tool</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Example tool to illustrate generating a new JSON object provided a set of examples.</span>\n\n<span class=\"sd\">    This is useful as an example of how to generate a new structured object:</span>\n\n<span class=\"sd\">    - A Person (e.g. name, gender, age)</span>\n<span class=\"sd\">    - A Proposed Podcast Episode (e.g. title, description, tags)</span>\n\n<span class=\"sd\">    The tool takes no input at runtime: it&#39;s a true generator parameterized only at initializtion time.</span>\n\n<span class=\"sd\">    The tool&#39;s parameterization is somewhat CSV-like in construction.</span>\n\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"n\">rewrite_prompt</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">DEFAULT_PROMPT</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;The prompt used to generate a new JSON object.&quot;&quot;&quot;</span>\n\n    <span class=\"n\">plural_object_description</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">DEFAULT_PLURAL_OBJECT_DESCRIPTION</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Plural description of the object. E.g. &#39;employees of a company&#39; or &#39;people&#39; or &#39;podcast episodes&#39;&quot;&quot;&quot;</span>\n\n    <span class=\"n\">object_keys</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">DEFAULT_OBJECT_KEYS</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;The keys the JSON should have.&quot;&quot;&quot;</span>\n\n    <span class=\"n\">example_rows</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"n\">DEFAULT_OBJECT_EXAMPLES</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;List of example object values, aligned to the `object_keys` parameter.&quot;&quot;&quot;</span>\n\n    <span class=\"n\">new_row_prefix_fields</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">DEFAULT_NEW_ROW_PREFIX_FIELDS</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Any fields that should be hard-coded for the new row. These must be grouped as the first set of fields.&quot;&quot;&quot;</span>\n\n    <span class=\"n\">shuffle_example_rows</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Whether randomly shuffle example rows to induce a bit of variety even with low LLM temperature.&quot;&quot;&quot;</span>\n\n    <span class=\"n\">validate_output_as_json</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Whether to validate that the output is actually JSON.&quot;&quot;&quot;</span>\n\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;JsonObjectTool&quot;</span>\n    <span class=\"n\">human_description</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Generates a new JSON object.&quot;</span>\n    <span class=\"n\">agent_description</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;(set at initialization time)&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">agent_description</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;Used to generate an instance of the </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">plural_object_description</span><span class=\"si\">}</span><span class=\"s2\"> table. &quot;</span>\n            <span class=\"s2\">&quot;Input: Anything. &quot;</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;Output A tab-separated row describing a new instance of the </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">plural_object_description</span><span class=\"si\">}</span><span class=\"s2\"> table.&quot;</span>\n        <span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"JsonObjectGeneratorTool.kv_clause\"><a class=\"viewcode-back\" href=\"../../../../../../api/steamship.agents.tools.text_generation/#steamship.agents.tools.text_generation.json_object_generator.JsonObjectGeneratorTool.kv_clause\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">kv_clause</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Return an escaped, JSON style key-value clause `&quot;key&quot;: &quot;value&quot;`&quot;&quot;&quot;</span>\n        <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">&#39;&quot;&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\\\</span><span class=\"s1\">&quot;&#39;</span><span class=\"p\">)</span>\n        <span class=\"n\">clause</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s1\">&#39;&quot;</span><span class=\"si\">{</span><span class=\"n\">key</span><span class=\"si\">}</span><span class=\"s1\">&quot;: &quot;</span><span class=\"si\">{</span><span class=\"n\">value</span><span class=\"si\">}</span><span class=\"s1\">&quot;&#39;</span>\n        <span class=\"k\">return</span> <span class=\"n\">clause</span></div>\n\n<div class=\"viewcode-block\" id=\"JsonObjectGeneratorTool.object_json\"><a class=\"viewcode-back\" href=\"../../../../../../api/steamship.agents.tools.text_generation/#steamship.agents.tools.text_generation.json_object_generator.JsonObjectGeneratorTool.object_json\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">object_json</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">schema</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">values</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Render a CSV-style header row and value list into a JSON object.&quot;&quot;&quot;</span>\n        <span class=\"n\">clauses</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"k\">for</span> <span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">schema</span><span class=\"p\">,</span> <span class=\"n\">values</span><span class=\"p\">):</span>\n            <span class=\"n\">clauses</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">kv_clause</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">))</span>\n\n        <span class=\"k\">return</span> <span class=\"s2\">&quot;{&quot;</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;, &quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">clauses</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;}&quot;</span></div>\n\n<div class=\"viewcode-block\" id=\"JsonObjectGeneratorTool.run\"><a class=\"viewcode-back\" href=\"../../../../../../api/steamship.agents.tools.text_generation/#steamship.agents.tools.text_generation.json_object_generator.JsonObjectGeneratorTool.run\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">run</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">tool_input</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Block</span><span class=\"p\">],</span> <span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"n\">AgentContext</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Block</span><span class=\"p\">],</span> <span class=\"n\">Task</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]]:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Ignore tool input and generate a JSON object described by the tool&#39;s configuration.</span>\n\n<span class=\"sd\">        Inputs</span>\n<span class=\"sd\">        ------</span>\n<span class=\"sd\">        input: List[Block]</span>\n<span class=\"sd\">            A list of blocks that will be ignored.</span>\n<span class=\"sd\">        memory: AgentContext</span>\n<span class=\"sd\">            The active AgentContext.</span>\n\n<span class=\"sd\">        Output</span>\n<span class=\"sd\">        ------</span>\n<span class=\"sd\">        output: List[Blocks]</span>\n<span class=\"sd\">            A single block containing a new row of the table described by the tool&#39;s configuration.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">shuffle_example_rows</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Shuffle the example rows to get a bit of variety even with low temperature.</span>\n            <span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">shuffle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">example_rows</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Generate example JSON objects with a fixed key ordering.</span>\n        <span class=\"n\">example_objects</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">object_json</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">object_keys</span><span class=\"p\">,</span> <span class=\"n\">example_row</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">example_row</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">example_rows</span>\n        <span class=\"p\">]</span>\n        <span class=\"n\">example_objects_str</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">example_objects</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Generate the new row line. At a minimum it&#39;s the `{` character, but it may also hard-code a number of</span>\n        <span class=\"c1\"># fields that should be affixed rather than generated.</span>\n        <span class=\"n\">new_object_prefix</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;{&quot;</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">new_row_prefix_fields</span><span class=\"p\">)):</span>\n            <span class=\"n\">clause</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">kv_clause</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">object_keys</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">new_row_prefix_fields</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span>\n            <span class=\"n\">new_object_prefix</span> <span class=\"o\">+=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">clause</span><span class=\"si\">}</span><span class=\"s2\">, &quot;</span>\n\n        <span class=\"c1\"># Compile the final generation prompt.</span>\n        <span class=\"n\">prompt</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">rewrite_prompt</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n            <span class=\"n\">table_description</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">plural_object_description</span><span class=\"p\">,</span>\n            <span class=\"n\">fields_desired</span><span class=\"o\">=</span><span class=\"s2\">&quot;, &quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">object_keys</span><span class=\"p\">),</span>\n            <span class=\"n\">example_objects</span><span class=\"o\">=</span><span class=\"n\">example_objects_str</span><span class=\"p\">,</span>\n            <span class=\"n\">new_object_prefix</span><span class=\"o\">=</span><span class=\"n\">new_object_prefix</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"c1\"># Perform the generation</span>\n        <span class=\"n\">llm</span> <span class=\"o\">=</span> <span class=\"n\">get_llm</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"n\">OpenAI</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"o\">=</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">))</span>\n        <span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">llm</span><span class=\"o\">.</span><span class=\"n\">complete</span><span class=\"p\">(</span><span class=\"n\">prompt</span><span class=\"p\">,</span> <span class=\"n\">stop</span><span class=\"o\">=</span><span class=\"s2\">&quot;}&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Make sure we only generated one block; anything else violates the assumptions of this code.</span>\n        <span class=\"n\">blocks_emitted</span> <span class=\"o\">=</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">blocks_emitted</span> <span class=\"o\">!=</span> <span class=\"mi\">1</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">SteamshipError</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">blocks_emitted</span><span class=\"si\">}</span><span class=\"s2\"> blocks emitted; expecting 1.&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># The output JSON is generation prefix row, plus the generated content, plus a final } character</span>\n        <span class=\"c1\"># The reason we have to add the final &quot;}&quot; character is because we used it for the stop character</span>\n        <span class=\"n\">full_json</span> <span class=\"o\">=</span> <span class=\"n\">new_object_prefix</span> <span class=\"o\">+</span> <span class=\"n\">res</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">text</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;}&quot;</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">validate_output_as_json</span><span class=\"p\">:</span>\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">full_json</span><span class=\"p\">)</span>\n            <span class=\"k\">except</span> <span class=\"ne\">BaseException</span><span class=\"p\">:</span>\n                <span class=\"k\">raise</span> <span class=\"n\">SteamshipError</span><span class=\"p\">(</span>\n                    <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Attempted to generate a JSON object, but did not generate valid JSON. Result: </span><span class=\"si\">{</span><span class=\"n\">full_json</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n                <span class=\"p\">)</span>\n\n        <span class=\"n\">res</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"n\">full_json</span>\n        <span class=\"k\">return</span> <span class=\"n\">res</span></div></div>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;__main__&quot;</span><span class=\"p\">:</span>\n    <span class=\"k\">with</span> <span class=\"n\">Steamship</span><span class=\"o\">.</span><span class=\"n\">temporary_workspace</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">client</span><span class=\"p\">:</span>\n        <span class=\"n\">ToolREPL</span><span class=\"p\">(</span><span class=\"n\">JsonObjectGeneratorTool</span><span class=\"p\">())</span><span class=\"o\">.</span><span class=\"n\">run_with_client</span><span class=\"p\">(</span>\n            <span class=\"n\">client</span><span class=\"o\">=</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"o\">=</span><span class=\"n\">with_llm</span><span class=\"p\">(</span><span class=\"n\">llm</span><span class=\"o\">=</span><span class=\"n\">OpenAI</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"o\">=</span><span class=\"n\">client</span><span class=\"p\">))</span>\n        <span class=\"p\">)</span>\n</pre></div>", "current_page_name": "_modules/steamship/agents/tools/text_generation/json_object_generator", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "furo_version": "2023.03.27", "furo_navigation_tree": "", "furo_hide_toc": true, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#272822", "foreground": "#f8f8f2"}}}