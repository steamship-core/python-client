{"parents": [{"link": "../../../../", "title": "Module code"}], "title": "steamship.agents.tools.base_tools", "body": "<h1>Source code for steamship.agents.tools.base_tools</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">json</span>\n<span class=\"kn\">from</span> <span class=\"nn\">abc</span> <span class=\"kn\">import</span> <span class=\"n\">abstractmethod</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">,</span> <span class=\"n\">Union</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">requests</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">steamship</span> <span class=\"kn\">import</span> <span class=\"n\">Block</span><span class=\"p\">,</span> <span class=\"n\">File</span><span class=\"p\">,</span> <span class=\"n\">MimeTypes</span><span class=\"p\">,</span> <span class=\"n\">Task</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.agents.schema</span> <span class=\"kn\">import</span> <span class=\"n\">AgentContext</span><span class=\"p\">,</span> <span class=\"n\">Tool</span>\n\n\n<div class=\"viewcode-block\" id=\"GeneratorTool\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.agents.tools/#steamship.agents.tools.base_tools.GeneratorTool\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">GeneratorTool</span><span class=\"p\">(</span><span class=\"n\">Tool</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    A base class for tools that wrap Steamship Generator plugins. Subclass this and implement</span>\n<span class=\"sd\">    the `accept_output_block` method.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"n\">generator_plugin_handle</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n    <span class=\"n\">generator_plugin_instance_handle</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">generator_plugin_config</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n    <span class=\"n\">merge_blocks</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n    <span class=\"n\">make_output_public</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n<div class=\"viewcode-block\" id=\"GeneratorTool.accept_output_block\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.agents.tools/#steamship.agents.tools.base_tools.GeneratorTool.accept_output_block\">[docs]</a>    <span class=\"nd\">@abstractmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">accept_output_block</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">block</span><span class=\"p\">:</span> <span class=\"n\">Block</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bool</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">NotImplementedError</span><span class=\"p\">()</span></div>\n\n<div class=\"viewcode-block\" id=\"GeneratorTool.run\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.agents.tools/#steamship.agents.tools.base_tools.GeneratorTool.run\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">run</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">tool_input</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Block</span><span class=\"p\">],</span> <span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"n\">AgentContext</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Block</span><span class=\"p\">],</span> <span class=\"n\">Task</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]]:</span>\n        <span class=\"n\">generator</span> <span class=\"o\">=</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">use_plugin</span><span class=\"p\">(</span>\n            <span class=\"n\">plugin_handle</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">generator_plugin_handle</span><span class=\"p\">,</span>\n            <span class=\"n\">instance_handle</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">generator_plugin_instance_handle</span><span class=\"p\">,</span>\n            <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">generator_plugin_config</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"n\">tasks</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">merge_blocks</span><span class=\"p\">:</span>\n            <span class=\"n\">block</span> <span class=\"o\">=</span> <span class=\"n\">tool_input</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"k\">for</span> <span class=\"n\">extra_block</span> <span class=\"ow\">in</span> <span class=\"n\">tool_input</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:]:</span>\n                <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"si\">}</span><span class=\"se\">\\n\\n</span><span class=\"si\">{</span><span class=\"n\">extra_block</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n            <span class=\"n\">tool_input</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">block</span><span class=\"p\">]</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">block</span> <span class=\"ow\">in</span> <span class=\"n\">tool_input</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">block</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n                <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">block</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">is_text</span><span class=\"p\">():</span>\n                <span class=\"k\">continue</span>\n\n            <span class=\"n\">prompt</span> <span class=\"o\">=</span> <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">text</span>\n            <span class=\"n\">task</span> <span class=\"o\">=</span> <span class=\"n\">generator</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span>\n                <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"n\">prompt</span><span class=\"p\">,</span> <span class=\"n\">append_output_to_file</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">make_output_public</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">make_output_public</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">tasks</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">task</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># TODO / REMOVE Synchronous execution is a temporary simplification while we merge code.</span>\n        <span class=\"n\">output_blocks</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"c1\"># NB: In an async framework, we need to contend with the fact that we have some Monad-style trickery</span>\n        <span class=\"c1\"># to contend with. Namely that the below code has taken us from List[Block] as the universal type to</span>\n        <span class=\"c1\"># List[List[Block]] as the async result that we will have to process.</span>\n        <span class=\"c1\">#</span>\n        <span class=\"c1\"># It&#39;s unclear to me (ted) if this is something we leave as an exercise for implementors or build in</span>\n        <span class=\"c1\"># as universally handled.</span>\n        <span class=\"k\">for</span> <span class=\"n\">task</span> <span class=\"ow\">in</span> <span class=\"n\">tasks</span><span class=\"p\">:</span>\n            <span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">wait</span><span class=\"p\">()</span>\n            <span class=\"n\">task_blocks</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">post_process</span><span class=\"p\">(</span><span class=\"n\">task</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">block</span> <span class=\"ow\">in</span> <span class=\"n\">task_blocks</span><span class=\"p\">:</span>\n                <span class=\"n\">output_blocks</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">block</span><span class=\"p\">)</span>\n        <span class=\"c1\"># END TODO / REMOVE</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">output_blocks</span></div>\n\n<div class=\"viewcode-block\" id=\"GeneratorTool.post_process\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.agents.tools/#steamship.agents.tools.base_tools.GeneratorTool.post_process\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">post_process</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">task</span><span class=\"p\">:</span> <span class=\"n\">Task</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"n\">AgentContext</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Block</span><span class=\"p\">]:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;In this case, the Generator returns a GeneratorResponse that has a .blocks method on it&quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">output</span><span class=\"o\">.</span><span class=\"n\">blocks</span>\n        <span class=\"k\">except</span> <span class=\"ne\">BaseException</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">output</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;blocks&quot;</span><span class=\"p\">)</span></div></div>\n\n\n<div class=\"viewcode-block\" id=\"ImageGeneratorTool\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.agents.tools/#steamship.agents.tools.base_tools.ImageGeneratorTool\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">ImageGeneratorTool</span><span class=\"p\">(</span><span class=\"n\">GeneratorTool</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    A base class for tools that wrap Steamship Image Generator plugins.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"c1\"># So that generated image blocks can be accessed from chat clients</span>\n    <span class=\"n\">make_output_public</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n<div class=\"viewcode-block\" id=\"ImageGeneratorTool.accept_output_block\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.agents.tools/#steamship.agents.tools.base_tools.ImageGeneratorTool.accept_output_block\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">accept_output_block</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">block</span><span class=\"p\">:</span> <span class=\"n\">Block</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bool</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">is_image</span><span class=\"p\">()</span></div></div>\n\n\n<div class=\"viewcode-block\" id=\"VideoGeneratorTool\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.agents.tools/#steamship.agents.tools.base_tools.VideoGeneratorTool\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">VideoGeneratorTool</span><span class=\"p\">(</span><span class=\"n\">GeneratorTool</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    A base class for tools that wrap Steamship Video Generator plugins.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"c1\"># So that generated video blocks can be accessed from chat clients</span>\n    <span class=\"n\">make_output_public</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n<div class=\"viewcode-block\" id=\"VideoGeneratorTool.accept_output_block\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.agents.tools/#steamship.agents.tools.base_tools.VideoGeneratorTool.accept_output_block\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">accept_output_block</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">block</span><span class=\"p\">:</span> <span class=\"n\">Block</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bool</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">is_video</span><span class=\"p\">()</span></div></div>\n\n\n<div class=\"viewcode-block\" id=\"AudioGeneratorTool\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.agents.tools/#steamship.agents.tools.base_tools.AudioGeneratorTool\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">AudioGeneratorTool</span><span class=\"p\">(</span><span class=\"n\">GeneratorTool</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    A base class for tools that wrap Steamship Audio Generator plugins.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"c1\"># So that generated audio blocks can be accessed from chat clients</span>\n    <span class=\"n\">make_output_public</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n<div class=\"viewcode-block\" id=\"AudioGeneratorTool.accept_output_block\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.agents.tools/#steamship.agents.tools.base_tools.AudioGeneratorTool.accept_output_block\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">accept_output_block</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">block</span><span class=\"p\">:</span> <span class=\"n\">Block</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bool</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">is_audio</span><span class=\"p\">()</span></div></div>\n\n\n<div class=\"viewcode-block\" id=\"ScrapeAndBlockifyTool\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.agents.tools/#steamship.agents.tools.base_tools.ScrapeAndBlockifyTool\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">ScrapeAndBlockifyTool</span><span class=\"p\">(</span><span class=\"n\">Tool</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    A base class for tools that wrap Steamship Blockifier plugin which transforms bytes to a set of blocks.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"n\">blockifier_plugin_handle</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n    <span class=\"n\">blockifier_plugin_instance_handle</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">blockifier_plugin_config</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n<div class=\"viewcode-block\" id=\"ScrapeAndBlockifyTool.should_blockify\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.agents.tools/#steamship.agents.tools.base_tools.ScrapeAndBlockifyTool.should_blockify\">[docs]</a>    <span class=\"nd\">@abstractmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">should_blockify</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">block</span><span class=\"p\">:</span> <span class=\"n\">Block</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bool</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">NotImplementedError</span><span class=\"p\">()</span></div>\n\n<div class=\"viewcode-block\" id=\"ScrapeAndBlockifyTool.get_mime_type\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.agents.tools/#steamship.agents.tools.base_tools.ScrapeAndBlockifyTool.get_mime_type\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">get_mime_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span></div>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_scrape</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"n\">AgentContext</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">File</span><span class=\"p\">:</span>\n        <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span>\n        <span class=\"n\">file</span> <span class=\"o\">=</span> <span class=\"n\">File</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">content</span><span class=\"o\">=</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">content</span><span class=\"p\">,</span> <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_mime_type</span><span class=\"p\">())</span>\n        <span class=\"k\">return</span> <span class=\"n\">file</span>\n\n<div class=\"viewcode-block\" id=\"ScrapeAndBlockifyTool.run\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.agents.tools/#steamship.agents.tools.base_tools.ScrapeAndBlockifyTool.run\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">run</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">tool_input</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Block</span><span class=\"p\">],</span> <span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"n\">AgentContext</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Block</span><span class=\"p\">],</span> <span class=\"n\">Task</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]]:</span>\n        <span class=\"n\">tasks</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"n\">blockifier</span> <span class=\"o\">=</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">use_plugin</span><span class=\"p\">(</span>\n            <span class=\"n\">plugin_handle</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">blockifier_plugin_handle</span><span class=\"p\">,</span>\n            <span class=\"n\">instance_handle</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">blockifier_plugin_instance_handle</span><span class=\"p\">,</span>\n            <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">blockifier_plugin_config</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">input_block</span> <span class=\"ow\">in</span> <span class=\"n\">tool_input</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">input_block</span><span class=\"o\">.</span><span class=\"n\">is_text</span><span class=\"p\">():</span>\n                <span class=\"k\">continue</span>\n\n            <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">input_block</span><span class=\"o\">.</span><span class=\"n\">text</span>\n            <span class=\"n\">file</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_scrape</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">)</span>\n            <span class=\"n\">task</span> <span class=\"o\">=</span> <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">blockify</span><span class=\"p\">(</span><span class=\"n\">blockifier</span><span class=\"o\">.</span><span class=\"n\">handle</span><span class=\"p\">)</span>\n            <span class=\"n\">tasks</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">task</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># TODO / REMOVE Synchronous execution is a temporary simplification while we merge code.</span>\n        <span class=\"n\">output_blocks</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"c1\"># NB: In an async framework, we need to contend with the fact that we have some Monad-style trickery</span>\n        <span class=\"c1\"># to contend with. Namely that the below code has taken us from List[Block] as the universal type to</span>\n        <span class=\"c1\"># List[List[Block]] as the async result that we will have to process.</span>\n        <span class=\"c1\">#</span>\n        <span class=\"c1\"># It&#39;s unclear to me (ted) if this is something we leave as an exercise for implementors or build in</span>\n        <span class=\"c1\"># as universally handled.</span>\n        <span class=\"k\">for</span> <span class=\"n\">task</span> <span class=\"ow\">in</span> <span class=\"n\">tasks</span><span class=\"p\">:</span>\n            <span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">wait</span><span class=\"p\">()</span>\n            <span class=\"n\">task_blocks</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">post_process</span><span class=\"p\">(</span><span class=\"n\">task</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">block</span> <span class=\"ow\">in</span> <span class=\"n\">task_blocks</span><span class=\"p\">:</span>\n                <span class=\"n\">output_blocks</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">block</span><span class=\"p\">)</span>\n        <span class=\"c1\"># END TODO / REMOVE</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">output_blocks</span></div>\n\n<div class=\"viewcode-block\" id=\"ScrapeAndBlockifyTool.post_process\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.agents.tools/#steamship.agents.tools.base_tools.ScrapeAndBlockifyTool.post_process\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">post_process</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">task</span><span class=\"p\">:</span> <span class=\"n\">Task</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"n\">AgentContext</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Block</span><span class=\"p\">]:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;In this case, the Blockifier returns a BlockAndTagResponse that has a .file.blocks method on it&quot;&quot;&quot;</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">output</span><span class=\"o\">.</span><span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">blocks</span>\n        <span class=\"k\">except</span> <span class=\"ne\">BaseException</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">output</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;file&quot;</span><span class=\"p\">,</span> <span class=\"p\">{})</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;blocks&quot;</span><span class=\"p\">)</span></div></div>\n\n\n<div class=\"viewcode-block\" id=\"ImageBlockifierTool\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.agents.tools/#steamship.agents.tools.base_tools.ImageBlockifierTool\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">ImageBlockifierTool</span><span class=\"p\">(</span><span class=\"n\">ScrapeAndBlockifyTool</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    A base class for tools that wrap Steamship Image Blockifier plugins.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n<div class=\"viewcode-block\" id=\"ImageBlockifierTool.get_mime_type\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.agents.tools/#steamship.agents.tools.base_tools.ImageBlockifierTool.get_mime_type\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">get_mime_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">MimeTypes</span><span class=\"o\">.</span><span class=\"n\">PNG</span></div>\n\n<div class=\"viewcode-block\" id=\"ImageBlockifierTool.should_blockify\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.agents.tools/#steamship.agents.tools.base_tools.ImageBlockifierTool.should_blockify\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">should_blockify</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">block</span><span class=\"p\">:</span> <span class=\"n\">Block</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bool</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">is_image</span><span class=\"p\">()</span></div></div>\n\n\n<div class=\"viewcode-block\" id=\"AudioBlockifierTool\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.agents.tools/#steamship.agents.tools.base_tools.AudioBlockifierTool\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">AudioBlockifierTool</span><span class=\"p\">(</span><span class=\"n\">ScrapeAndBlockifyTool</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    A base class for tools that wrap Steamship Audio Blockifier plugins.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n<div class=\"viewcode-block\" id=\"AudioBlockifierTool.get_mime_type\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.agents.tools/#steamship.agents.tools.base_tools.AudioBlockifierTool.get_mime_type\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">get_mime_type</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">MimeTypes</span><span class=\"o\">.</span><span class=\"n\">MP3</span></div>\n\n<div class=\"viewcode-block\" id=\"AudioBlockifierTool.should_blockify\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.agents.tools/#steamship.agents.tools.base_tools.AudioBlockifierTool.should_blockify\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">should_blockify</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">block</span><span class=\"p\">:</span> <span class=\"n\">Block</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">bool</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">is_audio</span><span class=\"p\">()</span></div></div>\n</pre></div>", "current_page_name": "_modules/steamship/agents/tools/base_tools", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "furo_version": "2023.03.27", "furo_navigation_tree": "", "furo_hide_toc": true, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#272822", "foreground": "#f8f8f2"}}}