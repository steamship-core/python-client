{"parents": [{"link": "../../../../../", "title": "Module code"}], "title": "steamship.agents.tools.video_generation.did_video_generator_tool", "body": "<h1>Source code for steamship.agents.tools.video_generation.did_video_generator_tool</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"sd\">&quot;&quot;&quot;Tool for generating images.&quot;&quot;&quot;</span>\n<span class=\"kn\">from</span> <span class=\"nn\">enum</span> <span class=\"kn\">import</span> <span class=\"n\">Enum</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">,</span> <span class=\"n\">Union</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pydantic</span> <span class=\"kn\">import</span> <span class=\"n\">BaseModel</span><span class=\"p\">,</span> <span class=\"n\">Field</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">steamship</span> <span class=\"kn\">import</span> <span class=\"n\">Block</span><span class=\"p\">,</span> <span class=\"n\">Steamship</span><span class=\"p\">,</span> <span class=\"n\">Task</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.agents.llms</span> <span class=\"kn\">import</span> <span class=\"n\">OpenAI</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.agents.schema</span> <span class=\"kn\">import</span> <span class=\"n\">AgentContext</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.agents.tools</span> <span class=\"kn\">import</span> <span class=\"n\">VideoGeneratorTool</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.agents.utils</span> <span class=\"kn\">import</span> <span class=\"n\">with_llm</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.utils.repl</span> <span class=\"kn\">import</span> <span class=\"n\">ToolREPL</span>\n\n<span class=\"n\">DEFAULT_SOURCE_URL</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;https://www.steamship.com/images/agents/man-in-suit-midjourney.png&quot;</span>\n\n\n<div class=\"viewcode-block\" id=\"DIDVideoGeneratorTool\"><a class=\"viewcode-back\" href=\"../../../../../../api/steamship.agents.tools.video_generation/#steamship.agents.tools.video_generation.did_video_generator_tool.DIDVideoGeneratorTool\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">DIDVideoGeneratorTool</span><span class=\"p\">(</span><span class=\"n\">VideoGeneratorTool</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Tool to generate talking avatars from text using D-ID.&quot;&quot;&quot;</span>\n\n<div class=\"viewcode-block\" id=\"DIDVideoGeneratorTool.Expression\"><a class=\"viewcode-back\" href=\"../../../../../../api/steamship.agents.tools.video_generation/#steamship.agents.tools.video_generation.did_video_generator_tool.DIDVideoGeneratorTool.Expression\">[docs]</a>    <span class=\"k\">class</span> <span class=\"nc\">Expression</span><span class=\"p\">(</span><span class=\"n\">BaseModel</span><span class=\"p\">):</span>\n<div class=\"viewcode-block\" id=\"DIDVideoGeneratorTool.Expression.Expressions\"><a class=\"viewcode-back\" href=\"../../../../../../api/steamship.agents.tools.video_generation/#steamship.agents.tools.video_generation.did_video_generator_tool.DIDVideoGeneratorTool.Expression.Expressions\">[docs]</a>        <span class=\"k\">class</span> <span class=\"nc\">Expressions</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Enum</span><span class=\"p\">):</span>\n            <span class=\"n\">NEUTRAL</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;neutral&quot;</span>\n            <span class=\"n\">HAPPY</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;happy&quot;</span>\n            <span class=\"n\">SURPRISE</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;surprise&quot;</span>\n            <span class=\"n\">SERIOUS</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;serious&quot;</span></div>\n\n        <span class=\"n\">start_frame</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"n\">ge</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n        <span class=\"n\">expression</span><span class=\"p\">:</span> <span class=\"n\">Expressions</span>\n        <span class=\"n\">intensity</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"n\">Field</span><span class=\"p\">(</span><span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"n\">le</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">ge</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span></div>\n\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;DIDVideoGeneratorTool&quot;</span>\n    <span class=\"n\">human_description</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Generates an a video of you speaking a response to a user.&quot;</span>\n    <span class=\"n\">agent_description</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n        <span class=\"s2\">&quot;Used to generate a video of you from text. Use if the user has asked for a video response.  &quot;</span>\n        <span class=\"s2\">&quot;The input is the text that you want to say. &quot;</span>\n        <span class=\"s2\">&quot;The output is the video of you saying it.&quot;</span>\n    <span class=\"p\">)</span>\n    <span class=\"n\">generator_plugin_handle</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;did-video-generator&quot;</span>\n    <span class=\"n\">generator_plugin_config</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n\n    <span class=\"n\">source_url</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">DEFAULT_SOURCE_URL</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;The URL of the source image to be animated.&quot;&quot;&quot;</span>\n\n    <span class=\"n\">stitch</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n    <span class=\"n\">voice_provider</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;microsoft&quot;</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;The voice provider. Must be either `microsoft` or `amazon`.&quot;&quot;&quot;</span>\n\n    <span class=\"n\">voice_id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;en-US-GuyNeural&quot;</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;The voice ID. E.g. `en-US-AshleyNeural` for Microsoft or `Amy` for Amazon.&quot;&quot;&quot;</span>\n\n    <span class=\"n\">voice_style</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Default&quot;</span>\n\n    <span class=\"n\">driver_url</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;The URL of the D-ID driver video. If not provided a driver video will be selected automatically.&quot;&quot;&quot;</span>\n\n    <span class=\"n\">expressions</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Expression</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;A list of expressions to apply.&quot;&quot;&quot;</span>\n\n    <span class=\"n\">transition_frames</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">20</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;How many frames to use for expression transition.&quot;&quot;&quot;</span>\n\n<div class=\"viewcode-block\" id=\"DIDVideoGeneratorTool.run\"><a class=\"viewcode-back\" href=\"../../../../../../api/steamship.agents.tools.video_generation/#steamship.agents.tools.video_generation.did_video_generator_tool.DIDVideoGeneratorTool.run\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">run</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">tool_input</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Block</span><span class=\"p\">],</span> <span class=\"n\">context</span><span class=\"p\">:</span> <span class=\"n\">AgentContext</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Block</span><span class=\"p\">],</span> <span class=\"n\">Task</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">]]:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Run the tool. Copied from base class to enable generate-time config overrides.&quot;&quot;&quot;</span>\n\n        <span class=\"n\">generator</span> <span class=\"o\">=</span> <span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">use_plugin</span><span class=\"p\">(</span>\n            <span class=\"n\">plugin_handle</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">generator_plugin_handle</span><span class=\"p\">,</span>\n            <span class=\"n\">instance_handle</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">generator_plugin_instance_handle</span><span class=\"p\">,</span>\n            <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">generator_plugin_config</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"n\">tasks</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">merge_blocks</span><span class=\"p\">:</span>\n            <span class=\"n\">block</span> <span class=\"o\">=</span> <span class=\"n\">tool_input</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n            <span class=\"k\">for</span> <span class=\"n\">extra_block</span> <span class=\"ow\">in</span> <span class=\"n\">tool_input</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">:]:</span>\n                <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"si\">}</span><span class=\"se\">\\n\\n</span><span class=\"si\">{</span><span class=\"n\">extra_block</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n            <span class=\"n\">tool_input</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">block</span><span class=\"p\">]</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">block</span> <span class=\"ow\">in</span> <span class=\"n\">tool_input</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">is_text</span><span class=\"p\">():</span>\n                <span class=\"k\">continue</span>\n\n            <span class=\"n\">prompt</span> <span class=\"o\">=</span> <span class=\"n\">block</span><span class=\"o\">.</span><span class=\"n\">text</span>\n            <span class=\"n\">task</span> <span class=\"o\">=</span> <span class=\"n\">generator</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">(</span>\n                <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"n\">prompt</span><span class=\"p\">,</span>\n                <span class=\"n\">make_output_public</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"n\">append_output_to_file</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"n\">options</span><span class=\"o\">=</span><span class=\"p\">{</span>\n                    <span class=\"s2\">&quot;source_url&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">source_url</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;stitch&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">stitch</span><span class=\"p\">,</span>\n                    <span class=\"s2\">&quot;provider&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                        <span class=\"s2\">&quot;type&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">voice_provider</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;voice_id&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">voice_id</span><span class=\"p\">,</span>\n                        <span class=\"s2\">&quot;voice_config&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">&quot;style&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">voice_style</span><span class=\"p\">},</span>\n                        <span class=\"s2\">&quot;expressions&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">expressions</span><span class=\"p\">,</span>\n                    <span class=\"p\">},</span>\n                    <span class=\"s2\">&quot;transition_frames&quot;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">transition_frames</span><span class=\"p\">,</span>\n                <span class=\"p\">},</span>\n            <span class=\"p\">)</span>\n            <span class=\"n\">tasks</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">task</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># TODO / REMOVE Synchronous execution is a temporary simplification while we merge code.</span>\n        <span class=\"n\">output_blocks</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n        <span class=\"c1\"># NB: In an async framework, we need to contend with the fact that we have some Monad-style trickery</span>\n        <span class=\"c1\"># to contend with. Namely that the below code has taken us from List[Block] as the universal type to</span>\n        <span class=\"c1\"># List[List[Block]] as the async result that we will have to process.</span>\n        <span class=\"c1\">#</span>\n        <span class=\"c1\"># It&#39;s unclear to me (ted) if this is something we leave as an exercise for implementors or build in</span>\n        <span class=\"c1\"># as universally handled.</span>\n        <span class=\"k\">for</span> <span class=\"n\">task</span> <span class=\"ow\">in</span> <span class=\"n\">tasks</span><span class=\"p\">:</span>\n            <span class=\"n\">task</span><span class=\"o\">.</span><span class=\"n\">wait</span><span class=\"p\">()</span>\n            <span class=\"n\">task_blocks</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">post_process</span><span class=\"p\">(</span><span class=\"n\">task</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">block</span> <span class=\"ow\">in</span> <span class=\"n\">task_blocks</span><span class=\"p\">:</span>\n                <span class=\"n\">output_blocks</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">block</span><span class=\"p\">)</span>\n        <span class=\"c1\"># END TODO / REMOVE</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">output_blocks</span></div></div>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">&quot;__main__&quot;</span><span class=\"p\">:</span>\n    <span class=\"n\">tool</span> <span class=\"o\">=</span> <span class=\"n\">DIDVideoGeneratorTool</span><span class=\"p\">(</span><span class=\"n\">expressions</span><span class=\"o\">=</span><span class=\"p\">[{</span><span class=\"s2\">&quot;start_frame&quot;</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">&quot;expression&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;happy&quot;</span><span class=\"p\">}])</span>\n    <span class=\"k\">with</span> <span class=\"n\">Steamship</span><span class=\"o\">.</span><span class=\"n\">temporary_workspace</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">client</span><span class=\"p\">:</span>\n        <span class=\"n\">ToolREPL</span><span class=\"p\">(</span><span class=\"n\">tool</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">run_with_client</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"o\">=</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"o\">=</span><span class=\"n\">with_llm</span><span class=\"p\">(</span><span class=\"n\">llm</span><span class=\"o\">=</span><span class=\"n\">OpenAI</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"o\">=</span><span class=\"n\">client</span><span class=\"p\">)))</span>\n</pre></div>", "current_page_name": "_modules/steamship/agents/tools/video_generation/did_video_generator_tool", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "furo_version": "2023.03.27", "furo_navigation_tree": "", "furo_hide_toc": true, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#272822", "foreground": "#f8f8f2"}}}