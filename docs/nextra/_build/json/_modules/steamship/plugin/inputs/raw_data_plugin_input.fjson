{"parents": [{"link": "../../../../", "title": "Module code"}], "title": "steamship.plugin.inputs.raw_data_plugin_input", "body": "<h1>Source code for steamship.plugin.inputs.raw_data_plugin_input</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">annotations</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">base64</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Any</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.base.mime_types</span> <span class=\"kn\">import</span> <span class=\"n\">TEXT_MIME_TYPES</span><span class=\"p\">,</span> <span class=\"n\">MimeTypes</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.base.model</span> <span class=\"kn\">import</span> <span class=\"n\">CamelModel</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.utils.signed_urls</span> <span class=\"kn\">import</span> <span class=\"n\">url_to_bytes</span>\n\n\n<div class=\"viewcode-block\" id=\"is_base64\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.plugin.inputs/#steamship.plugin.inputs.raw_data_plugin_input.is_base64\">[docs]</a><span class=\"k\">def</span> <span class=\"nf\">is_base64</span><span class=\"p\">(</span><span class=\"n\">sb</span><span class=\"p\">):</span>\n    <span class=\"c1\"># noinspection PyBroadException</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">sb</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n            <span class=\"c1\"># If there&#39;s Any unicode here, an exception will be thrown and the function will return false</span>\n            <span class=\"n\">sb_bytes</span> <span class=\"o\">=</span> <span class=\"nb\">bytes</span><span class=\"p\">(</span><span class=\"n\">sb</span><span class=\"p\">,</span> <span class=\"s2\">&quot;ascii&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">elif</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">sb</span><span class=\"p\">,</span> <span class=\"nb\">bytes</span><span class=\"p\">):</span>\n            <span class=\"n\">sb_bytes</span> <span class=\"o\">=</span> <span class=\"n\">sb</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Argument must be string or bytes&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">base64</span><span class=\"o\">.</span><span class=\"n\">b64encode</span><span class=\"p\">(</span><span class=\"n\">base64</span><span class=\"o\">.</span><span class=\"n\">b64decode</span><span class=\"p\">(</span><span class=\"n\">sb_bytes</span><span class=\"p\">))</span> <span class=\"o\">==</span> <span class=\"n\">sb_bytes</span>\n    <span class=\"k\">except</span> <span class=\"ne\">Exception</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"kc\">False</span></div>\n\n\n<div class=\"viewcode-block\" id=\"RawDataPluginInput\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.plugin.inputs/#steamship.plugin.inputs.raw_data_plugin_input.RawDataPluginInput\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">RawDataPluginInput</span><span class=\"p\">(</span><span class=\"n\">CamelModel</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Input for a plugin that accepts raw data, plus a mime type.</span>\n\n<span class=\"sd\">    A plugin author need only ever concern themselves with two fields:</span>\n<span class=\"sd\">    - `data` - Raw bytes</span>\n<span class=\"sd\">    ` `default_mime_type` - The best guess as to `data`&#39;s MIME Type unless otherwise known to be different.</span>\n\n<span class=\"sd\">    In practice, however, the lifecycle of this object involves a bit more under the hood:</span>\n\n<span class=\"sd\">    - **Potentially Base64 Decoding Data**. When decoding from a dict, the `data` field is assumed to be Base64 encoded.</span>\n<span class=\"sd\">      This is to support JSON as a transport encoding over the wire. The constructor automatically performs the</span>\n<span class=\"sd\">      decoding, and the Steamship Engine automatically performs the encoding, so the Plugin Author can mostly ignore</span>\n<span class=\"sd\">      this fact.</span>\n\n<span class=\"sd\">    - **Potentially late-fetching the `data` from a `url`**. Some files are too large to comfortably send as Base64</span>\n<span class=\"sd\">      within JSON. The Steamship Engine sometimes chooses to send an empty `data` field paired with a non-empty</span>\n<span class=\"sd\">      `url` field. When this happens, the constructor proactively, synchronously fetches the contents of that `url`</span>\n<span class=\"sd\">      and assigns it to the `data` field, throwing a SteamshipError if the fetch fails. Again, this is done</span>\n<span class=\"sd\">      automatically so the Plugin Author can mostly ignore this fact.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"n\">plugin_instance</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">default_mime_type</span><span class=\"p\">:</span> <span class=\"n\">MimeTypes</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;data&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;url&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">data</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span> <span class=\"ow\">and</span> <span class=\"n\">is_base64</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">):</span>\n            <span class=\"n\">data_bytes</span> <span class=\"o\">=</span> <span class=\"n\">base64</span><span class=\"o\">.</span><span class=\"n\">b64decode</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n            <span class=\"k\">if</span> <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;defaultMimeType&quot;</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"n\">TEXT_MIME_TYPES</span><span class=\"p\">:</span>\n                <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;data&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">data_bytes</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s2\">&quot;utf-8&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;data&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">data_bytes</span>\n        <span class=\"k\">elif</span> <span class=\"n\">url</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;data&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">url_to_bytes</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">)</span>  <span class=\"c1\"># Resolve the URL into the data field</span>\n            <span class=\"n\">kwargs</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span>\n                <span class=\"s2\">&quot;url&quot;</span>\n            <span class=\"p\">)</span>  <span class=\"c1\"># Remove the URL field to preserve a simple interface for the consumer</span>\n\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span></div>\n</pre></div>", "current_page_name": "_modules/steamship/plugin/inputs/raw_data_plugin_input", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "furo_version": "2023.03.27", "furo_navigation_tree": "", "furo_hide_toc": true, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#272822", "foreground": "#f8f8f2"}}}