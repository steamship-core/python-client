{"parents": [{"link": "../../../../", "title": "Module code"}], "title": "steamship.plugin.outputs.raw_data_plugin_output", "body": "<h1>Source code for steamship.plugin.outputs.raw_data_plugin_output</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">annotations</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">io</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Optional</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">,</span> <span class=\"n\">Union</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pydantic</span> <span class=\"kn\">import</span> <span class=\"n\">BaseModel</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.base</span> <span class=\"kn\">import</span> <span class=\"n\">MimeTypes</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.plugin.outputs.plugin_output</span> <span class=\"kn\">import</span> <span class=\"n\">PluginOutput</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.utils.binary_utils</span> <span class=\"kn\">import</span> <span class=\"n\">flexi_create</span>\n\n\n<div class=\"viewcode-block\" id=\"RawDataPluginOutput\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.plugin.outputs/#steamship.plugin.outputs.raw_data_plugin_output.RawDataPluginOutput\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">RawDataPluginOutput</span><span class=\"p\">(</span><span class=\"n\">PluginOutput</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Represents mime-typed raw data (or a URL pointing to raw data) that can be returned to the engine.</span>\n\n<span class=\"sd\">    As a few examples, you can return:</span>\n<span class=\"sd\">    - Raw text: RawDataPluginOutput(string=raw_text, MimeTypes.TXT)</span>\n<span class=\"sd\">    - Markdown text: RawDataPluginOutput(string=markdown_text, MimeTypes.MKD)</span>\n<span class=\"sd\">    - A PNG image: RawDataPluginOutput(bytes=png_bytes, MimeTypes.PNG)</span>\n<span class=\"sd\">    - A JSON-serializable Dataclass: RawDataPluginOutput(json=dataclass, MimeTypes.JSON)</span>\n<span class=\"sd\">    - Steamship Blocks: RawDataPluginOutput(json=file, MimeTypes.STEAMSHIP_BLOCK_JSON)</span>\n<span class=\"sd\">    - Data uploaded to a pre-signed URL: RawDataPluginOutput(url=presigned_url, MimeTypes.TXT)</span>\n\n<span class=\"sd\">    The `data` field of this object will ALWAYS be Base64 encoded by the constructor. This ensures that the object</span>\n<span class=\"sd\">    is always trivially JSON-serializable over the wire, no matter what it contains.</span>\n\n<span class=\"sd\">    The `mimeType` field of this object should always be filled in if known. The Steamship Engine makes use of it</span>\n<span class=\"sd\">    to proactively select defaults for handling the data returned.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>  <span class=\"c1\"># Note: This is **always** Base64 encoded.</span>\n    <span class=\"n\">mime_type</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">base64string</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">string</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">_bytes</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">BytesIO</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">json</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">mime_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">base64string</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">base64string</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mime_type</span> <span class=\"o\">=</span> <span class=\"n\">mime_type</span> <span class=\"ow\">or</span> <span class=\"n\">MimeTypes</span><span class=\"o\">.</span><span class=\"n\">BINARY</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"c1\"># Base64-encode the data field.</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">mime_type</span><span class=\"p\">,</span> <span class=\"n\">encoding</span> <span class=\"o\">=</span> <span class=\"n\">flexi_create</span><span class=\"p\">(</span>\n                <span class=\"n\">base64string</span><span class=\"o\">=</span><span class=\"n\">base64string</span><span class=\"p\">,</span>\n                <span class=\"n\">string</span><span class=\"o\">=</span><span class=\"n\">string</span><span class=\"p\">,</span>\n                <span class=\"n\">json</span><span class=\"o\">=</span><span class=\"n\">json</span><span class=\"p\">,</span>\n                <span class=\"n\">_bytes</span><span class=\"o\">=</span><span class=\"n\">_bytes</span><span class=\"p\">,</span>\n                <span class=\"n\">mime_type</span><span class=\"o\">=</span><span class=\"n\">mime_type</span><span class=\"p\">,</span>\n                <span class=\"n\">force_base64</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"RawDataPluginOutput.parse_obj\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.plugin.outputs/#steamship.plugin.outputs.raw_data_plugin_output.RawDataPluginOutput.parse_obj\">[docs]</a>    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">parse_obj</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">:</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">BaseModel</span><span class=\"p\">],</span> <span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"n\">Any</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">BaseModel</span><span class=\"p\">:</span>\n        <span class=\"n\">obj</span><span class=\"p\">[</span><span class=\"s2\">&quot;base64string&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;data&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">parse_obj</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"p\">)</span></div></div>\n</pre></div>", "current_page_name": "_modules/steamship/plugin/outputs/raw_data_plugin_output", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "furo_version": "2023.03.27", "furo_navigation_tree": "", "furo_hide_toc": true, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#272822", "foreground": "#f8f8f2"}}}