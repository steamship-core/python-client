{"parents": [{"link": "../../../../", "title": "Module code"}], "title": "steamship.plugin.outputs.model_checkpoint", "body": "<h1>Source code for steamship.plugin.outputs.model_checkpoint</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">import</span> <span class=\"nn\">tempfile</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pathlib</span> <span class=\"kn\">import</span> <span class=\"n\">Path</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">ClassVar</span><span class=\"p\">,</span> <span class=\"n\">Optional</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">steamship</span> <span class=\"kn\">import</span> <span class=\"n\">Steamship</span><span class=\"p\">,</span> <span class=\"n\">SteamshipError</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.base.client</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.base.model</span> <span class=\"kn\">import</span> <span class=\"n\">CamelModel</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.data.workspace</span> <span class=\"kn\">import</span> <span class=\"n\">SignedUrl</span><span class=\"p\">,</span> <span class=\"n\">Workspace</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.utils.signed_urls</span> <span class=\"kn\">import</span> <span class=\"n\">download_from_signed_url</span><span class=\"p\">,</span> <span class=\"n\">upload_to_signed_url</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.utils.zip_archives</span> <span class=\"kn\">import</span> <span class=\"n\">unzip_folder</span><span class=\"p\">,</span> <span class=\"n\">zip_folder</span>\n\n\n<div class=\"viewcode-block\" id=\"ModelCheckpoint\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.plugin.outputs/#steamship.plugin.outputs.model_checkpoint.ModelCheckpoint\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">ModelCheckpoint</span><span class=\"p\">(</span><span class=\"n\">CamelModel</span><span class=\"p\">):</span>\n    <span class=\"c1\"># The default model checkpoint handle unless one is provided.</span>\n    <span class=\"n\">DEFAULT_HANDLE</span><span class=\"p\">:</span> <span class=\"n\">ClassVar</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;default&quot;</span>\n\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Represents the saved state of a trained PluginInstance.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n    <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Client</span>\n    <span class=\"n\">workspace</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Workspace</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n    <span class=\"n\">plugin_instance_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n\n    <span class=\"n\">parent_directory</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Path</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>  <span class=\"c1\"># e.g. /tmp</span>\n    <span class=\"n\">handle</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>  <span class=\"c1\"># The handle of this ModelCheckpoint.</span>\n    <span class=\"n\">plugin_instance_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>  <span class=\"c1\">#</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Steamship</span><span class=\"p\">,</span>\n        <span class=\"n\">parent_directory</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Path</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">handle</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"n\">DEFAULT_HANDLE</span><span class=\"p\">,</span>\n        <span class=\"n\">plugin_instance_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span>\n            <span class=\"n\">client</span><span class=\"o\">=</span><span class=\"n\">client</span><span class=\"p\">,</span>\n            <span class=\"n\">parent_directory</span><span class=\"o\">=</span><span class=\"n\">parent_directory</span><span class=\"p\">,</span>\n            <span class=\"n\">plugin_instance_id</span><span class=\"o\">=</span><span class=\"n\">plugin_instance_id</span><span class=\"p\">,</span>\n            <span class=\"n\">handle</span><span class=\"o\">=</span><span class=\"n\">handle</span> <span class=\"ow\">or</span> <span class=\"n\">ModelCheckpoint</span><span class=\"o\">.</span><span class=\"n\">DEFAULT_HANDLE</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">plugin_instance_id</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">SteamshipError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Null plugin_instance_id provided ModelCheckpoint&quot;</span><span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">workspace</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_workspace</span><span class=\"p\">()</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">parent_directory</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"c1\"># TODO(ted): We may want to not use a tempdir so that we can cache it.</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">parent_directory</span> <span class=\"o\">=</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"n\">tempfile</span><span class=\"o\">.</span><span class=\"n\">mkdtemp</span><span class=\"p\">())</span>\n\n        <span class=\"c1\"># Create the folder path on disk.</span>\n        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Making sure Checkpoint path exists: </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">folder_path_on_disk</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">folder_path_on_disk</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">mkdir</span><span class=\"p\">(</span><span class=\"n\">parents</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">exist_ok</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"ModelCheckpoint.folder_path_on_disk\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.plugin.outputs/#steamship.plugin.outputs.model_checkpoint.ModelCheckpoint.folder_path_on_disk\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">folder_path_on_disk</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Path</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Returns the path to this checkpoint on the local disk.</span>\n\n<span class=\"sd\">        On disk, the model checkpoint is the folder:</span>\n<span class=\"sd\">            `{parent_directory}/{checkpoint_handle}/`</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">parent_directory</span> <span class=\"o\">/</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">handle</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"ModelCheckpoint.archive_path_on_disk\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.plugin.outputs/#steamship.plugin.outputs.model_checkpoint.ModelCheckpoint.archive_path_on_disk\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">archive_path_on_disk</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Path</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Returns the path to the checkpoint archive on disk.</span>\n\n<span class=\"sd\">        On disk, the model checkpoint is the folder:</span>\n<span class=\"sd\">            `{parent_directory}/{checkpoint_handle}.zip`</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">parent_directory</span> <span class=\"o\">/</span> <span class=\"n\">Path</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">handle</span><span class=\"si\">}</span><span class=\"s2\">.zip&quot;</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"ModelCheckpoint.archive_path_in_steamship\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.plugin.outputs/#steamship.plugin.outputs.model_checkpoint.ModelCheckpoint.archive_path_in_steamship\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">archive_path_in_steamship</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">as_handle</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Returns the path to the checkpoint archive on Steamship.</span>\n\n<span class=\"sd\">        On steamship, the checkpoint is archived in the Workspace&#39;s PluginInstance bucket as:</span>\n<span class=\"sd\">        `{plugin_instance_bucket}/{plugin_instance_id}/{checkpoint_handle}.zip`</span>\n\n<span class=\"sd\">        Here we only return the following path since the bucket is specified separately</span>\n<span class=\"sd\">        in the required Steamship API calls: `{plugin_instance_id}/{checkpoint_handle}.zip`</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">plugin_instance_id</span><span class=\"si\">}</span><span class=\"s2\">/</span><span class=\"si\">{</span><span class=\"n\">as_handle</span><span class=\"w\"> </span><span class=\"ow\">or</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">handle</span><span class=\"si\">}</span><span class=\"s2\">.zip&quot;</span></div>\n\n<div class=\"viewcode-block\" id=\"ModelCheckpoint.download_model_bundle\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.plugin.outputs/#steamship.plugin.outputs.model_checkpoint.ModelCheckpoint.download_model_bundle\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">download_model_bundle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Path</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Download&#39;s the model from Steamship and unzips to `parent_directory`&quot;&quot;&quot;</span>\n        <span class=\"n\">download_resp</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">workspace</span><span class=\"o\">.</span><span class=\"n\">create_signed_url</span><span class=\"p\">(</span>\n            <span class=\"n\">SignedUrl</span><span class=\"o\">.</span><span class=\"n\">Request</span><span class=\"p\">(</span>\n                <span class=\"n\">bucket</span><span class=\"o\">=</span><span class=\"n\">SignedUrl</span><span class=\"o\">.</span><span class=\"n\">Bucket</span><span class=\"o\">.</span><span class=\"n\">PLUGIN_DATA</span><span class=\"p\">,</span>\n                <span class=\"n\">filepath</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">archive_path_in_steamship</span><span class=\"p\">(),</span>\n                <span class=\"n\">operation</span><span class=\"o\">=</span><span class=\"n\">SignedUrl</span><span class=\"o\">.</span><span class=\"n\">Operation</span><span class=\"o\">.</span><span class=\"n\">READ</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">download_resp</span> <span class=\"ow\">or</span> <span class=\"ow\">not</span> <span class=\"n\">download_resp</span><span class=\"o\">.</span><span class=\"n\">signed_url</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">SteamshipError</span><span class=\"p\">(</span>\n                <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Received empty Signed URL for model download of &#39;</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">handle</span><span class=\"si\">}</span><span class=\"s2\">.&quot;</span>\n            <span class=\"p\">)</span>\n        <span class=\"n\">download_from_signed_url</span><span class=\"p\">(</span><span class=\"n\">download_resp</span><span class=\"o\">.</span><span class=\"n\">signed_url</span><span class=\"p\">,</span> <span class=\"n\">to_file</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">archive_path_on_disk</span><span class=\"p\">())</span>\n        <span class=\"n\">unzip_folder</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">archive_path_on_disk</span><span class=\"p\">(),</span> <span class=\"n\">into_folder</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">folder_path_on_disk</span><span class=\"p\">())</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">folder_path_on_disk</span><span class=\"p\">()</span></div>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_upload_model_zip</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">as_handle</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Assumes a pre-zipped model, uploads to the requested zip.</span>\n\n<span class=\"sd\">        This is an internal function. Please use upload_model_bundle as an caller.&quot;&quot;&quot;</span>\n        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;ModelCheckpoint:_upload_model_zip - handle=</span><span class=\"si\">{</span><span class=\"n\">as_handle</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">signed_url_resp</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">workspace</span><span class=\"o\">.</span><span class=\"n\">create_signed_url</span><span class=\"p\">(</span>\n            <span class=\"n\">SignedUrl</span><span class=\"o\">.</span><span class=\"n\">Request</span><span class=\"p\">(</span>\n                <span class=\"n\">bucket</span><span class=\"o\">=</span><span class=\"n\">SignedUrl</span><span class=\"o\">.</span><span class=\"n\">Bucket</span><span class=\"o\">.</span><span class=\"n\">PLUGIN_DATA</span><span class=\"p\">,</span>\n                <span class=\"n\">filepath</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">archive_path_in_steamship</span><span class=\"p\">(</span><span class=\"n\">as_handle</span><span class=\"o\">=</span><span class=\"n\">as_handle</span><span class=\"p\">),</span>\n                <span class=\"n\">operation</span><span class=\"o\">=</span><span class=\"n\">SignedUrl</span><span class=\"o\">.</span><span class=\"n\">Operation</span><span class=\"o\">.</span><span class=\"n\">WRITE</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">signed_url_resp</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">SteamshipError</span><span class=\"p\">(</span>\n                <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"s2\">&quot;Empty result on Signed URL request while uploading model checkpoint&quot;</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">signed_url_resp</span><span class=\"o\">.</span><span class=\"n\">signed_url</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">SteamshipError</span><span class=\"p\">(</span>\n                <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"s2\">&quot;Empty signedUrl on Signed URL request while uploading model checkpoint&quot;</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"n\">upload_to_signed_url</span><span class=\"p\">(</span><span class=\"n\">signed_url_resp</span><span class=\"o\">.</span><span class=\"n\">signed_url</span><span class=\"p\">,</span> <span class=\"n\">filepath</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">archive_path_on_disk</span><span class=\"p\">())</span>\n\n<div class=\"viewcode-block\" id=\"ModelCheckpoint.upload_model_bundle\"><a class=\"viewcode-back\" href=\"../../../../../api/steamship.plugin.outputs/#steamship.plugin.outputs.model_checkpoint.ModelCheckpoint.upload_model_bundle\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">upload_model_bundle</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">set_as_default</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">):</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Zips and uploads the Model to steamship&quot;&quot;&quot;</span>\n        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;ModelCheckpoint:upload_model_bundle&quot;</span><span class=\"p\">)</span>\n        <span class=\"n\">zip_folder</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">folder_path_on_disk</span><span class=\"p\">(),</span> <span class=\"n\">into_file</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">archive_path_on_disk</span><span class=\"p\">())</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_upload_model_zip</span><span class=\"p\">()</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">set_as_default</span><span class=\"p\">:</span>\n            <span class=\"c1\"># For simplicity, we&#39;ll assume the checkpoint named `default` is the one to be loaded unless otherwise</span>\n            <span class=\"c1\"># specified. This means that we need to double-upload some checkpoints:</span>\n            <span class=\"c1\"># - Once under the actual checkpoint name (e.g. `epoch-10`)</span>\n            <span class=\"c1\"># - Again under the name: default</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_upload_model_zip</span><span class=\"p\">(</span><span class=\"n\">as_handle</span><span class=\"o\">=</span><span class=\"n\">ModelCheckpoint</span><span class=\"o\">.</span><span class=\"n\">DEFAULT_HANDLE</span><span class=\"p\">)</span></div></div>\n</pre></div>", "current_page_name": "_modules/steamship/plugin/outputs/model_checkpoint", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "furo_version": "2023.03.27", "furo_navigation_tree": "", "furo_hide_toc": true, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#272822", "foreground": "#f8f8f2"}}}