{"parents": [{"link": "../../../", "title": "Module code"}], "title": "steamship.client.steamship", "body": "<h1>Source code for steamship.client.steamship</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">annotations</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">import</span> <span class=\"nn\">uuid</span>\n<span class=\"kn\">from</span> <span class=\"nn\">contextlib</span> <span class=\"kn\">import</span> <span class=\"n\">contextmanager</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">Generator</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">,</span> <span class=\"n\">Optional</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">pydantic</span> <span class=\"kn\">import</span> <span class=\"n\">BaseModel</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.base.client</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.base.configuration</span> <span class=\"kn\">import</span> <span class=\"n\">Configuration</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.base.error</span> <span class=\"kn\">import</span> <span class=\"n\">SteamshipError</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.client.skill_to_provider</span> <span class=\"kn\">import</span> <span class=\"n\">SKILL_TO_PROVIDER</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.client.skills</span> <span class=\"kn\">import</span> <span class=\"n\">Skill</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.client.vendors</span> <span class=\"kn\">import</span> <span class=\"n\">Vendor</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.data.embeddings</span> <span class=\"kn\">import</span> <span class=\"n\">EmbedAndSearchRequest</span><span class=\"p\">,</span> <span class=\"n\">QueryResults</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.data.package.package_instance</span> <span class=\"kn\">import</span> <span class=\"n\">PackageInstance</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.data.plugin.index_plugin_instance</span> <span class=\"kn\">import</span> <span class=\"n\">EmbeddingIndexPluginInstance</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.data.plugin.plugin_instance</span> <span class=\"kn\">import</span> <span class=\"n\">PluginInstance</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.data.plugin.prompt_generation_plugin_instance</span> <span class=\"kn\">import</span> <span class=\"n\">PromptGenerationPluginInstance</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.data.workspace</span> <span class=\"kn\">import</span> <span class=\"n\">Workspace</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.utils.metadata</span> <span class=\"kn\">import</span> <span class=\"n\">hash_dict</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.utils.utils</span> <span class=\"kn\">import</span> <span class=\"n\">create_instance_handle</span>\n\n\n<div class=\"viewcode-block\" id=\"Steamship\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.client/#steamship.Steamship\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">Steamship</span><span class=\"p\">(</span><span class=\"n\">Client</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;Steamship Python Client.&quot;&quot;&quot;</span>\n\n    <span class=\"c1\"># Some plugin instances use special subclasses which provide helper methods and/or more complex</span>\n    <span class=\"c1\"># behavior than typical PluginInstance subclass permits. Examples are:</span>\n    <span class=\"c1\">#</span>\n    <span class=\"c1\"># - Embedding indices (which much coordinate both embedding taggers &amp; vector indices)</span>\n    <span class=\"c1\"># - Prompt generators (which benefit from supporting, prompt-specific, methods)</span>\n    <span class=\"n\">_PLUGIN_INSTANCE_SUBCLASS_OVERRIDES</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;prompt-generation-default&quot;</span><span class=\"p\">:</span> <span class=\"n\">PromptGenerationPluginInstance</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;prompt-generation-trainable-default&quot;</span><span class=\"p\">:</span> <span class=\"n\">PromptGenerationPluginInstance</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;gpt3&quot;</span><span class=\"p\">:</span> <span class=\"n\">PromptGenerationPluginInstance</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;gpt-3&quot;</span><span class=\"p\">:</span> <span class=\"n\">PromptGenerationPluginInstance</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;cerebrium&quot;</span><span class=\"p\">:</span> <span class=\"n\">PromptGenerationPluginInstance</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;embedding-index&quot;</span><span class=\"p\">:</span> <span class=\"n\">EmbeddingIndexPluginInstance</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">api_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">api_base</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">app_base</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">web_base</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">workspace</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">fail_if_workspace_exists</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n        <span class=\"n\">profile</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">config_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">Configuration</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">trust_workspace_config</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">,</span>  <span class=\"c1\"># For use by lambda_handler; don&#39;t fetch the workspace</span>\n        <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">,</span>\n    <span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span>\n            <span class=\"n\">api_key</span><span class=\"o\">=</span><span class=\"n\">api_key</span><span class=\"p\">,</span>\n            <span class=\"n\">api_base</span><span class=\"o\">=</span><span class=\"n\">api_base</span><span class=\"p\">,</span>\n            <span class=\"n\">app_base</span><span class=\"o\">=</span><span class=\"n\">app_base</span><span class=\"p\">,</span>\n            <span class=\"n\">web_base</span><span class=\"o\">=</span><span class=\"n\">web_base</span><span class=\"p\">,</span>\n            <span class=\"n\">workspace</span><span class=\"o\">=</span><span class=\"n\">workspace</span><span class=\"p\">,</span>\n            <span class=\"n\">fail_if_workspace_exists</span><span class=\"o\">=</span><span class=\"n\">fail_if_workspace_exists</span><span class=\"p\">,</span>\n            <span class=\"n\">profile</span><span class=\"o\">=</span><span class=\"n\">profile</span><span class=\"p\">,</span>\n            <span class=\"n\">config_file</span><span class=\"o\">=</span><span class=\"n\">config_file</span><span class=\"p\">,</span>\n            <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">config</span><span class=\"p\">,</span>\n            <span class=\"n\">trust_workspace_config</span><span class=\"o\">=</span><span class=\"n\">trust_workspace_config</span><span class=\"p\">,</span>\n            <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"c1\"># We use object.__setattr__ here in order to bypass Pydantic&#39;s overloading of it (which would block this</span>\n        <span class=\"c1\"># set unless we were to add this as a field)</span>\n        <span class=\"nb\">object</span><span class=\"o\">.</span><span class=\"fm\">__setattr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">&quot;use&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_instance_use</span><span class=\"p\">)</span>\n        <span class=\"nb\">object</span><span class=\"o\">.</span><span class=\"fm\">__setattr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"s2\">&quot;use_plugin&quot;</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_instance_use_plugin</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__repr_args__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">:</span> <span class=\"n\">BaseModel</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Any</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Because of the trick we&#39;ve done with `use` and `use_plugin`, we need to exclude these from __repr__</span>\n<span class=\"sd\">        otherwise we&#39;ll get an infinite recursion.&quot;&quot;&quot;</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span>\n            <span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()</span>\n            <span class=\"k\">if</span> <span class=\"n\">key</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;use&quot;</span> <span class=\"ow\">and</span> <span class=\"n\">key</span> <span class=\"o\">!=</span> <span class=\"s2\">&quot;use_plugin&quot;</span>\n        <span class=\"p\">]</span>\n\n<div class=\"viewcode-block\" id=\"Steamship.embed_and_search\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.client/#steamship.Steamship.embed_and_search\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">embed_and_search</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n        <span class=\"n\">docs</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span>\n        <span class=\"n\">plugin_instance</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n        <span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">QueryResults</span><span class=\"p\">:</span>\n        <span class=\"n\">req</span> <span class=\"o\">=</span> <span class=\"n\">EmbedAndSearchRequest</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"o\">=</span><span class=\"n\">query</span><span class=\"p\">,</span> <span class=\"n\">docs</span><span class=\"o\">=</span><span class=\"n\">docs</span><span class=\"p\">,</span> <span class=\"n\">plugin_instance</span><span class=\"o\">=</span><span class=\"n\">plugin_instance</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"o\">=</span><span class=\"n\">k</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n            <span class=\"s2\">&quot;plugin/instance/embeddingSearch&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">req</span><span class=\"p\">,</span>\n            <span class=\"n\">expect</span><span class=\"o\">=</span><span class=\"n\">QueryResults</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Steamship.temporary_workspace\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.client/#steamship.Steamship.temporary_workspace\">[docs]</a>    <span class=\"nd\">@staticmethod</span>\n    <span class=\"nd\">@contextmanager</span>\n    <span class=\"k\">def</span> <span class=\"nf\">temporary_workspace</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Generator</span><span class=\"p\">[</span><span class=\"s2\">&quot;Steamship&quot;</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">]:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Create a client rooted in a temporary workspace that will be deleted after use.&quot;&quot;&quot;</span>\n        <span class=\"c1\"># Create a new client and switch to a temporary workspace</span>\n        <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Steamship</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"n\">temporary_handle</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;temp-&quot;</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">uuid</span><span class=\"o\">.</span><span class=\"n\">uuid4</span><span class=\"p\">())</span>\n        <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">switch_workspace</span><span class=\"p\">(</span><span class=\"n\">temporary_handle</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Safety check that we are now working form the new workspace.</span>\n        <span class=\"k\">if</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">workspace_handle</span> <span class=\"o\">!=</span> <span class=\"n\">temporary_handle</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">SteamshipError</span><span class=\"p\">(</span>\n                <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Attempted to switch to temporary workspace </span><span class=\"si\">{</span><span class=\"n\">temporary_handle</span><span class=\"si\">}</span><span class=\"s2\"> but the client claimed to be working from </span><span class=\"si\">{</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">workspace_handle</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"k\">yield</span> <span class=\"n\">client</span>\n\n        <span class=\"c1\"># Safely delete the temporary workspace. Here we re-fetch the workspace using the temporary_handle</span>\n        <span class=\"c1\"># in case the user switched workspaces yet again upon the client.</span>\n        <span class=\"n\">workspace</span> <span class=\"o\">=</span> <span class=\"n\">Workspace</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">handle</span><span class=\"o\">=</span><span class=\"n\">temporary_handle</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">workspace</span><span class=\"o\">.</span><span class=\"n\">handle</span> <span class=\"o\">!=</span> <span class=\"n\">temporary_handle</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">SteamshipError</span><span class=\"p\">(</span>\n                <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Was about to delete temporary workspace </span><span class=\"si\">{</span><span class=\"n\">temporary_handle</span><span class=\"si\">}</span><span class=\"s2\"> but its handle is different: </span><span class=\"si\">{</span><span class=\"n\">workspace</span><span class=\"o\">.</span><span class=\"n\">handle</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">workspace</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span></div>\n\n<div class=\"viewcode-block\" id=\"Steamship.use\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.client/#steamship.Steamship.use\">[docs]</a>    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">use</span><span class=\"p\">(</span>\n        <span class=\"n\">package_handle</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n        <span class=\"n\">instance_handle</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">version</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">fetch_if_exists</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">workspace_handle</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">wait_for_init</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">PackageInstance</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Creates/loads an instance of package `package_handle`.</span>\n\n<span class=\"sd\">        The instance is named `instance_handle` and located in the Workspace named `instance_handle`. If no</span>\n<span class=\"sd\">        `instance_handle` is provided, the default is `package_handle`.</span>\n\n<span class=\"sd\">        For example, one may write the following to always get back the same package instance, no matter how many</span>\n<span class=\"sd\">        times you run it, scoped into its own workspace:</span>\n\n<span class=\"sd\">        ```python</span>\n<span class=\"sd\">        instance = Steamship.use(&#39;package-handle&#39;, &#39;instance-handle&#39;)</span>\n<span class=\"sd\">        ```</span>\n\n<span class=\"sd\">        One may also write:</span>\n\n<span class=\"sd\">        ```python</span>\n<span class=\"sd\">        instance = Steamship.use(&#39;package-handle&#39;) # Instance will also be named `package-handle`</span>\n<span class=\"sd\">        ```</span>\n\n<span class=\"sd\">        If you wish to override the usage of a workspace named `instance_handle`, you can provide the `workspace_handle`</span>\n<span class=\"sd\">        parameter.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">instance_handle</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">instance_handle</span> <span class=\"o\">=</span> <span class=\"n\">package_handle</span>\n        <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;workspace&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">workspace_handle</span> <span class=\"ow\">or</span> <span class=\"n\">instance_handle</span>\n        <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Steamship</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">_instance_use</span><span class=\"p\">(</span>\n            <span class=\"n\">package_handle</span><span class=\"o\">=</span><span class=\"n\">package_handle</span><span class=\"p\">,</span>\n            <span class=\"n\">instance_handle</span><span class=\"o\">=</span><span class=\"n\">instance_handle</span><span class=\"p\">,</span>\n            <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">config</span><span class=\"p\">,</span>\n            <span class=\"n\">version</span><span class=\"o\">=</span><span class=\"n\">version</span><span class=\"p\">,</span>\n            <span class=\"n\">fetch_if_exists</span><span class=\"o\">=</span><span class=\"n\">fetch_if_exists</span><span class=\"p\">,</span>\n            <span class=\"n\">wait_for_init</span><span class=\"o\">=</span><span class=\"n\">wait_for_init</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span></div>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_instance_use</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">package_handle</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n        <span class=\"n\">instance_handle</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">version</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">fetch_if_exists</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">wait_for_init</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">PackageInstance</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Creates/loads an instance of package `package_handle`.</span>\n\n<span class=\"sd\">        The instance is named `instance_handle` and located in the workspace this client is anchored to.</span>\n<span class=\"sd\">        If no `instance_handle` is provided, the default is `package_handle`.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">instance_handle</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">config</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                <span class=\"n\">instance_handle</span> <span class=\"o\">=</span> <span class=\"n\">package_handle</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">instance_handle</span> <span class=\"o\">=</span> <span class=\"n\">create_instance_handle</span><span class=\"p\">(</span>\n                    <span class=\"n\">invocable_handle</span><span class=\"o\">=</span><span class=\"n\">package_handle</span><span class=\"p\">,</span> <span class=\"n\">version_handle</span><span class=\"o\">=</span><span class=\"n\">version</span><span class=\"p\">,</span> <span class=\"n\">invocable_config</span><span class=\"o\">=</span><span class=\"n\">config</span>\n                <span class=\"p\">)</span>\n\n        <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">PackageInstance</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"p\">,</span>\n            <span class=\"n\">package_handle</span><span class=\"o\">=</span><span class=\"n\">package_handle</span><span class=\"p\">,</span>\n            <span class=\"n\">package_version_handle</span><span class=\"o\">=</span><span class=\"n\">version</span><span class=\"p\">,</span>\n            <span class=\"n\">handle</span><span class=\"o\">=</span><span class=\"n\">instance_handle</span><span class=\"p\">,</span>\n            <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">config</span><span class=\"p\">,</span>\n            <span class=\"n\">fetch_if_exists</span><span class=\"o\">=</span><span class=\"n\">fetch_if_exists</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">wait_for_init</span><span class=\"p\">:</span>\n            <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">wait_for_init</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"n\">result</span>\n\n<div class=\"viewcode-block\" id=\"Steamship.use_plugin\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.client/#steamship.Steamship.use_plugin\">[docs]</a>    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">use_plugin</span><span class=\"p\">(</span>\n        <span class=\"n\">plugin_handle</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n        <span class=\"n\">instance_handle</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">version</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">fetch_if_exists</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">workspace_handle</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">wait_for_init</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">PluginInstance</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Creates/loads an instance of plugin `plugin_handle`.</span>\n\n<span class=\"sd\">        The instance is named `instance_handle` and located in the Workspace named `instance_handle`.</span>\n<span class=\"sd\">        If no `instance_handle` is provided, the default is `plugin_handle`.</span>\n\n<span class=\"sd\">        For example, one may write the following to always get back the same plugin instance, no matter how many</span>\n<span class=\"sd\">        times you run it, scoped into its own workspace:</span>\n\n<span class=\"sd\">        ```python</span>\n<span class=\"sd\">        instance = Steamship.use_plugin(&#39;plugin-handle&#39;, &#39;instance-handle&#39;)</span>\n<span class=\"sd\">        ```</span>\n\n<span class=\"sd\">        One may also write:</span>\n\n<span class=\"sd\">        ```python</span>\n<span class=\"sd\">        instance = Steamship.use(&#39;plugin-handle&#39;) # Instance will also be named `plugin-handle`</span>\n<span class=\"sd\">        ```</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n        <span class=\"k\">if</span> <span class=\"n\">instance_handle</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"n\">instance_handle</span> <span class=\"o\">=</span> <span class=\"n\">plugin_handle</span>\n        <span class=\"n\">kwargs</span><span class=\"p\">[</span><span class=\"s2\">&quot;workspace&quot;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">workspace_handle</span> <span class=\"ow\">or</span> <span class=\"n\">instance_handle</span>\n        <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Steamship</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">_instance_use_plugin</span><span class=\"p\">(</span>\n            <span class=\"n\">plugin_handle</span><span class=\"o\">=</span><span class=\"n\">plugin_handle</span><span class=\"p\">,</span>\n            <span class=\"n\">instance_handle</span><span class=\"o\">=</span><span class=\"n\">instance_handle</span><span class=\"p\">,</span>\n            <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">config</span><span class=\"p\">,</span>\n            <span class=\"n\">version</span><span class=\"o\">=</span><span class=\"n\">version</span><span class=\"p\">,</span>\n            <span class=\"n\">fetch_if_exists</span><span class=\"o\">=</span><span class=\"n\">fetch_if_exists</span><span class=\"p\">,</span>\n            <span class=\"n\">wait_for_init</span><span class=\"o\">=</span><span class=\"n\">wait_for_init</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"Steamship.use_skill\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.client/#steamship.Steamship.use_skill\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">use_skill</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">skill</span><span class=\"p\">:</span> <span class=\"n\">Skill</span><span class=\"p\">,</span>\n        <span class=\"n\">provider</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Vendor</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">instance_handle</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">fetch_if_exists</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">PluginInstance</span><span class=\"p\">:</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">skill</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">SKILL_TO_PROVIDER</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">SteamshipError</span><span class=\"p\">(</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;Unsupported skill provided. &quot;</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;Use one of our supported skills: </span><span class=\"si\">{</span><span class=\"s1\">&#39;,&#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">SKILL_TO_PROVIDER</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">provider</span> <span class=\"ow\">and</span> <span class=\"n\">provider</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">SKILL_TO_PROVIDER</span><span class=\"p\">[</span><span class=\"n\">skill</span><span class=\"p\">]:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">SteamshipError</span><span class=\"p\">(</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;The provider </span><span class=\"si\">{</span><span class=\"n\">provider</span><span class=\"si\">}</span><span class=\"s2\"> has no support for the skill </span><span class=\"si\">{</span><span class=\"n\">skill</span><span class=\"si\">}</span><span class=\"s2\">.&quot;</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;Use one of the providers that support your skill: &quot;</span>\n                <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"s1\">&#39;,&#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">SKILL_TO_PROVIDER</span><span class=\"p\">[</span><span class=\"n\">skill</span><span class=\"p\">])</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"n\">plugin_setup</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n            <span class=\"n\">SKILL_TO_PROVIDER</span><span class=\"p\">[</span><span class=\"n\">skill</span><span class=\"p\">][</span><span class=\"n\">provider</span><span class=\"p\">]</span>\n            <span class=\"k\">if</span> <span class=\"n\">provider</span>\n            <span class=\"k\">else</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">SKILL_TO_PROVIDER</span><span class=\"p\">[</span><span class=\"n\">skill</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">())[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_instance_use_plugin</span><span class=\"p\">(</span>\n            <span class=\"n\">plugin_handle</span><span class=\"o\">=</span><span class=\"n\">plugin_setup</span><span class=\"p\">[</span><span class=\"s2\">&quot;plugin_handle&quot;</span><span class=\"p\">],</span>\n            <span class=\"n\">instance_handle</span><span class=\"o\">=</span><span class=\"n\">instance_handle</span><span class=\"p\">,</span>\n            <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">plugin_setup</span><span class=\"p\">[</span><span class=\"s2\">&quot;config&quot;</span><span class=\"p\">],</span>\n            <span class=\"n\">fetch_if_exists</span><span class=\"o\">=</span><span class=\"n\">fetch_if_exists</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span></div>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_instance_use_plugin</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">plugin_handle</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span>\n        <span class=\"n\">instance_handle</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">version</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"n\">fetch_if_exists</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n        <span class=\"n\">wait_for_init</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">PluginInstance</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Creates/loads an instance of plugin `plugin_handle`.</span>\n\n<span class=\"sd\">        The instance is named `instance_handle` and located in the workspace this client is anchored to.</span>\n<span class=\"sd\">        If no `instance_handle` is provided, the default is `plugin_handle`.</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">instance_handle</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"n\">config</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n                <span class=\"n\">instance_handle</span> <span class=\"o\">=</span> <span class=\"n\">plugin_handle</span>\n            <span class=\"k\">else</span><span class=\"p\">:</span>\n                <span class=\"n\">instance_handle</span> <span class=\"o\">=</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;</span><span class=\"si\">{</span><span class=\"n\">plugin_handle</span><span class=\"si\">}</span><span class=\"s2\">-</span><span class=\"si\">{</span><span class=\"n\">hash_dict</span><span class=\"p\">({</span><span class=\"o\">**</span><span class=\"n\">config</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s1\">&#39;version&#39;</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">version</span><span class=\"p\">})</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">plugin_handle</span> <span class=\"ow\">in</span> <span class=\"n\">Steamship</span><span class=\"o\">.</span><span class=\"n\">_PLUGIN_INSTANCE_SUBCLASS_OVERRIDES</span><span class=\"p\">:</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">Steamship</span><span class=\"o\">.</span><span class=\"n\">_PLUGIN_INSTANCE_SUBCLASS_OVERRIDES</span><span class=\"p\">[</span><span class=\"n\">plugin_handle</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span>\n                <span class=\"bp\">self</span><span class=\"p\">,</span>\n                <span class=\"n\">plugin_handle</span><span class=\"o\">=</span><span class=\"n\">plugin_handle</span><span class=\"p\">,</span>\n                <span class=\"n\">plugin_version_handle</span><span class=\"o\">=</span><span class=\"n\">version</span><span class=\"p\">,</span>\n                <span class=\"n\">handle</span><span class=\"o\">=</span><span class=\"n\">instance_handle</span><span class=\"p\">,</span>\n                <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">config</span><span class=\"p\">,</span>\n                <span class=\"n\">fetch_if_exists</span><span class=\"o\">=</span><span class=\"n\">fetch_if_exists</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">PluginInstance</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span>\n                <span class=\"bp\">self</span><span class=\"p\">,</span>\n                <span class=\"n\">plugin_handle</span><span class=\"o\">=</span><span class=\"n\">plugin_handle</span><span class=\"p\">,</span>\n                <span class=\"n\">plugin_version_handle</span><span class=\"o\">=</span><span class=\"n\">version</span><span class=\"p\">,</span>\n                <span class=\"n\">handle</span><span class=\"o\">=</span><span class=\"n\">instance_handle</span><span class=\"p\">,</span>\n                <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">config</span><span class=\"p\">,</span>\n                <span class=\"n\">fetch_if_exists</span><span class=\"o\">=</span><span class=\"n\">fetch_if_exists</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">wait_for_init</span><span class=\"p\">:</span>\n            <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">wait_for_init</span><span class=\"p\">()</span>\n        <span class=\"k\">return</span> <span class=\"n\">result</span>\n\n<div class=\"viewcode-block\" id=\"Steamship.get_workspace\"><a class=\"viewcode-back\" href=\"../../../../api/steamship.client/#steamship.Steamship.get_workspace\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">get_workspace</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Workspace</span><span class=\"p\">:</span>\n        <span class=\"c1\"># We should probably add a hard-coded way to get this. The client in a Steamship Plugin/App comes</span>\n        <span class=\"c1\"># pre-configured with an API key and the Workspace in which this client should be operating.</span>\n        <span class=\"c1\"># This is a way to load the model object for that workspace.</span>\n        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;get_workspace() called on client with config workspace </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">workspace_handle</span><span class=\"si\">}</span><span class=\"s2\">/</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">workspace_id</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">workspace</span> <span class=\"o\">=</span> <span class=\"n\">Workspace</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">id_</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">workspace_id</span><span class=\"p\">,</span> <span class=\"n\">handle</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">workspace_handle</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">workspace</span><span class=\"p\">:</span>\n            <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">(</span><span class=\"s2\">&quot;Unable to get workspace.&quot;</span><span class=\"p\">)</span>\n            <span class=\"k\">raise</span> <span class=\"n\">SteamshipError</span><span class=\"p\">(</span>\n                <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"s2\">&quot;Error while retrieving the Workspace associated with this client config.&quot;</span><span class=\"p\">,</span>\n                <span class=\"n\">internal_message</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s2\">&quot;workspace_id=</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">workspace_id</span><span class=\"si\">}</span><span class=\"s2\"> workspace_handle=</span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">workspace_handle</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span>\n            <span class=\"p\">)</span>\n        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Got workspace: </span><span class=\"si\">{</span><span class=\"n\">workspace</span><span class=\"o\">.</span><span class=\"n\">handle</span><span class=\"si\">}</span><span class=\"s2\">/</span><span class=\"si\">{</span><span class=\"n\">workspace</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">workspace</span></div></div>\n</pre></div>", "current_page_name": "_modules/steamship/client/steamship", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "furo_version": "2023.03.27", "furo_navigation_tree": "", "furo_hide_toc": true, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#272822", "foreground": "#f8f8f2"}}}