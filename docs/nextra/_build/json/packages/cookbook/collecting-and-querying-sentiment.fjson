{"parents": [], "prev": null, "next": null, "title": "Collecting and Querying Sentiment", "meta": null, "body": "<section id=\"collecting-and-querying-sentiment\">\n<h1>Collecting and Querying Sentiment<a class=\"headerlink\" href=\"#collecting-and-querying-sentiment\" title=\"Permalink to this heading\">#</a></h1>\n<p>This example package collects plain text files and stores them in Steamship. It runs a sentiment analysis\ntagger (<a class=\"reference external\" href=\"https://www.steamship.com/plugins/oneai-tagger\">OneAI Tagger</a>) on them as they are added.\nTwo endpoints allow fetching all of the positive and negative tagged documents.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">This package accepts text documents, stores them, and runs sentiment analysis.</span>\n<span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Type</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">,</span> <span class=\"n\">Any</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">steamship</span> <span class=\"kn\">import</span> <span class=\"n\">Block</span><span class=\"p\">,</span> <span class=\"n\">File</span><span class=\"p\">,</span> <span class=\"n\">Steamship</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.data</span> <span class=\"kn\">import</span> <span class=\"n\">TagKind</span><span class=\"p\">,</span> <span class=\"n\">SentimentTag</span>\n<span class=\"kn\">from</span> <span class=\"nn\">steamship.invocable</span> <span class=\"kn\">import</span> <span class=\"n\">Config</span><span class=\"p\">,</span> <span class=\"n\">create_handler</span><span class=\"p\">,</span> <span class=\"n\">post</span><span class=\"p\">,</span> <span class=\"n\">PackageService</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">SimpleSentimentPackage</span><span class=\"p\">(</span><span class=\"n\">PackageService</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">client</span><span class=\"p\">:</span> <span class=\"n\">Steamship</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># Instantiate a sentiment plugin.</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">sentiment_plugin_instance</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">use_plugin</span><span class=\"p\">(</span>\n            <span class=\"n\">plugin_handle</span><span class=\"o\">=</span><span class=\"s2\">&quot;oneai-tagger&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">instance_handle</span><span class=\"o\">=</span><span class=\"s2\">&quot;my-sentiment-analyzer&quot;</span><span class=\"p\">,</span>\n            <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;skills&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;sentiment&quot;</span><span class=\"p\">}</span>\n        <span class=\"p\">)</span>\n\n\n    <span class=\"c1\"># This method defines the package user&#39;s endpoint for adding content</span>\n    <span class=\"c1\"># The @post annotation automatically makes the method available as</span>\n    <span class=\"c1\"># an HTTP Post request. The name in the annotation defines the HTTP</span>\n    <span class=\"c1\"># route suffix, see Packages -&gt; Package Project Structure.</span>\n    <span class=\"nd\">@post</span><span class=\"p\">(</span><span class=\"s2\">&quot;add_document&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">add_document</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">content</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Accept a new document in plaintext and start sentiment analysis&quot;&quot;&quot;</span>\n\n        <span class=\"c1\"># Upload the content of the file into Steamship.</span>\n        <span class=\"c1\"># Put the content directly into a Block, since we assume it is plaintext.</span>\n        <span class=\"n\">file</span> <span class=\"o\">=</span> <span class=\"n\">File</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">,</span>\n                           <span class=\"n\">blocks</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">Block</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"n\">content</span><span class=\"p\">)])</span>\n\n        <span class=\"c1\"># Tag the file with the sentiment analysis plugin</span>\n        <span class=\"c1\"># Using a plugin is an asynchronous call within Steamship. The</span>\n        <span class=\"c1\"># operation may not be complete when this method completes,</span>\n        <span class=\"c1\"># but that&#39;s ok. The other methods will query over whatever is</span>\n        <span class=\"c1\"># currently available.</span>\n        <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">tag</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">sentiment_plugin_instance</span><span class=\"o\">.</span><span class=\"n\">handle</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">handle</span>\n\n    <span class=\"nd\">@post</span><span class=\"p\">(</span><span class=\"s2\">&quot;positive_sentiment_documents&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">positive_sentiment_documents</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Query the stored documents for positive-sentiment&quot;&quot;&quot;</span>\n\n        <span class=\"c1\"># Query our documents for Positive sentiment tags</span>\n        <span class=\"n\">positive_files</span> <span class=\"o\">=</span> <span class=\"n\">File</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">,</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;kind </span><span class=\"se\">\\&quot;</span><span class=\"si\">{</span><span class=\"n\">TagKind</span><span class=\"o\">.</span><span class=\"n\">SENTIMENT</span><span class=\"si\">}</span><span class=\"se\">\\&quot;</span><span class=\"s2\"> and name </span><span class=\"se\">\\&quot;</span><span class=\"si\">{</span><span class=\"n\">SentimentTag</span><span class=\"o\">.</span><span class=\"n\">POSITIVE</span><span class=\"si\">}</span><span class=\"se\">\\&quot;</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">files</span>\n\n        <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">blocks</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">text</span> <span class=\"k\">for</span> <span class=\"n\">file</span> <span class=\"ow\">in</span> <span class=\"n\">positive_files</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@post</span><span class=\"p\">(</span><span class=\"s2\">&quot;negative_sentiment_documents&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">negative_sentiment_documents</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]:</span>\n<span class=\"w\">        </span><span class=\"sd\">&quot;&quot;&quot;Query the stored documents for negative-sentiment&quot;&quot;&quot;</span>\n\n        <span class=\"c1\"># Query our documents for Negative sentiment tags</span>\n        <span class=\"n\">negative_files</span> <span class=\"o\">=</span> <span class=\"n\">File</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">,</span>\n            <span class=\"sa\">f</span><span class=\"s2\">&quot;kind </span><span class=\"se\">\\&quot;</span><span class=\"si\">{</span><span class=\"n\">TagKind</span><span class=\"o\">.</span><span class=\"n\">SENTIMENT</span><span class=\"si\">}</span><span class=\"se\">\\&quot;</span><span class=\"s2\"> and name </span><span class=\"se\">\\&quot;</span><span class=\"si\">{</span><span class=\"n\">SentimentTag</span><span class=\"o\">.</span><span class=\"n\">NEGATIVE</span><span class=\"si\">}</span><span class=\"se\">\\&quot;</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">files</span>\n\n        <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">file</span><span class=\"o\">.</span><span class=\"n\">blocks</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">text</span> <span class=\"k\">for</span> <span class=\"n\">file</span> <span class=\"ow\">in</span> <span class=\"n\">negative_files</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n</section>\n", "metatags": "<meta name=\"generator\" content=\"Docutils 0.17.1: http://docutils.sourceforge.net/\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"]], "sourcename": "packages/cookbook/collecting-and-querying-sentiment.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Collecting and Querying Sentiment</a></li>\n</ul>\n", "display_toc": false, "page_source_suffix": ".rst", "current_page_name": "packages/cookbook/collecting-and-querying-sentiment", "sidebars": ["sidebar/brand.html", "sidebar/search.html", "sidebar/scroll-start.html", "sidebar/navigation.html", "sidebar/ethical-ads.html", "sidebar/scroll-end.html", "sidebar/variant-selector.html"], "customsidebar": null, "favicon_url": null, "logo_url": null, "alabaster_version": "0.7.12", "furo_version": "2023.03.27", "furo_navigation_tree": "", "furo_hide_toc": true, "furo_pygments": {"light": {"background": "#f8f8f8", "foreground": "black"}, "dark": {"background": "#272822", "foreground": "#f8f8f2"}}}