# This workflow will run Python tests against Steamship Production

name: Test against Staging

on:
  pull_request:
    branches:
      - staging
  push:
    branches:
      - staging
  workflow_dispatch:

jobs:
  test:
    name: Run test suite
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: [ "3.8" ]
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Virtualenv
        run: python3 -m venv .venv

      - name: Activate Virtualenv
        run: source .venv/bin/activate

      - name: Get pip cache dir
        id: pip-cache
        run: echo "::set-output name=dir::$(pip cache dir)"

      - name: pip cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install Development Dependencies
        run: python -m pip install --upgrade -r requirements.dev.txt

      - name: Install Dependencies
        run: python -m pip install --upgrade -r requirements.txt

      - name: Lint
        run: pre-commit run --all-files --color always

      - name: Install Local Package
        run: python -m pip install -e .

      - name: Test against Steamship Staging
        run: pytest
        env:
          STEAMSHIP_API_KEY: ${{ secrets.STEAMSHIP_STAGING_TEST_KEY }}
          STEAMSHIP_API_BASE: ${{ secrets.STEAMSHIP_STAGING_TEST_API_BASE }}
          STEAMSHIP_APP_BASE: ${{ secrets.STEAMSHIP_STAGING_TEST_APP_BASE }}
